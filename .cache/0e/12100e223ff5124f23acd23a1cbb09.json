{"id":"node_modules/@babylonjs/core/Shaders/oitFinal.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\oitFinal.fragment.js.map","includedInParent":true,"mtime":1704105649723},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\oitFinal.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oitFinalPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"oitFinalPixelShader\";\nconst shader = `precision highp float;\nuniform sampler2D uFrontColor;\nuniform sampler2D uBackColor;\nvoid main() {\nivec2 fragCoord=ivec2(gl_FragCoord.xy);\nvec4 frontColor=texelFetch(uFrontColor,fragCoord,0);\nvec4 backColor=texelFetch(uBackColor,fragCoord,0);\nfloat alphaMultiplier=1.0-frontColor.a;\nglFragColor=vec4(\nfrontColor.rgb+alphaMultiplier*backColor.rgb,\nfrontColor.a+backColor.a\n);\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst oitFinalPixelShader = exports.oitFinalPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":4,"column":34},"generated":{"line":10,"column":34}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":23,"column":2}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":25,"column":24}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":12},"generated":{"line":25,"column":25}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":25,"column":37}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":25,"column":38}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":25,"column":42}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":30},"generated":{"line":25,"column":43}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":25,"column":46}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":19,"column":39},"generated":{"line":25,"column":52}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":7},"generated":{"line":27,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":27,"column":6}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":27,"column":25}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":27,"column":28}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":27,"column":35}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":27,"column":36}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":27,"column":55}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":27,"column":58}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":37},"generated":{"line":28,"column":2}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":41},"generated":{"line":28,"column":6}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":43},"generated":{"line":29,"column":2}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":49},"generated":{"line":30,"column":0}},{"source":"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts","name":null,"original":{"line":21,"column":51},"generated":{"line":30,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/oitFinal.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"oitFinalPixelShader\";\nconst shader = `precision highp float;\runiform sampler2D uFrontColor;\runiform sampler2D uBackColor;\rvoid main() {\rivec2 fragCoord=ivec2(gl_FragCoord.xy);\rvec4 frontColor=texelFetch(uFrontColor,fragCoord,0);\rvec4 backColor=texelFetch(uBackColor,fragCoord,0);\rfloat alphaMultiplier=1.0-frontColor.a;\rglFragColor=vec4(\rfrontColor.rgb+alphaMultiplier*backColor.rgb,\rfrontColor.a+backColor.a\r);\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const oitFinalPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"336c5f946993d028ecbd46555fdb1c41","cacheData":{"env":{}}}