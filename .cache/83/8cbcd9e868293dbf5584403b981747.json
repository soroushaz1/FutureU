{"id":"node_modules/@babylonjs/core/Shaders/fluidRenderingStandardBlur.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\fluidRenderingStandardBlur.fragment.js.map","includedInParent":true,"mtime":1704105649351},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\fluidRenderingStandardBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fluidRenderingStandardBlurPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"fluidRenderingStandardBlurPixelShader\";\nconst shader = `uniform sampler2D textureSampler;\nuniform int filterSize;\nuniform vec2 blurDir;\nvarying vec2 vUV;\nvoid main(void) {\nvec4 s=textureLod(textureSampler,vUV,0.);\nif (s.r==0.) {\nglFragColor=vec4(0.,0.,0.,1.);\nreturn;\n}\nfloat sigma=float(filterSize)/3.0;\nfloat twoSigma2=2.0*sigma*sigma;\nvec4 sum=vec4(0.);\nfloat wsum=0.;\nfor (int x=-filterSize; x<=filterSize; ++x) {\nvec2 coords=vec2(x);\nvec4 sampl=textureLod(textureSampler,vUV+coords*blurDir,0.);\nfloat w=exp(-coords.x*coords.x/twoSigma2);\nsum+=sampl*w;\nwsum+=w;\n}\nsum/=wsum;\nglFragColor=vec4(sum.rgb,1.);\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst fluidRenderingStandardBlurPixelShader = exports.fluidRenderingStandardBlurPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":4,"column":52},"generated":{"line":10,"column":52}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":29,"column":1},"generated":{"line":35,"column":1}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":37,"column":24}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":37,"column":25}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":37,"column":37}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":25},"generated":{"line":37,"column":38}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":29},"generated":{"line":37,"column":42}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":30},"generated":{"line":37,"column":43}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":33},"generated":{"line":37,"column":46}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":31,"column":39},"generated":{"line":37,"column":52}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":39,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":13},"generated":{"line":39,"column":6}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":39,"column":43}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":39,"column":46}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":39,"column":53}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":39,"column":54}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":39,"column":91}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":53},"generated":{"line":39,"column":94}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":55},"generated":{"line":40,"column":2}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":59},"generated":{"line":40,"column":6}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":61},"generated":{"line":41,"column":2}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":67},"generated":{"line":42,"column":0}},{"source":"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts","name":null,"original":{"line":33,"column":69},"generated":{"line":42,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/fluidRenderingStandardBlur.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"fluidRenderingStandardBlurPixelShader\";\nconst shader = `uniform sampler2D textureSampler;\runiform int filterSize;\runiform vec2 blurDir;\rvarying vec2 vUV;\rvoid main(void) {\rvec4 s=textureLod(textureSampler,vUV,0.);\rif (s.r==0.) {\rglFragColor=vec4(0.,0.,0.,1.);\rreturn;\r}\rfloat sigma=float(filterSize)/3.0;\rfloat twoSigma2=2.0*sigma*sigma;\rvec4 sum=vec4(0.);\rfloat wsum=0.;\rfor (int x=-filterSize; x<=filterSize; ++x) {\rvec2 coords=vec2(x);\rvec4 sampl=textureLod(textureSampler,vUV+coords*blurDir,0.);\rfloat w=exp(-coords.x*coords.x/twoSigma2);\rsum+=sampl*w;\rwsum+=w;\r}\rsum/=wsum;\rglFragColor=vec4(sum.rgb,1.);\r}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const fluidRenderingStandardBlurPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"f4c53f82986bd484a16829642700c4ec","cacheData":{"env":{}}}