{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/bumpFragmentMainFunctions.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragmentMainFunctions.js.map","includedInParent":true,"mtime":1704105649178},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragmentMainFunctions.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bumpFragmentMainFunctions = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"bumpFragmentMainFunctions\";\nconst shader = `#if defined(BUMP) || defined(CLEARCOAT_BUMP) || defined(ANISOTROPIC) || defined(DETAIL)\n#if defined(TANGENT) && defined(NORMAL) \nvarying mat3 vTBN;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\nuniform mat4 normalMatrix;\n#if defined(WEBGL2) || defined(WEBGPU)\nmat4 toNormalMatrix(mat4 wMatrix)\n{\nmat4 ret=inverse(wMatrix);\nret=transpose(ret);\nret[0][3]=0.;\nret[1][3]=0.;\nret[2][3]=0.;\nret[3]=vec4(0.,0.,0.,1.);\nreturn ret;\n}\n#else\nmat4 toNormalMatrix(mat4 m)\n{\nfloat\na00=m[0][0],a01=m[0][1],a02=m[0][2],a03=m[0][3],\na10=m[1][0],a11=m[1][1],a12=m[1][2],a13=m[1][3],\na20=m[2][0],a21=m[2][1],a22=m[2][2],a23=m[2][3],\na30=m[3][0],a31=m[3][1],a32=m[3][2],a33=m[3][3],\nb00=a00*a11-a01*a10,\nb01=a00*a12-a02*a10,\nb02=a00*a13-a03*a10,\nb03=a01*a12-a02*a11,\nb04=a01*a13-a03*a11,\nb05=a02*a13-a03*a12,\nb06=a20*a31-a21*a30,\nb07=a20*a32-a22*a30,\nb08=a20*a33-a23*a30,\nb09=a21*a32-a22*a31,\nb10=a21*a33-a23*a31,\nb11=a22*a33-a23*a32,\ndet=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;\nmat4 mi=mat4(\na11*b11-a12*b10+a13*b09,\na02*b10-a01*b11-a03*b09,\na31*b05-a32*b04+a33*b03,\na22*b04-a21*b05-a23*b03,\na12*b08-a10*b11-a13*b07,\na00*b11-a02*b08+a03*b07,\na32*b02-a30*b05-a33*b01,\na20*b05-a22*b02+a23*b01,\na10*b10-a11*b08+a13*b06,\na01*b08-a00*b10-a03*b06,\na30*b04-a31*b02+a33*b00,\na21*b02-a20*b04-a23*b00,\na11*b07-a10*b09-a12*b06,\na00*b09-a01*b07+a02*b06,\na31*b01-a30*b03-a32*b00,\na20*b03-a21*b01+a22*b00)/det;\nreturn mat4(mi[0][0],mi[1][0],mi[2][0],mi[3][0],\nmi[0][1],mi[1][1],mi[2][1],mi[3][1],\nmi[0][2],mi[1][2],mi[2][2],mi[3][2],\nmi[0][3],mi[1][3],mi[2][3],mi[3][3]);\n}\n#endif\n#endif\nvec3 perturbNormalBase(mat3 cotangentFrame,vec3 normal,float scale)\n{\n#ifdef NORMALXYSCALE\nnormal=normalize(normal*vec3(scale,scale,1.0));\n#endif\nreturn normalize(cotangentFrame*normal);\n}\nvec3 perturbNormal(mat3 cotangentFrame,vec3 textureSample,float scale)\n{\nreturn perturbNormalBase(cotangentFrame,textureSample*2.0-1.0,scale);\n}\nmat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv,vec2 tangentSpaceParams)\n{\nvec3 dp1=dFdx(p);\nvec3 dp2=dFdy(p);\nvec2 duv1=dFdx(uv);\nvec2 duv2=dFdy(uv);\nvec3 dp2perp=cross(dp2,normal);\nvec3 dp1perp=cross(normal,dp1);\nvec3 tangent=dp2perp*duv1.x+dp1perp*duv2.x;\nvec3 bitangent=dp2perp*duv1.y+dp1perp*duv2.y;\ntangent*=tangentSpaceParams.x;\nbitangent*=tangentSpaceParams.y;\nfloat det=max(dot(tangent,tangent),dot(bitangent,bitangent));\nfloat invmax=det==0.0 ? 0.0 : inversesqrt(det);\nreturn mat3(tangent*invmax,bitangent*invmax,normal);\n}\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst bumpFragmentMainFunctions = exports.bumpFragmentMainFunctions = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":4,"column":40},"generated":{"line":10,"column":40}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":95,"column":1},"generated":{"line":101,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":96,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":11},"generated":{"line":103,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":12},"generated":{"line":103,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":32},"generated":{"line":103,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":33},"generated":{"line":103,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":37},"generated":{"line":103,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":38},"generated":{"line":103,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":41},"generated":{"line":103,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":97,"column":47},"generated":{"line":103,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":98,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":105,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":13},"generated":{"line":105,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":38},"generated":{"line":105,"column":31}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":38},"generated":{"line":105,"column":34}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":38},"generated":{"line":105,"column":41}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":38},"generated":{"line":105,"column":42}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":38},"generated":{"line":105,"column":67}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":41},"generated":{"line":105,"column":70}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":43},"generated":{"line":106,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":47},"generated":{"line":106,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":49},"generated":{"line":107,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":108,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts","name":null,"original":{"line":99,"column":57},"generated":{"line":108,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragmentMainFunctions.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bumpFragmentMainFunctions\";\nconst shader = `#if defined(BUMP) || defined(CLEARCOAT_BUMP) || defined(ANISOTROPIC) || defined(DETAIL)\n#if defined(TANGENT) && defined(NORMAL) \nvarying mat3 vTBN;\r#endif\n#ifdef OBJECTSPACE_NORMALMAP\nuniform mat4 normalMatrix;\r#if defined(WEBGL2) || defined(WEBGPU)\nmat4 toNormalMatrix(mat4 wMatrix)\r{\rmat4 ret=inverse(wMatrix);\rret=transpose(ret);\rret[0][3]=0.;\rret[1][3]=0.;\rret[2][3]=0.;\rret[3]=vec4(0.,0.,0.,1.);\rreturn ret;\r}\r#else\nmat4 toNormalMatrix(mat4 m)\r{\rfloat\ra00=m[0][0],a01=m[0][1],a02=m[0][2],a03=m[0][3],\ra10=m[1][0],a11=m[1][1],a12=m[1][2],a13=m[1][3],\ra20=m[2][0],a21=m[2][1],a22=m[2][2],a23=m[2][3],\ra30=m[3][0],a31=m[3][1],a32=m[3][2],a33=m[3][3],\rb00=a00*a11-a01*a10,\rb01=a00*a12-a02*a10,\rb02=a00*a13-a03*a10,\rb03=a01*a12-a02*a11,\rb04=a01*a13-a03*a11,\rb05=a02*a13-a03*a12,\rb06=a20*a31-a21*a30,\rb07=a20*a32-a22*a30,\rb08=a20*a33-a23*a30,\rb09=a21*a32-a22*a31,\rb10=a21*a33-a23*a31,\rb11=a22*a33-a23*a32,\rdet=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;\rmat4 mi=mat4(\ra11*b11-a12*b10+a13*b09,\ra02*b10-a01*b11-a03*b09,\ra31*b05-a32*b04+a33*b03,\ra22*b04-a21*b05-a23*b03,\ra12*b08-a10*b11-a13*b07,\ra00*b11-a02*b08+a03*b07,\ra32*b02-a30*b05-a33*b01,\ra20*b05-a22*b02+a23*b01,\ra10*b10-a11*b08+a13*b06,\ra01*b08-a00*b10-a03*b06,\ra30*b04-a31*b02+a33*b00,\ra21*b02-a20*b04-a23*b00,\ra11*b07-a10*b09-a12*b06,\ra00*b09-a01*b07+a02*b06,\ra31*b01-a30*b03-a32*b00,\ra20*b03-a21*b01+a22*b00)/det;\rreturn mat4(mi[0][0],mi[1][0],mi[2][0],mi[3][0],\rmi[0][1],mi[1][1],mi[2][1],mi[3][1],\rmi[0][2],mi[1][2],mi[2][2],mi[3][2],\rmi[0][3],mi[1][3],mi[2][3],mi[3][3]);\r}\r#endif\n#endif\nvec3 perturbNormalBase(mat3 cotangentFrame,vec3 normal,float scale)\r{\r#ifdef NORMALXYSCALE\nnormal=normalize(normal*vec3(scale,scale,1.0));\r#endif\nreturn normalize(cotangentFrame*normal);\r}\rvec3 perturbNormal(mat3 cotangentFrame,vec3 textureSample,float scale)\r{\rreturn perturbNormalBase(cotangentFrame,textureSample*2.0-1.0,scale);\r}\rmat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv,vec2 tangentSpaceParams)\r{\rvec3 dp1=dFdx(p);\rvec3 dp2=dFdy(p);\rvec2 duv1=dFdx(uv);\rvec2 duv2=dFdy(uv);\rvec3 dp2perp=cross(dp2,normal);\rvec3 dp1perp=cross(normal,dp1);\rvec3 tangent=dp2perp*duv1.x+dp1perp*duv2.x;\rvec3 bitangent=dp2perp*duv1.y+dp1perp*duv2.y;\rtangent*=tangentSpaceParams.x;\rbitangent*=tangentSpaceParams.y;\rfloat det=max(dot(tangent,tangent),dot(bitangent,bitangent));\rfloat invmax=det==0.0 ? 0.0 : inversesqrt(det);\rreturn mat3(tangent*invmax,bitangent*invmax,normal);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const bumpFragmentMainFunctions = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"980f01bfc3567face081c6e0c1dd74eb","cacheData":{"env":{}}}