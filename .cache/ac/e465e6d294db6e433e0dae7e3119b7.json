{"id":"node_modules/@babylonjs/core/Materials/Node/Optimizers/nodeMaterialOptimizer.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Materials\\Node\\Optimizers\\nodeMaterialOptimizer.js.map","includedInParent":true,"mtime":1704105649710},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeMaterialOptimizer = void 0;\n/**\n * Root class for all node material optimizers\n */\nclass NodeMaterialOptimizer {\n  /**\n   * Function used to optimize a NodeMaterial graph\n   * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\n   * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\n   */\n  optimize(_vertexOutputNodes, _fragmentOutputNodes) {\n    // Do nothing by default\n  }\n}\nexports.NodeMaterialOptimizer = NodeMaterialOptimizer;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":10,"column":6}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":6,"column":34},"generated":{"line":10,"column":27}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":6,"column":34},"generated":{"line":10,"column":28}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":2}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":16,"column":2}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":16,"column":10}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":20},"generated":{"line":16,"column":11}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":59},"generated":{"line":16,"column":29}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":61},"generated":{"line":16,"column":31}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":102},"generated":{"line":16,"column":51}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":12,"column":102},"generated":{"line":16,"column":53}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":17,"column":4}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":18,"column":2}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":20,"column":0}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":20,"column":7}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":20,"column":8}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":20,"column":29}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":20,"column":32}},{"source":"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":20,"column":53}}],"sources":{"../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts":"import type { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\n\r\n/**\r\n * Root class for all node material optimizers\r\n */\r\nexport class NodeMaterialOptimizer {\r\n    /**\r\n     * Function used to optimize a NodeMaterial graph\r\n     * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\r\n     * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\r\n     */\r\n    public optimize(_vertexOutputNodes: NodeMaterialBlock[], _fragmentOutputNodes: NodeMaterialBlock[]) {\r\n        // Do nothing by default\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"e13e39391f150c46b82bfb6db5dd062f","cacheData":{"env":{}}}