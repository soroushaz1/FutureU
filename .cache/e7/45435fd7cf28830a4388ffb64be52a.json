{"id":"node_modules/@babylonjs/core/Shaders/stereoscopicInterlace.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\stereoscopicInterlace.fragment.js.map","includedInParent":true,"mtime":1704105649980},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\stereoscopicInterlace.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stereoscopicInterlacePixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"stereoscopicInterlacePixelShader\";\nconst shader = `const vec3 TWO=vec3(2.0,2.0,2.0);\nvarying vec2 vUV;\nuniform sampler2D camASampler;\nuniform sampler2D textureSampler;\nuniform vec2 stepSize;\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\nbool useCamA;\nbool useCamB;\nvec2 texCoord1;\nvec2 texCoord2;\nvec3 frag1;\nvec3 frag2;\n#ifdef IS_STEREOSCOPIC_HORIZ\nuseCamB=vUV.x>0.5;\nuseCamA=!useCamB;\ntexCoord1=vec2(useCamB ? (vUV.x-0.5)*2.0 : vUV.x*2.0,vUV.y);\ntexCoord2=vec2(texCoord1.x+stepSize.x,vUV.y);\n#else\n#ifdef IS_STEREOSCOPIC_INTERLACED\nfloat rowNum=floor(vUV.y/stepSize.y);\nuseCamA=mod(rowNum,2.0)==1.0;\nuseCamB=mod(rowNum,2.0)==0.0;\ntexCoord1=vec2(vUV.x,vUV.y);\ntexCoord2=vec2(vUV.x,vUV.y);\n#else\nuseCamB=vUV.y>0.5;\nuseCamA=!useCamB;\ntexCoord1=vec2(vUV.x,useCamB ? (vUV.y-0.5)*2.0 : vUV.y*2.0);\ntexCoord2=vec2(vUV.x,texCoord1.y+stepSize.y);\n#endif\n#endif\nif (useCamB){\nfrag1=texture2D(textureSampler,texCoord1).rgb;\nfrag2=texture2D(textureSampler,texCoord2).rgb;\n}else if (useCamA){\nfrag1=texture2D(camASampler ,texCoord1).rgb;\nfrag2=texture2D(camASampler ,texCoord2).rgb;\n}else {\ndiscard;\n}\ngl_FragColor=vec4((frag1+frag2)/TWO,1.0);\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst stereoscopicInterlacePixelShader = exports.stereoscopicInterlacePixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":4,"column":47},"generated":{"line":10,"column":47}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":55,"column":1}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":57,"column":24}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":57,"column":25}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":24},"generated":{"line":57,"column":37}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":25},"generated":{"line":57,"column":38}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":29},"generated":{"line":57,"column":42}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":30},"generated":{"line":57,"column":43}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":33},"generated":{"line":57,"column":46}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":51,"column":39},"generated":{"line":57,"column":52}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":7},"generated":{"line":59,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":13},"generated":{"line":59,"column":6}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":45},"generated":{"line":59,"column":38}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":45},"generated":{"line":59,"column":41}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":45},"generated":{"line":59,"column":48}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":45},"generated":{"line":59,"column":49}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":45},"generated":{"line":59,"column":81}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":48},"generated":{"line":59,"column":84}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":50},"generated":{"line":60,"column":2}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":54},"generated":{"line":60,"column":6}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":56},"generated":{"line":61,"column":2}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":62},"generated":{"line":62,"column":0}},{"source":"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts","name":null,"original":{"line":53,"column":64},"generated":{"line":62,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/stereoscopicInterlace.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"stereoscopicInterlacePixelShader\";\nconst shader = `const vec3 TWO=vec3(2.0,2.0,2.0);\rvarying vec2 vUV;\runiform sampler2D camASampler;\runiform sampler2D textureSampler;\runiform vec2 stepSize;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rbool useCamA;\rbool useCamB;\rvec2 texCoord1;\rvec2 texCoord2;\rvec3 frag1;\rvec3 frag2;\r#ifdef IS_STEREOSCOPIC_HORIZ\nuseCamB=vUV.x>0.5;\ruseCamA=!useCamB;\rtexCoord1=vec2(useCamB ? (vUV.x-0.5)*2.0 : vUV.x*2.0,vUV.y);\rtexCoord2=vec2(texCoord1.x+stepSize.x,vUV.y);\r#else\n#ifdef IS_STEREOSCOPIC_INTERLACED\nfloat rowNum=floor(vUV.y/stepSize.y);\ruseCamA=mod(rowNum,2.0)==1.0;\ruseCamB=mod(rowNum,2.0)==0.0;\rtexCoord1=vec2(vUV.x,vUV.y);\rtexCoord2=vec2(vUV.x,vUV.y);\r#else\nuseCamB=vUV.y>0.5;\ruseCamA=!useCamB;\rtexCoord1=vec2(vUV.x,useCamB ? (vUV.y-0.5)*2.0 : vUV.y*2.0);\rtexCoord2=vec2(vUV.x,texCoord1.y+stepSize.y);\r#endif\n#endif\nif (useCamB){\rfrag1=texture2D(textureSampler,texCoord1).rgb;\rfrag2=texture2D(textureSampler,texCoord2).rgb;\r}else if (useCamA){\rfrag1=texture2D(camASampler ,texCoord1).rgb;\rfrag2=texture2D(camASampler ,texCoord2).rgb;\r}else {\rdiscard;\r}\rgl_FragColor=vec4((frag1+frag2)/TWO,1.0);\r}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const stereoscopicInterlacePixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"ba158e6244329f64f21117b5a632b597","cacheData":{"env":{}}}