{"id":"node_modules/@babylonjs/core/Shaders/colorCorrection.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\colorCorrection.fragment.js.map","includedInParent":true,"mtime":1704105649206},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\colorCorrection.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorCorrectionPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"colorCorrectionPixelShader\";\nconst shader = `uniform sampler2D textureSampler; \nuniform sampler2D colorTable; \nvarying vec2 vUV;\nconst float SLICE_COUNT=16.0; \nvec4 sampleAs3DTexture(sampler2D textureSampler,vec3 uv,float width) {\nfloat sliceSize=1.0/width; \nfloat slicePixelSize=sliceSize/width; \nfloat sliceInnerSize=slicePixelSize*(width-1.0); \nfloat zSlice0=min(floor(uv.z*width),width-1.0);\nfloat zSlice1=min(zSlice0+1.0,width-1.0);\nfloat xOffset=slicePixelSize*0.5+uv.x*sliceInnerSize;\nfloat s0=xOffset+(zSlice0*sliceSize);\nfloat s1=xOffset+(zSlice1*sliceSize);\nvec4 slice0Color=texture2D(textureSampler,vec2(s0,uv.y));\nvec4 slice1Color=texture2D(textureSampler,vec2(s1,uv.y));\nfloat zOffset=mod(uv.z*width,1.0);\nvec4 result=mix(slice0Color,slice1Color,zOffset);\nreturn result;\n}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\nvec4 screen_color=texture2D(textureSampler,vUV);\ngl_FragColor=sampleAs3DTexture(colorTable,screen_color.rgb,SLICE_COUNT);\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst colorCorrectionPixelShader = exports.colorCorrectionPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":41},"generated":{"line":10,"column":41}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":35,"column":2}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":37,"column":24}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":37,"column":25}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":37,"column":37}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":25},"generated":{"line":37,"column":38}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":29},"generated":{"line":37,"column":42}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":30},"generated":{"line":37,"column":43}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":33},"generated":{"line":37,"column":46}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":31,"column":39},"generated":{"line":37,"column":52}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":39,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":13},"generated":{"line":39,"column":6}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":39},"generated":{"line":39,"column":32}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":39},"generated":{"line":39,"column":35}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":39},"generated":{"line":39,"column":42}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":39},"generated":{"line":39,"column":43}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":39},"generated":{"line":39,"column":69}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":42},"generated":{"line":39,"column":72}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":44},"generated":{"line":40,"column":2}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":48},"generated":{"line":40,"column":6}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":41,"column":2}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":56},"generated":{"line":42,"column":0}},{"source":"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":42,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/colorCorrection.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"colorCorrectionPixelShader\";\nconst shader = `uniform sampler2D textureSampler; \runiform sampler2D colorTable; \rvarying vec2 vUV;\rconst float SLICE_COUNT=16.0; \rvec4 sampleAs3DTexture(sampler2D textureSampler,vec3 uv,float width) {\rfloat sliceSize=1.0/width; \rfloat slicePixelSize=sliceSize/width; \rfloat sliceInnerSize=slicePixelSize*(width-1.0); \rfloat zSlice0=min(floor(uv.z*width),width-1.0);\rfloat zSlice1=min(zSlice0+1.0,width-1.0);\rfloat xOffset=slicePixelSize*0.5+uv.x*sliceInnerSize;\rfloat s0=xOffset+(zSlice0*sliceSize);\rfloat s1=xOffset+(zSlice1*sliceSize);\rvec4 slice0Color=texture2D(textureSampler,vec2(s0,uv.y));\rvec4 slice1Color=texture2D(textureSampler,vec2(s1,uv.y));\rfloat zOffset=mod(uv.z*width,1.0);\rvec4 result=mix(slice0Color,slice1Color,zOffset);\rreturn result;\r}\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rvec4 screen_color=texture2D(textureSampler,vUV);\rgl_FragColor=sampleAs3DTexture(colorTable,screen_color.rgb,SLICE_COUNT);\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const colorCorrectionPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"04808de6f0555da8f280709b37e89351","cacheData":{"env":{}}}