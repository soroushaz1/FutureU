{"id":"node_modules/@babylonjs/core/Shaders/noise.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\noise.fragment.js.map","includedInParent":true,"mtime":1704105649712},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\noise.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noisePixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"noisePixelShader\";\nconst shader = `uniform float brightness;\nuniform float persistence;\nuniform float timeScale;\nvarying vec2 vUV;\nvec2 hash22(vec2 p)\n{\np=p*mat2(127.1,311.7,269.5,183.3);\np=-1.0+2.0*fract(sin(p)*43758.5453123);\nreturn sin(p*6.283+timeScale);\n}\nfloat interpolationNoise(vec2 p)\n{\nvec2 pi=floor(p);\nvec2 pf=p-pi;\nvec2 w=pf*pf*(3.-2.*pf);\nfloat f00=dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\nfloat f01=dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\nfloat f10=dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\nfloat f11=dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\nfloat xm1=mix(f00,f10,w.x);\nfloat xm2=mix(f01,f11,w.x);\nfloat ym=mix(xm1,xm2,w.y); \nreturn ym;\n}\nfloat perlinNoise2D(float x,float y)\n{\nfloat sum=0.0;\nfloat frequency=0.0;\nfloat amplitude=0.0;\nfor(int i=0; i<OCTAVES; i++)\n{\nfrequency=pow(2.0,float(i));\namplitude=pow(persistence,float(i));\nsum=sum+interpolationNoise(vec2(x*frequency,y*frequency))*amplitude;\n}\nreturn sum;\n}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\nfloat x=abs(vUV.x);\nfloat y=abs(vUV.y);\nfloat noise=brightness+(1.0-brightness)*perlinNoise2D(x,y);\ngl_FragColor=vec4(noise,noise,noise,1.0);\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst noisePixelShader = exports.noisePixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":31},"generated":{"line":10,"column":31}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":50,"column":1},"generated":{"line":56,"column":1}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":11},"generated":{"line":58,"column":24}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":58,"column":25}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":58,"column":37}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":25},"generated":{"line":58,"column":38}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":29},"generated":{"line":58,"column":42}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":58,"column":43}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":33},"generated":{"line":58,"column":46}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":52,"column":39},"generated":{"line":58,"column":52}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":60,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":13},"generated":{"line":60,"column":6}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":60,"column":22}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":60,"column":25}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":60,"column":32}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":60,"column":33}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":60,"column":49}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":32},"generated":{"line":60,"column":52}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":34},"generated":{"line":61,"column":2}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":38},"generated":{"line":61,"column":6}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":40},"generated":{"line":62,"column":2}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":46},"generated":{"line":63,"column":0}},{"source":"../../../../lts/core/generated/Shaders/noise.fragment.ts","name":null,"original":{"line":54,"column":48},"generated":{"line":63,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/noise.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"noisePixelShader\";\nconst shader = `uniform float brightness;\runiform float persistence;\runiform float timeScale;\rvarying vec2 vUV;\rvec2 hash22(vec2 p)\r{\rp=p*mat2(127.1,311.7,269.5,183.3);\rp=-1.0+2.0*fract(sin(p)*43758.5453123);\rreturn sin(p*6.283+timeScale);\r}\rfloat interpolationNoise(vec2 p)\r{\rvec2 pi=floor(p);\rvec2 pf=p-pi;\rvec2 w=pf*pf*(3.-2.*pf);\rfloat f00=dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\rfloat f01=dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\rfloat f10=dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\rfloat f11=dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\rfloat xm1=mix(f00,f10,w.x);\rfloat xm2=mix(f01,f11,w.x);\rfloat ym=mix(xm1,xm2,w.y); \rreturn ym;\r}\rfloat perlinNoise2D(float x,float y)\r{\rfloat sum=0.0;\rfloat frequency=0.0;\rfloat amplitude=0.0;\rfor(int i=0; i<OCTAVES; i++)\r{\rfrequency=pow(2.0,float(i));\ramplitude=pow(persistence,float(i));\rsum=sum+interpolationNoise(vec2(x*frequency,y*frequency))*amplitude;\r}\rreturn sum;\r}\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rfloat x=abs(vUV.x);\rfloat y=abs(vUV.y);\rfloat noise=brightness+(1.0-brightness)*perlinNoise2D(x,y);\rgl_FragColor=vec4(noise,noise,noise,1.0);\r}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const noisePixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"028411c64dc3ed32c5b4b1106fb9fa3c","cacheData":{"env":{}}}