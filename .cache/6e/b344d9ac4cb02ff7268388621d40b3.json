{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrBlockAnisotropic.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockAnisotropic.js.map","includedInParent":true,"mtime":1704105649754},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockAnisotropic.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbrBlockAnisotropic = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"pbrBlockAnisotropic\";\nconst shader = `#ifdef ANISOTROPIC\nstruct anisotropicOutParams\n{\nfloat anisotropy;\nvec3 anisotropicTangent;\nvec3 anisotropicBitangent;\nvec3 anisotropicNormal;\n#if DEBUGMODE>0\nvec3 anisotropyMapData;\n#endif\n};\n#define pbr_inline\nvoid anisotropicBlock(\nin vec3 vAnisotropy,\n#ifdef ANISOTROPIC_TEXTURE\nin vec3 anisotropyMapData,\n#endif\nin mat3 TBN,\nin vec3 normalW,\nin vec3 viewDirectionW,\nout anisotropicOutParams outParams\n)\n{\nfloat anisotropy=vAnisotropy.b;\nvec3 anisotropyDirection=vec3(vAnisotropy.xy,0.);\n#ifdef ANISOTROPIC_TEXTURE\nanisotropy*=anisotropyMapData.b;\nanisotropyDirection.rg*=anisotropyMapData.rg*2.0-1.0;\n#if DEBUGMODE>0\noutParams.anisotropyMapData=anisotropyMapData;\n#endif\n#endif\nmat3 anisoTBN=mat3(normalize(TBN[0]),normalize(TBN[1]),normalize(TBN[2]));\nvec3 anisotropicTangent=normalize(anisoTBN*anisotropyDirection);\nvec3 anisotropicBitangent=normalize(cross(anisoTBN[2],anisotropicTangent));\noutParams.anisotropy=anisotropy;\noutParams.anisotropicTangent=anisotropicTangent;\noutParams.anisotropicBitangent=anisotropicBitangent;\noutParams.anisotropicNormal=getAnisotropicBentNormals(anisotropicTangent,anisotropicBitangent,normalW,viewDirectionW,anisotropy);\n}\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst pbrBlockAnisotropic = exports.pbrBlockAnisotropic = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":4,"column":34},"generated":{"line":10,"column":34}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":46,"column":1},"generated":{"line":52,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":11},"generated":{"line":54,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":54,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":32},"generated":{"line":54,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":33},"generated":{"line":54,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":37},"generated":{"line":54,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":38},"generated":{"line":54,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":41},"generated":{"line":54,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":48,"column":47},"generated":{"line":54,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":7},"generated":{"line":56,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":13},"generated":{"line":56,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":56,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":56,"column":28}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":56,"column":35}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":56,"column":36}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":56,"column":55}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":35},"generated":{"line":56,"column":58}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":37},"generated":{"line":57,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":41},"generated":{"line":57,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":43},"generated":{"line":58,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":49},"generated":{"line":59,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts","name":null,"original":{"line":50,"column":51},"generated":{"line":59,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAnisotropic.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrBlockAnisotropic\";\nconst shader = `#ifdef ANISOTROPIC\nstruct anisotropicOutParams\r{\rfloat anisotropy;\rvec3 anisotropicTangent;\rvec3 anisotropicBitangent;\rvec3 anisotropicNormal;\r#if DEBUGMODE>0\nvec3 anisotropyMapData;\r#endif\n};\r#define pbr_inline\nvoid anisotropicBlock(\rin vec3 vAnisotropy,\r#ifdef ANISOTROPIC_TEXTURE\nin vec3 anisotropyMapData,\r#endif\nin mat3 TBN,\rin vec3 normalW,\rin vec3 viewDirectionW,\rout anisotropicOutParams outParams\r)\r{\rfloat anisotropy=vAnisotropy.b;\rvec3 anisotropyDirection=vec3(vAnisotropy.xy,0.);\r#ifdef ANISOTROPIC_TEXTURE\nanisotropy*=anisotropyMapData.b;\ranisotropyDirection.rg*=anisotropyMapData.rg*2.0-1.0;\r#if DEBUGMODE>0\noutParams.anisotropyMapData=anisotropyMapData;\r#endif\n#endif\nmat3 anisoTBN=mat3(normalize(TBN[0]),normalize(TBN[1]),normalize(TBN[2]));\rvec3 anisotropicTangent=normalize(anisoTBN*anisotropyDirection);\rvec3 anisotropicBitangent=normalize(cross(anisoTBN[2],anisotropicTangent));\routParams.anisotropy=anisotropy;\routParams.anisotropicTangent=anisotropicTangent;\routParams.anisotropicBitangent=anisotropicBitangent;\routParams.anisotropicNormal=getAnisotropicBentNormals(anisotropicTangent,anisotropicBitangent,normalW,viewDirectionW,anisotropy);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const pbrBlockAnisotropic = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"4b19348942ba44efc3316140d1f81ccf","cacheData":{"env":{}}}