{"id":"node_modules/@babylonjs/core/Shaders/glowBlurPostProcess.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\glowBlurPostProcess.fragment.js.map","includedInParent":true,"mtime":1704105649413},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\glowBlurPostProcess.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.glowBlurPostProcessPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"glowBlurPostProcessPixelShader\";\nconst shader = `varying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform vec2 screenSize;\nuniform vec2 direction;\nuniform float blurWidth;\nfloat getLuminance(vec3 color)\n{\nreturn dot(color,vec3(0.2126,0.7152,0.0722));\n}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\nfloat weights[7];\nweights[0]=0.05;\nweights[1]=0.1;\nweights[2]=0.2;\nweights[3]=0.3;\nweights[4]=0.2;\nweights[5]=0.1;\nweights[6]=0.05;\nvec2 texelSize=vec2(1.0/screenSize.x,1.0/screenSize.y);\nvec2 texelStep=texelSize*direction*blurWidth;\nvec2 start=vUV-3.0*texelStep;\nvec4 baseColor=vec4(0.,0.,0.,0.);\nvec2 texelOffset=vec2(0.,0.);\nfor (int i=0; i<7; i++)\n{\nvec4 texel=texture2D(textureSampler,start+texelOffset);\nbaseColor.a+=texel.a*weights[i];\nfloat luminance=getLuminance(baseColor.rgb);\nfloat luminanceTexel=getLuminance(texel.rgb);\nfloat choice=step(luminanceTexel,luminance);\nbaseColor.rgb=choice*baseColor.rgb+(1.0-choice)*texel.rgb;\ntexelOffset+=texelStep;\n}\ngl_FragColor=baseColor;\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst glowBlurPostProcessPixelShader = exports.glowBlurPostProcessPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":4,"column":45},"generated":{"line":10,"column":45}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":47,"column":2}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":11},"generated":{"line":49,"column":24}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":12},"generated":{"line":49,"column":25}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":49,"column":37}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":49,"column":38}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":49,"column":42}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":30},"generated":{"line":49,"column":43}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":33},"generated":{"line":49,"column":46}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":43,"column":39},"generated":{"line":49,"column":52}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":7},"generated":{"line":51,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":51,"column":6}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":43},"generated":{"line":51,"column":36}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":43},"generated":{"line":51,"column":39}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":43},"generated":{"line":51,"column":46}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":43},"generated":{"line":51,"column":47}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":43},"generated":{"line":51,"column":77}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":46},"generated":{"line":51,"column":80}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":48},"generated":{"line":52,"column":2}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":52},"generated":{"line":52,"column":6}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":54},"generated":{"line":53,"column":2}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":60},"generated":{"line":54,"column":0}},{"source":"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts","name":null,"original":{"line":45,"column":62},"generated":{"line":54,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/glowBlurPostProcess.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"glowBlurPostProcessPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform vec2 screenSize;\runiform vec2 direction;\runiform float blurWidth;\rfloat getLuminance(vec3 color)\r{\rreturn dot(color,vec3(0.2126,0.7152,0.0722));\r}\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rfloat weights[7];\rweights[0]=0.05;\rweights[1]=0.1;\rweights[2]=0.2;\rweights[3]=0.3;\rweights[4]=0.2;\rweights[5]=0.1;\rweights[6]=0.05;\rvec2 texelSize=vec2(1.0/screenSize.x,1.0/screenSize.y);\rvec2 texelStep=texelSize*direction*blurWidth;\rvec2 start=vUV-3.0*texelStep;\rvec4 baseColor=vec4(0.,0.,0.,0.);\rvec2 texelOffset=vec2(0.,0.);\rfor (int i=0; i<7; i++)\r{\rvec4 texel=texture2D(textureSampler,start+texelOffset);\rbaseColor.a+=texel.a*weights[i];\rfloat luminance=getLuminance(baseColor.rgb);\rfloat luminanceTexel=getLuminance(texel.rgb);\rfloat choice=step(luminanceTexel,luminance);\rbaseColor.rgb=choice*baseColor.rgb+(1.0-choice)*texel.rgb;\rtexelOffset+=texelStep;\r}\rgl_FragColor=baseColor;\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const glowBlurPostProcessPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"3a728c6a39cede6b261c6682c4283d82","cacheData":{"env":{}}}