{"id":"node_modules/@babylonjs/core/Shaders/volumetricLightScattering.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\volumetricLightScattering.fragment.js.map","includedInParent":true,"mtime":1704105650055},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\volumetricLightScattering.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.volumetricLightScatteringPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"volumetricLightScatteringPixelShader\";\nconst shader = `uniform sampler2D textureSampler;\nuniform sampler2D lightScatteringSampler;\nuniform float decay;\nuniform float exposure;\nuniform float weight;\nuniform float density;\nuniform vec2 meshPositionOnScreen;\nvarying vec2 vUV;\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\nvec2 tc=vUV;\nvec2 deltaTexCoord=(tc-meshPositionOnScreen.xy);\ndeltaTexCoord*=1.0/float(NUM_SAMPLES)*density;\nfloat illuminationDecay=1.0;\nvec4 color=texture2D(lightScatteringSampler,tc)*0.4;\nfor(int i=0; i<NUM_SAMPLES; i++) {\ntc-=deltaTexCoord;\nvec4 dataSample=texture2D(lightScatteringSampler,tc)*0.4;\ndataSample*=illuminationDecay*weight;\ncolor+=dataSample;\nilluminationDecay*=decay;\n}\nvec4 realColor=texture2D(textureSampler,vUV);\ngl_FragColor=((vec4((vec3(color.r,color.g,color.b)*exposure),1))+(realColor*(1.5-0.4)));\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst volumetricLightScatteringPixelShader = exports.volumetricLightScatteringPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":4,"column":51},"generated":{"line":10,"column":51}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":38,"column":1}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":40,"column":24}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":12},"generated":{"line":40,"column":25}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":40,"column":37}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":25},"generated":{"line":40,"column":38}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":29},"generated":{"line":40,"column":42}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":30},"generated":{"line":40,"column":43}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":33},"generated":{"line":40,"column":46}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":34,"column":39},"generated":{"line":40,"column":52}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":7},"generated":{"line":42,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":42,"column":6}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":49},"generated":{"line":42,"column":42}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":49},"generated":{"line":42,"column":45}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":49},"generated":{"line":42,"column":52}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":49},"generated":{"line":42,"column":53}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":49},"generated":{"line":42,"column":89}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":52},"generated":{"line":42,"column":92}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":54},"generated":{"line":43,"column":2}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":58},"generated":{"line":43,"column":6}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":60},"generated":{"line":44,"column":2}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":66},"generated":{"line":45,"column":0}},{"source":"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts","name":null,"original":{"line":36,"column":68},"generated":{"line":45,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/volumetricLightScattering.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"volumetricLightScatteringPixelShader\";\nconst shader = `uniform sampler2D textureSampler;\runiform sampler2D lightScatteringSampler;\runiform float decay;\runiform float exposure;\runiform float weight;\runiform float density;\runiform vec2 meshPositionOnScreen;\rvarying vec2 vUV;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\r#define CUSTOM_FRAGMENT_MAIN_BEGIN\nvec2 tc=vUV;\rvec2 deltaTexCoord=(tc-meshPositionOnScreen.xy);\rdeltaTexCoord*=1.0/float(NUM_SAMPLES)*density;\rfloat illuminationDecay=1.0;\rvec4 color=texture2D(lightScatteringSampler,tc)*0.4;\rfor(int i=0; i<NUM_SAMPLES; i++) {\rtc-=deltaTexCoord;\rvec4 dataSample=texture2D(lightScatteringSampler,tc)*0.4;\rdataSample*=illuminationDecay*weight;\rcolor+=dataSample;\rilluminationDecay*=decay;\r}\rvec4 realColor=texture2D(textureSampler,vUV);\rgl_FragColor=((vec4((vec3(color.r,color.g,color.b)*exposure),1))+(realColor*(1.5-0.4)));\r#define CUSTOM_FRAGMENT_MAIN_END\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const volumetricLightScatteringPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"408f3769592f114e0f24f827e05d9543","cacheData":{"env":{}}}