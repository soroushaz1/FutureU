{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\samplerFragmentAlternateDeclaration.js.map","includedInParent":true,"mtime":1704105649876},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\samplerFragmentAlternateDeclaration.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.samplerFragmentAlternateDeclaration = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"samplerFragmentAlternateDeclaration\";\nconst shader = `#ifdef _DEFINENAME_\n#if _DEFINENAME_DIRECTUV==1\n#define v_VARYINGNAME_UV vMainUV1\n#elif _DEFINENAME_DIRECTUV==2\n#define v_VARYINGNAME_UV vMainUV2\n#elif _DEFINENAME_DIRECTUV==3\n#define v_VARYINGNAME_UV vMainUV3\n#elif _DEFINENAME_DIRECTUV==4\n#define v_VARYINGNAME_UV vMainUV4\n#elif _DEFINENAME_DIRECTUV==5\n#define v_VARYINGNAME_UV vMainUV5\n#elif _DEFINENAME_DIRECTUV==6\n#define v_VARYINGNAME_UV vMainUV6\n#else\nvarying vec2 v_VARYINGNAME_UV;\n#endif\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst samplerFragmentAlternateDeclaration = exports.samplerFragmentAlternateDeclaration = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":4,"column":50},"generated":{"line":10,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":28,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":30,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":12},"generated":{"line":30,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":32},"generated":{"line":30,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":33},"generated":{"line":30,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":37},"generated":{"line":30,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":38},"generated":{"line":30,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":41},"generated":{"line":30,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":24,"column":47},"generated":{"line":30,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":7},"generated":{"line":32,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":32,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":32,"column":41}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":32,"column":44}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":32,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":32,"column":52}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":32,"column":87}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":51},"generated":{"line":32,"column":90}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":53},"generated":{"line":33,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":57},"generated":{"line":33,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":59},"generated":{"line":34,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":65},"generated":{"line":35,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts","name":null,"original":{"line":26,"column":67},"generated":{"line":35,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/samplerFragmentAlternateDeclaration.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"samplerFragmentAlternateDeclaration\";\nconst shader = `#ifdef _DEFINENAME_\n#if _DEFINENAME_DIRECTUV==1\n#define v_VARYINGNAME_UV vMainUV1\n#elif _DEFINENAME_DIRECTUV==2\n#define v_VARYINGNAME_UV vMainUV2\n#elif _DEFINENAME_DIRECTUV==3\n#define v_VARYINGNAME_UV vMainUV3\n#elif _DEFINENAME_DIRECTUV==4\n#define v_VARYINGNAME_UV vMainUV4\n#elif _DEFINENAME_DIRECTUV==5\n#define v_VARYINGNAME_UV vMainUV5\n#elif _DEFINENAME_DIRECTUV==6\n#define v_VARYINGNAME_UV vMainUV6\n#else\nvarying vec2 v_VARYINGNAME_UV;\r#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const samplerFragmentAlternateDeclaration = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"bd694a302b319144d67f36d3c42f1c01","cacheData":{"env":{}}}