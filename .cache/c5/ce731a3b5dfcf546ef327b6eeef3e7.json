{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/bumpFragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragment.js.map","includedInParent":true,"mtime":1704105649178},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpFragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bumpFragment = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"bumpFragment\";\nconst shader = `vec2 uvOffset=vec2(0.0,0.0);\n#if defined(BUMP) || defined(PARALLAX) || defined(DETAIL)\n#ifdef NORMALXYSCALE\nfloat normalScale=1.0;\n#elif defined(BUMP)\nfloat normalScale=vBumpInfos.y;\n#else\nfloat normalScale=1.0;\n#endif\n#if defined(TANGENT) && defined(NORMAL)\nmat3 TBN=vTBN;\n#elif defined(BUMP)\nvec2 TBNUV=gl_FrontFacing ? vBumpUV : -vBumpUV;\nmat3 TBN=cotangent_frame(normalW*normalScale,vPositionW,TBNUV,vTangentSpaceParams);\n#else\nvec2 TBNUV=gl_FrontFacing ? vDetailUV : -vDetailUV;\nmat3 TBN=cotangent_frame(normalW*normalScale,vPositionW,TBNUV,vec2(1.,1.));\n#endif\n#elif defined(ANISOTROPIC)\n#if defined(TANGENT) && defined(NORMAL)\nmat3 TBN=vTBN;\n#else\nvec2 TBNUV=gl_FrontFacing ? vMainUV1 : -vMainUV1;\nmat3 TBN=cotangent_frame(normalW,vPositionW,TBNUV,vec2(1.,1.));\n#endif\n#endif\n#ifdef PARALLAX\nmat3 invTBN=transposeMat3(TBN);\n#ifdef PARALLAXOCCLUSION\nuvOffset=parallaxOcclusion(invTBN*-viewDirectionW,invTBN*normalW,vBumpUV,vBumpInfos.z);\n#else\nuvOffset=parallaxOffset(invTBN*viewDirectionW,vBumpInfos.z);\n#endif\n#endif\n#ifdef DETAIL\nvec4 detailColor=texture2D(detailSampler,vDetailUV+uvOffset);\nvec2 detailNormalRG=detailColor.wy*2.0-1.0;\nfloat detailNormalB=sqrt(1.-saturate(dot(detailNormalRG,detailNormalRG)));\nvec3 detailNormal=vec3(detailNormalRG,detailNormalB);\n#endif\n#ifdef BUMP\n#ifdef OBJECTSPACE_NORMALMAP\n#define CUSTOM_FRAGMENT_BUMP_FRAGMENT\nnormalW=normalize(texture2D(bumpSampler,vBumpUV).xyz *2.0-1.0);\nnormalW=normalize(mat3(normalMatrix)*normalW);\n#elif !defined(DETAIL)\nnormalW=perturbNormal(TBN,texture2D(bumpSampler,vBumpUV+uvOffset).xyz,vBumpInfos.y);\n#else\nvec3 bumpNormal=texture2D(bumpSampler,vBumpUV+uvOffset).xyz*2.0-1.0;\n#if DETAIL_NORMALBLENDMETHOD==0 \ndetailNormal.xy*=vDetailInfos.z;\nvec3 blendedNormal=normalize(vec3(bumpNormal.xy+detailNormal.xy,bumpNormal.z*detailNormal.z));\n#elif DETAIL_NORMALBLENDMETHOD==1 \ndetailNormal.xy*=vDetailInfos.z;\nbumpNormal+=vec3(0.0,0.0,1.0);\ndetailNormal*=vec3(-1.0,-1.0,1.0);\nvec3 blendedNormal=bumpNormal*dot(bumpNormal,detailNormal)/bumpNormal.z-detailNormal;\n#endif\nnormalW=perturbNormalBase(TBN,blendedNormal,vBumpInfos.y);\n#endif\n#elif defined(DETAIL)\ndetailNormal.xy*=vDetailInfos.z;\nnormalW=perturbNormalBase(TBN,detailNormal,vDetailInfos.z);\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst bumpFragment = exports.bumpFragment = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":10,"column":27}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":69,"column":1},"generated":{"line":75,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":11},"generated":{"line":77,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":12},"generated":{"line":77,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":32},"generated":{"line":77,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":33},"generated":{"line":77,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":37},"generated":{"line":77,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":38},"generated":{"line":77,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":41},"generated":{"line":77,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":71,"column":47},"generated":{"line":77,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":72,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":7},"generated":{"line":79,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":13},"generated":{"line":79,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":25},"generated":{"line":79,"column":18}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":25},"generated":{"line":79,"column":21}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":25},"generated":{"line":79,"column":28}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":25},"generated":{"line":79,"column":29}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":25},"generated":{"line":79,"column":41}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":28},"generated":{"line":79,"column":44}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":30},"generated":{"line":80,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":34},"generated":{"line":80,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":36},"generated":{"line":81,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":42},"generated":{"line":82,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts","name":null,"original":{"line":73,"column":44},"generated":{"line":82,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/bumpFragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bumpFragment\";\nconst shader = `vec2 uvOffset=vec2(0.0,0.0);\r#if defined(BUMP) || defined(PARALLAX) || defined(DETAIL)\n#ifdef NORMALXYSCALE\nfloat normalScale=1.0;\r#elif defined(BUMP)\nfloat normalScale=vBumpInfos.y;\r#else\nfloat normalScale=1.0;\r#endif\n#if defined(TANGENT) && defined(NORMAL)\nmat3 TBN=vTBN;\r#elif defined(BUMP)\nvec2 TBNUV=gl_FrontFacing ? vBumpUV : -vBumpUV;\rmat3 TBN=cotangent_frame(normalW*normalScale,vPositionW,TBNUV,vTangentSpaceParams);\r#else\nvec2 TBNUV=gl_FrontFacing ? vDetailUV : -vDetailUV;\rmat3 TBN=cotangent_frame(normalW*normalScale,vPositionW,TBNUV,vec2(1.,1.));\r#endif\n#elif defined(ANISOTROPIC)\n#if defined(TANGENT) && defined(NORMAL)\nmat3 TBN=vTBN;\r#else\nvec2 TBNUV=gl_FrontFacing ? vMainUV1 : -vMainUV1;\rmat3 TBN=cotangent_frame(normalW,vPositionW,TBNUV,vec2(1.,1.));\r#endif\n#endif\n#ifdef PARALLAX\nmat3 invTBN=transposeMat3(TBN);\r#ifdef PARALLAXOCCLUSION\nuvOffset=parallaxOcclusion(invTBN*-viewDirectionW,invTBN*normalW,vBumpUV,vBumpInfos.z);\r#else\nuvOffset=parallaxOffset(invTBN*viewDirectionW,vBumpInfos.z);\r#endif\n#endif\n#ifdef DETAIL\nvec4 detailColor=texture2D(detailSampler,vDetailUV+uvOffset);\rvec2 detailNormalRG=detailColor.wy*2.0-1.0;\rfloat detailNormalB=sqrt(1.-saturate(dot(detailNormalRG,detailNormalRG)));\rvec3 detailNormal=vec3(detailNormalRG,detailNormalB);\r#endif\n#ifdef BUMP\n#ifdef OBJECTSPACE_NORMALMAP\n#define CUSTOM_FRAGMENT_BUMP_FRAGMENT\nnormalW=normalize(texture2D(bumpSampler,vBumpUV).xyz *2.0-1.0);\rnormalW=normalize(mat3(normalMatrix)*normalW);\r#elif !defined(DETAIL)\nnormalW=perturbNormal(TBN,texture2D(bumpSampler,vBumpUV+uvOffset).xyz,vBumpInfos.y);\r#else\nvec3 bumpNormal=texture2D(bumpSampler,vBumpUV+uvOffset).xyz*2.0-1.0;\r#if DETAIL_NORMALBLENDMETHOD==0 \ndetailNormal.xy*=vDetailInfos.z;\rvec3 blendedNormal=normalize(vec3(bumpNormal.xy+detailNormal.xy,bumpNormal.z*detailNormal.z));\r#elif DETAIL_NORMALBLENDMETHOD==1 \ndetailNormal.xy*=vDetailInfos.z;\rbumpNormal+=vec3(0.0,0.0,1.0);\rdetailNormal*=vec3(-1.0,-1.0,1.0);\rvec3 blendedNormal=bumpNormal*dot(bumpNormal,detailNormal)/bumpNormal.z-detailNormal;\r#endif\nnormalW=perturbNormalBase(TBN,blendedNormal,vBumpInfos.y);\r#endif\n#elif defined(DETAIL)\ndetailNormal.xy*=vDetailInfos.z;\rnormalW=perturbNormalBase(TBN,detailNormal,vDetailInfos.z);\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const bumpFragment = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"a17af03dff0bb64d2f9d67ff9d195a83","cacheData":{"env":{}}}