{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\lightFragmentDeclaration.js.map","includedInParent":true,"mtime":1704105649598},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\lightFragmentDeclaration.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lightFragmentDeclaration = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"lightFragmentDeclaration\";\nconst shader = `#ifdef LIGHT{X}\nuniform vec4 vLightData{X};\nuniform vec4 vLightDiffuse{X};\n#ifdef SPECULARTERM\nuniform vec4 vLightSpecular{X};\n#else\nvec4 vLightSpecular{X}=vec4(0.);\n#endif\n#ifdef SHADOW{X}\n#ifdef SHADOWCSM{X}\nuniform mat4 lightMatrix{X}[SHADOWCSMNUM_CASCADES{X}];\nuniform float viewFrustumZ{X}[SHADOWCSMNUM_CASCADES{X}];\nuniform float frustumLengths{X}[SHADOWCSMNUM_CASCADES{X}];\nuniform float cascadeBlendFactor{X};\nvarying vec4 vPositionFromLight{X}[SHADOWCSMNUM_CASCADES{X}];\nvarying float vDepthMetric{X}[SHADOWCSMNUM_CASCADES{X}];\nvarying vec4 vPositionFromCamera{X};\n#if defined(SHADOWPCSS{X})\nuniform highp sampler2DArrayShadow shadowSampler{X};\nuniform highp sampler2DArray depthSampler{X};\nuniform vec2 lightSizeUVCorrection{X}[SHADOWCSMNUM_CASCADES{X}];\nuniform float depthCorrection{X}[SHADOWCSMNUM_CASCADES{X}];\nuniform float penumbraDarkness{X};\n#elif defined(SHADOWPCF{X})\nuniform highp sampler2DArrayShadow shadowSampler{X};\n#else\nuniform highp sampler2DArray shadowSampler{X};\n#endif\n#ifdef SHADOWCSMDEBUG{X}\nconst vec3 vCascadeColorsMultiplier{X}[8]=vec3[8]\n(\nvec3 ( 1.5,0.0,0.0 ),\nvec3 ( 0.0,1.5,0.0 ),\nvec3 ( 0.0,0.0,5.5 ),\nvec3 ( 1.5,0.0,5.5 ),\nvec3 ( 1.5,1.5,0.0 ),\nvec3 ( 1.0,1.0,1.0 ),\nvec3 ( 0.0,1.0,5.5 ),\nvec3 ( 0.5,3.5,0.75 )\n);\nvec3 shadowDebug{X};\n#endif\n#ifdef SHADOWCSMUSESHADOWMAXZ{X}\nint index{X}=-1;\n#else\nint index{X}=SHADOWCSMNUM_CASCADES{X}-1;\n#endif\nfloat diff{X}=0.;\n#elif defined(SHADOWCUBE{X})\nuniform samplerCube shadowSampler{X};\n#else\nvarying vec4 vPositionFromLight{X};\nvarying float vDepthMetric{X};\n#if defined(SHADOWPCSS{X})\nuniform highp sampler2DShadow shadowSampler{X};\nuniform highp sampler2D depthSampler{X};\n#elif defined(SHADOWPCF{X})\nuniform highp sampler2DShadow shadowSampler{X};\n#else\nuniform sampler2D shadowSampler{X};\n#endif\nuniform mat4 lightMatrix{X};\n#endif\nuniform vec4 shadowsInfo{X};\nuniform vec2 depthValues{X};\n#endif\n#ifdef SPOTLIGHT{X}\nuniform vec4 vLightDirection{X};\nuniform vec4 vLightFalloff{X};\n#elif defined(POINTLIGHT{X})\nuniform vec4 vLightFalloff{X};\n#elif defined(HEMILIGHT{X})\nuniform vec3 vLightGround{X};\n#endif\n#ifdef PROJECTEDLIGHTTEXTURE{X}\nuniform mat4 textureProjectionMatrix{X};\nuniform sampler2D projectionLightSampler{X};\n#endif\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst lightFragmentDeclaration = exports.lightFragmentDeclaration = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":4,"column":39},"generated":{"line":10,"column":39}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":84,"column":1},"generated":{"line":90,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":85,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":11},"generated":{"line":92,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":92,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":32},"generated":{"line":92,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":33},"generated":{"line":92,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":37},"generated":{"line":92,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":38},"generated":{"line":92,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":41},"generated":{"line":92,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":86,"column":47},"generated":{"line":92,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":87,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":7},"generated":{"line":94,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":13},"generated":{"line":94,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":94,"column":30}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":94,"column":33}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":94,"column":40}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":94,"column":41}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":37},"generated":{"line":94,"column":65}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":40},"generated":{"line":94,"column":68}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":42},"generated":{"line":95,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":46},"generated":{"line":95,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":48},"generated":{"line":96,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":54},"generated":{"line":97,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts","name":null,"original":{"line":88,"column":56},"generated":{"line":97,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/lightFragmentDeclaration.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"lightFragmentDeclaration\";\nconst shader = `#ifdef LIGHT{X}\nuniform vec4 vLightData{X};\runiform vec4 vLightDiffuse{X};\r#ifdef SPECULARTERM\nuniform vec4 vLightSpecular{X};\r#else\nvec4 vLightSpecular{X}=vec4(0.);\r#endif\n#ifdef SHADOW{X}\n#ifdef SHADOWCSM{X}\nuniform mat4 lightMatrix{X}[SHADOWCSMNUM_CASCADES{X}];\runiform float viewFrustumZ{X}[SHADOWCSMNUM_CASCADES{X}];\runiform float frustumLengths{X}[SHADOWCSMNUM_CASCADES{X}];\runiform float cascadeBlendFactor{X};\rvarying vec4 vPositionFromLight{X}[SHADOWCSMNUM_CASCADES{X}];\rvarying float vDepthMetric{X}[SHADOWCSMNUM_CASCADES{X}];\rvarying vec4 vPositionFromCamera{X};\r#if defined(SHADOWPCSS{X})\nuniform highp sampler2DArrayShadow shadowSampler{X};\runiform highp sampler2DArray depthSampler{X};\runiform vec2 lightSizeUVCorrection{X}[SHADOWCSMNUM_CASCADES{X}];\runiform float depthCorrection{X}[SHADOWCSMNUM_CASCADES{X}];\runiform float penumbraDarkness{X};\r#elif defined(SHADOWPCF{X})\nuniform highp sampler2DArrayShadow shadowSampler{X};\r#else\nuniform highp sampler2DArray shadowSampler{X};\r#endif\n#ifdef SHADOWCSMDEBUG{X}\nconst vec3 vCascadeColorsMultiplier{X}[8]=vec3[8]\r(\rvec3 ( 1.5,0.0,0.0 ),\rvec3 ( 0.0,1.5,0.0 ),\rvec3 ( 0.0,0.0,5.5 ),\rvec3 ( 1.5,0.0,5.5 ),\rvec3 ( 1.5,1.5,0.0 ),\rvec3 ( 1.0,1.0,1.0 ),\rvec3 ( 0.0,1.0,5.5 ),\rvec3 ( 0.5,3.5,0.75 )\r);\rvec3 shadowDebug{X};\r#endif\n#ifdef SHADOWCSMUSESHADOWMAXZ{X}\nint index{X}=-1;\r#else\nint index{X}=SHADOWCSMNUM_CASCADES{X}-1;\r#endif\nfloat diff{X}=0.;\r#elif defined(SHADOWCUBE{X})\nuniform samplerCube shadowSampler{X};\r#else\nvarying vec4 vPositionFromLight{X};\rvarying float vDepthMetric{X};\r#if defined(SHADOWPCSS{X})\nuniform highp sampler2DShadow shadowSampler{X};\runiform highp sampler2D depthSampler{X};\r#elif defined(SHADOWPCF{X})\nuniform highp sampler2DShadow shadowSampler{X};\r#else\nuniform sampler2D shadowSampler{X};\r#endif\nuniform mat4 lightMatrix{X};\r#endif\nuniform vec4 shadowsInfo{X};\runiform vec2 depthValues{X};\r#endif\n#ifdef SPOTLIGHT{X}\nuniform vec4 vLightDirection{X};\runiform vec4 vLightFalloff{X};\r#elif defined(POINTLIGHT{X})\nuniform vec4 vLightFalloff{X};\r#elif defined(HEMILIGHT{X})\nuniform vec3 vLightGround{X};\r#endif\n#ifdef PROJECTEDLIGHTTEXTURE{X}\nuniform mat4 textureProjectionMatrix{X};\runiform sampler2D projectionLightSampler{X};\r#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const lightFragmentDeclaration = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"25dea672a6bccf83cc0f6162f557aaf0","cacheData":{"env":{}}}