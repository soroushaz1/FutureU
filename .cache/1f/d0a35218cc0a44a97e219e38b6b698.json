{"id":"node_modules/@babylonjs/core/Shaders/kernelBlur.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\kernelBlur.fragment.js.map","includedInParent":true,"mtime":1704105649578},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\kernelBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"},{"name":"./ShadersInclude/kernelBlurVaryingDeclaration.js","loc":{"line":3,"column":7,"index":80},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\kernelBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\kernelBlurVaryingDeclaration.js"},{"name":"./ShadersInclude/packingFunctions.js","loc":{"line":4,"column":7,"index":139},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\kernelBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\packingFunctions.js"},{"name":"./ShadersInclude/kernelBlurFragment.js","loc":{"line":5,"column":7,"index":186},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\kernelBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\kernelBlurFragment.js"},{"name":"./ShadersInclude/kernelBlurFragment2.js","loc":{"line":6,"column":7,"index":235},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\kernelBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\kernelBlurFragment2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.kernelBlurPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\nrequire(\"./ShadersInclude/kernelBlurVaryingDeclaration.js\");\nrequire(\"./ShadersInclude/packingFunctions.js\");\nrequire(\"./ShadersInclude/kernelBlurFragment.js\");\nrequire(\"./ShadersInclude/kernelBlurFragment2.js\");\n// Do not edit.\n\nconst name = \"kernelBlurPixelShader\";\nconst shader = `uniform sampler2D textureSampler;\nuniform vec2 delta;\nvarying vec2 sampleCenter;\n#ifdef DOF\nuniform sampler2D circleOfConfusionSampler;\nfloat sampleCoC(in vec2 offset) {\nfloat coc=texture2D(circleOfConfusionSampler,offset).r;\nreturn coc; \n}\n#endif\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\n#ifdef PACKEDFLOAT\n#include<packingFunctions>\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\nfloat computedWeight=0.0;\n#ifdef PACKEDFLOAT\nfloat blend=0.;\n#else\nvec4 blend=vec4(0.);\n#endif\n#ifdef DOF\nfloat sumOfWeights=CENTER_WEIGHT; \nfloat factor=0.0;\n#ifdef PACKEDFLOAT\nblend+=unpack(texture2D(textureSampler,sampleCenter))*CENTER_WEIGHT;\n#else\nblend+=texture2D(textureSampler,sampleCenter)*CENTER_WEIGHT;\n#endif\n#endif\n#include<kernelBlurFragment>[0..varyingCount]\n#include<kernelBlurFragment2>[0..depCount]\n#ifdef PACKEDFLOAT\ngl_FragColor=pack(blend);\n#else\ngl_FragColor=blend;\n#endif\n#ifdef DOF\ngl_FragColor/=sumOfWeights;\n#endif\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst kernelBlurPixelShader = exports.kernelBlurPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":7}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":7}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":7}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":14,"column":6}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":14,"column":10}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":14,"column":13}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":8,"column":36},"generated":{"line":14,"column":36}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":15,"column":12}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":15,"column":15}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":57,"column":2}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":11},"generated":{"line":59,"column":24}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":12},"generated":{"line":59,"column":25}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":24},"generated":{"line":59,"column":37}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":25},"generated":{"line":59,"column":38}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":29},"generated":{"line":59,"column":42}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":30},"generated":{"line":59,"column":43}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":33},"generated":{"line":59,"column":46}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":53,"column":39},"generated":{"line":59,"column":52}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":61,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":13},"generated":{"line":61,"column":6}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":61,"column":27}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":61,"column":30}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":61,"column":37}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":61,"column":38}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":61,"column":59}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":37},"generated":{"line":61,"column":62}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":39},"generated":{"line":62,"column":2}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":62,"column":6}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":45},"generated":{"line":63,"column":2}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":51},"generated":{"line":64,"column":0}},{"source":"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts","name":null,"original":{"line":55,"column":53},"generated":{"line":64,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/kernelBlur.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/kernelBlurVaryingDeclaration\";\nimport \"./ShadersInclude/packingFunctions\";\nimport \"./ShadersInclude/kernelBlurFragment\";\nimport \"./ShadersInclude/kernelBlurFragment2\";\n\nconst name = \"kernelBlurPixelShader\";\nconst shader = `uniform sampler2D textureSampler;\runiform vec2 delta;\rvarying vec2 sampleCenter;\r#ifdef DOF\nuniform sampler2D circleOfConfusionSampler;\rfloat sampleCoC(in vec2 offset) {\rfloat coc=texture2D(circleOfConfusionSampler,offset).r;\rreturn coc; \r}\r#endif\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\n#ifdef PACKEDFLOAT\n#include<packingFunctions>\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rfloat computedWeight=0.0;\r#ifdef PACKEDFLOAT\nfloat blend=0.;\r#else\nvec4 blend=vec4(0.);\r#endif\n#ifdef DOF\nfloat sumOfWeights=CENTER_WEIGHT; \rfloat factor=0.0;\r#ifdef PACKEDFLOAT\nblend+=unpack(texture2D(textureSampler,sampleCenter))*CENTER_WEIGHT;\r#else\nblend+=texture2D(textureSampler,sampleCenter)*CENTER_WEIGHT;\r#endif\n#endif\n#include<kernelBlurFragment>[0..varyingCount]\n#include<kernelBlurFragment2>[0..depCount]\n#ifdef PACKEDFLOAT\ngl_FragColor=pack(blend);\r#else\ngl_FragColor=blend;\r#endif\n#ifdef DOF\ngl_FragColor/=sumOfWeights;\r#endif\n}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const kernelBlurPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"2dc67885ae2d2c16c102baff074d9aa9","cacheData":{"env":{}}}