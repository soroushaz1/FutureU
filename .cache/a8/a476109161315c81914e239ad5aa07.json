{"id":"node_modules/@babylonjs/core/Buffers/dataBuffer.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Buffers\\dataBuffer.js.map","includedInParent":true,"mtime":1704105649232},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataBuffer = void 0;\n/**\n * Class used to store gfx data (like WebGLBuffer)\n */\nclass DataBuffer {\n  /**\n   * Gets the underlying buffer\n   */\n  get underlyingResource() {\n    return null;\n  }\n  /**\n   * Constructs the buffer\n   */\n  constructor() {\n    /**\n     * Gets or sets the number of objects referencing this buffer\n     */\n    this.references = 0;\n    /** Gets or sets the size of the underlying buffer */\n    this.capacity = 0;\n    /**\n     * Gets or sets a boolean indicating if the buffer contains 32bits indices\n     */\n    this.is32Bits = false;\n    this.uniqueId = DataBuffer._Counter++;\n  }\n}\nexports.DataBuffer = DataBuffer;\nDataBuffer._Counter = 0;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":16}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":17}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":11,"column":2}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":14,"column":2}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":21,"column":15},"generated":{"line":14,"column":6}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":21,"column":33},"generated":{"line":14,"column":24}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":21,"column":33},"generated":{"line":14,"column":25}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":21,"column":33},"generated":{"line":14,"column":27}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":15,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":15,"column":11}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":15,"column":15}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":16,"column":2}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":17,"column":2}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":20,"column":2}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":20,"column":13}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":20,"column":14}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":20,"column":16}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":21,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":24,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":24,"column":8}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":24,"column":9}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":24,"column":19}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":10,"column":32},"generated":{"line":24,"column":22}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":10,"column":33},"generated":{"line":24,"column":23}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":25,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":26,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":26,"column":8}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":26,"column":9}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":26,"column":17}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":26,"column":20}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":12,"column":31},"generated":{"line":26,"column":21}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":27,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":16,"column":11},"generated":{"line":30,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":16,"column":11},"generated":{"line":30,"column":8}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":16,"column":11},"generated":{"line":30,"column":9}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":16,"column":19},"generated":{"line":30,"column":17}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":16,"column":31},"generated":{"line":30,"column":20}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":16,"column":36},"generated":{"line":30,"column":25}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":31,"column":4}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":12},"generated":{"line":31,"column":8}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":13},"generated":{"line":31,"column":9}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":31,"column":17}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":31,"column":20}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":34},"generated":{"line":31,"column":30}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":35},"generated":{"line":31,"column":31}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":43},"generated":{"line":31,"column":39}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":34,"column":45},"generated":{"line":31,"column":41}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":32,"column":2}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":35,"column":0}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":35,"column":10}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":35,"column":11}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":35,"column":19}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":5,"column":30},"generated":{"line":35,"column":22}},{"source":"../../../../lts/core/generated/Buffers/dataBuffer.ts","name":null,"original":{"line":5,"column":31},"generated":{"line":35,"column":23}}],"sources":{"../../../../lts/core/generated/Buffers/dataBuffer.ts":"/**\r\n * Class used to store gfx data (like WebGLBuffer)\r\n */\r\nexport class DataBuffer {\r\n    private static _Counter = 0;\r\n\r\n    /**\r\n     * Gets or sets the number of objects referencing this buffer\r\n     */\r\n    public references: number = 0;\r\n    /** Gets or sets the size of the underlying buffer */\r\n    public capacity: number = 0;\r\n    /**\r\n     * Gets or sets a boolean indicating if the buffer contains 32bits indices\r\n     */\r\n    public is32Bits: boolean = false;\r\n\r\n    /**\r\n     * Gets the underlying buffer\r\n     */\r\n    public get underlyingResource(): any {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets the unique id of this buffer\r\n     */\r\n    public readonly uniqueId: number;\r\n\r\n    /**\r\n     * Constructs the buffer\r\n     */\r\n    constructor() {\r\n        this.uniqueId = DataBuffer._Counter++;\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"60faf881fc6ff5766df20c5ae3d73774","cacheData":{"env":{}}}