{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/oitFragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\oitFragment.js.map","includedInParent":true,"mtime":1704105649724},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\oitFragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oitFragment = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"oitFragment\";\nconst shader = `#ifdef ORDER_INDEPENDENT_TRANSPARENCY\nfloat fragDepth=gl_FragCoord.z; \n#ifdef ORDER_INDEPENDENT_TRANSPARENCY_16BITS\nuint halfFloat=packHalf2x16(vec2(fragDepth));\nvec2 full=unpackHalf2x16(halfFloat);\nfragDepth=full.x;\n#endif\nivec2 fragCoord=ivec2(gl_FragCoord.xy);\nvec2 lastDepth=texelFetch(oitDepthSampler,fragCoord,0).rg;\nvec4 lastFrontColor=texelFetch(oitFrontColorSampler,fragCoord,0);\ndepth.rg=vec2(-MAX_DEPTH);\nfrontColor=lastFrontColor;\nbackColor=vec4(0.0);\n#ifdef USE_REVERSE_DEPTHBUFFER\nfloat furthestDepth=-lastDepth.x;\nfloat nearestDepth=lastDepth.y;\n#else\nfloat nearestDepth=-lastDepth.x;\nfloat furthestDepth=lastDepth.y;\n#endif\nfloat alphaMultiplier=1.0-lastFrontColor.a;\n#ifdef USE_REVERSE_DEPTHBUFFER\nif (fragDepth>nearestDepth || fragDepth<furthestDepth) {\n#else\nif (fragDepth<nearestDepth || fragDepth>furthestDepth) {\n#endif\nreturn;\n}\n#ifdef USE_REVERSE_DEPTHBUFFER\nif (fragDepth<nearestDepth && fragDepth>furthestDepth) {\n#else\nif (fragDepth>nearestDepth && fragDepth<furthestDepth) {\n#endif\ndepth.rg=vec2(-fragDepth,fragDepth);\nreturn;\n}\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst oitFragment = exports.oitFragment = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":4,"column":26},"generated":{"line":10,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":42,"column":1},"generated":{"line":48,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":50,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":12},"generated":{"line":50,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":32},"generated":{"line":50,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":33},"generated":{"line":50,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":37},"generated":{"line":50,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":38},"generated":{"line":50,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":41},"generated":{"line":50,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":44,"column":47},"generated":{"line":50,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":7},"generated":{"line":52,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":52,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":52,"column":17}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":52,"column":20}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":52,"column":27}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":52,"column":28}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":52,"column":39}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":27},"generated":{"line":52,"column":42}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":29},"generated":{"line":53,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":33},"generated":{"line":53,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":35},"generated":{"line":54,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":41},"generated":{"line":55,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts","name":null,"original":{"line":46,"column":43},"generated":{"line":55,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/oitFragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"oitFragment\";\nconst shader = `#ifdef ORDER_INDEPENDENT_TRANSPARENCY\nfloat fragDepth=gl_FragCoord.z; \r#ifdef ORDER_INDEPENDENT_TRANSPARENCY_16BITS\nuint halfFloat=packHalf2x16(vec2(fragDepth));\rvec2 full=unpackHalf2x16(halfFloat);\rfragDepth=full.x;\r#endif\nivec2 fragCoord=ivec2(gl_FragCoord.xy);\rvec2 lastDepth=texelFetch(oitDepthSampler,fragCoord,0).rg;\rvec4 lastFrontColor=texelFetch(oitFrontColorSampler,fragCoord,0);\rdepth.rg=vec2(-MAX_DEPTH);\rfrontColor=lastFrontColor;\rbackColor=vec4(0.0);\r#ifdef USE_REVERSE_DEPTHBUFFER\nfloat furthestDepth=-lastDepth.x;\rfloat nearestDepth=lastDepth.y;\r#else\nfloat nearestDepth=-lastDepth.x;\rfloat furthestDepth=lastDepth.y;\r#endif\nfloat alphaMultiplier=1.0-lastFrontColor.a;\r#ifdef USE_REVERSE_DEPTHBUFFER\nif (fragDepth>nearestDepth || fragDepth<furthestDepth) {\r#else\nif (fragDepth<nearestDepth || fragDepth>furthestDepth) {\r#endif\nreturn;\r}\r#ifdef USE_REVERSE_DEPTHBUFFER\nif (fragDepth<nearestDepth && fragDepth>furthestDepth) {\r#else\nif (fragDepth>nearestDepth && fragDepth<furthestDepth) {\r#endif\ndepth.rg=vec2(-fragDepth,fragDepth);\rreturn;\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const oitFragment = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"d59876c7dc57ea05133176154c6706c9","cacheData":{"env":{}}}