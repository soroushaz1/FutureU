{"id":"node_modules/@babylonjs/core/ShadersWGSL/ShadersInclude/bonesDeclaration.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\ShadersWGSL\\ShadersInclude\\bonesDeclaration.js.map","includedInParent":true,"mtime":1704105649163},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\ShadersWGSL\\ShadersInclude\\bonesDeclaration.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bonesDeclaration = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"bonesDeclaration\";\nconst shader = `#if NUM_BONE_INFLUENCERS>0\nattribute matricesIndices : vec4<f32>;\nattribute matricesWeights : vec4<f32>;\n#if NUM_BONE_INFLUENCERS>4\nattribute matricesIndicesExtra : vec4<f32>;\nattribute matricesWeightsExtra : vec4<f32>;\n#endif\n#ifndef BAKED_VERTEX_ANIMATION_TEXTURE\n#ifdef BONETEXTURE\nvar boneSampler : texture_2d<f32>;\nuniform boneTextureWidth : f32;\n#else\nuniform mBones : array<mat4x4,BonesPerMesh>;\n#ifdef BONES_VELOCITY_ENABLED\nuniform mPreviousBones : array<mat4x4,BonesPerMesh>;\n#endif\n#endif\n#ifdef BONETEXTURE\nfn readMatrixFromRawSampler(smp : texture_2d<f32>,index : f32)->mat4x4<f32>\n{\nlet offset=i32(index) *4; \nlet m0=textureLoad(smp,vec2<i32>(offset+0,0),0);\nlet m1=textureLoad(smp,vec2<i32>(offset+1,0),0);\nlet m2=textureLoad(smp,vec2<i32>(offset+2,0),0);\nlet m3=textureLoad(smp,vec2<i32>(offset+3,0),0);\nreturn mat4x4<f32>(m0,m1,m2,m3);\n}\n#endif\n#endif\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @internal */\nconst bonesDeclaration = exports.bonesDeclaration = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":4,"column":31},"generated":{"line":10,"column":31}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":41,"column":1}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":43,"column":24}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":12},"generated":{"line":43,"column":25}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":36},"generated":{"line":43,"column":49}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":37},"generated":{"line":43,"column":50}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":43,"column":54}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":42},"generated":{"line":43,"column":55}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":45},"generated":{"line":43,"column":58}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":37,"column":51},"generated":{"line":43,"column":64}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":45,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":45,"column":6}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":45,"column":22}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":45,"column":25}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":45,"column":32}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":45,"column":33}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":45,"column":49}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":32},"generated":{"line":45,"column":52}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":46,"column":2}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":46,"column":6}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":40},"generated":{"line":47,"column":2}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":46},"generated":{"line":48,"column":0}},{"source":"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts","name":null,"original":{"line":39,"column":48},"generated":{"line":48,"column":1}}],"sources":{"../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bonesDeclaration.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bonesDeclaration\";\nconst shader = `#if NUM_BONE_INFLUENCERS>0\nattribute matricesIndices : vec4<f32>;\rattribute matricesWeights : vec4<f32>;\r#if NUM_BONE_INFLUENCERS>4\nattribute matricesIndicesExtra : vec4<f32>;\rattribute matricesWeightsExtra : vec4<f32>;\r#endif\n#ifndef BAKED_VERTEX_ANIMATION_TEXTURE\n#ifdef BONETEXTURE\nvar boneSampler : texture_2d<f32>;\runiform boneTextureWidth : f32;\r#else\nuniform mBones : array<mat4x4,BonesPerMesh>;\r#ifdef BONES_VELOCITY_ENABLED\nuniform mPreviousBones : array<mat4x4,BonesPerMesh>;\r#endif\n#endif\n#ifdef BONETEXTURE\nfn readMatrixFromRawSampler(smp : texture_2d<f32>,index : f32)->mat4x4<f32>\r{\rlet offset=i32(index) *4; \rlet m0=textureLoad(smp,vec2<i32>(offset+0,0),0);\rlet m1=textureLoad(smp,vec2<i32>(offset+1,0),0);\rlet m2=textureLoad(smp,vec2<i32>(offset+2,0),0);\rlet m3=textureLoad(smp,vec2<i32>(offset+3,0),0);\rreturn mat4x4<f32>(m0,m1,m2,m3);\r}\r#endif\n#endif\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @internal */\nexport const bonesDeclaration = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"240027b344dd0b708905b07c364271b8","cacheData":{"env":{}}}