{"id":"node_modules/@babylonjs/core/PostProcesses/highlightsPostProcess.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\highlightsPostProcess.js.map","includedInParent":true,"mtime":1704105649484},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"./postProcess.js","loc":{"line":1,"column":28,"index":28},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\highlightsPostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\postProcess.js"},{"name":"../Shaders/highlights.fragment.js","loc":{"line":3,"column":7,"index":56},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\highlightsPostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\highlights.fragment.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HighlightsPostProcess = void 0;\nvar _postProcess = require(\"./postProcess.js\");\nrequire(\"../Shaders/highlights.fragment.js\");\n/**\n * Extracts highlights from the image\n * @see https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/usePostProcesses\n */\nclass HighlightsPostProcess extends _postProcess.PostProcess {\n  /**\n   * Gets a string identifying the name of the class\n   * @returns \"HighlightsPostProcess\" string\n   */\n  getClassName() {\n    return \"HighlightsPostProcess\";\n  }\n  /**\n   * Extracts highlights from the image\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/usePostProcesses\n   * @param name The name of the effect.\n   * @param options The required width/height ratio to downsize to before computing the render pass.\n   * @param camera The camera to apply the render pass to.\n   * @param samplingMode The sampling mode to be used when computing the pass. (default: 0)\n   * @param engine The engine which the post process will be applied. (default: current engine)\n   * @param reusable If the post process can be reused on the same frame. (default: false)\n   * @param textureType Type of texture for the post process (default: Engine.TEXTURETYPE_UNSIGNED_INT)\n   */\n  constructor(name, options, camera, samplingMode, engine, reusable, textureType = 0) {\n    super(name, \"highlights\", null, null, options, camera, samplingMode, engine, reusable, null, textureType);\n  }\n}\nexports.HighlightsPostProcess = HighlightsPostProcess;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":13,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":13,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":14,"column":35},"generated":{"line":13,"column":27}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":14,"column":43},"generated":{"line":13,"column":36}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":14,"column":54},"generated":{"line":13,"column":60}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":14,"column":54},"generated":{"line":13,"column":61}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":14,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":18,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":18,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":18,"column":15}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":18,"column":17}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":19,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":19,"column":11}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":19,"column":34}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":20,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":21,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":32,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":32,"column":13}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":32,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":35,"column":20},"generated":{"line":32,"column":18}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":32,"column":20}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":36,"column":44},"generated":{"line":32,"column":27}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":32,"column":29}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":37,"column":32},"generated":{"line":32,"column":35}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":32,"column":37}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":32,"column":49}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":32,"column":51}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":39,"column":23},"generated":{"line":32,"column":57}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":32,"column":59}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":40,"column":26},"generated":{"line":32,"column":67}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":32,"column":69}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":32,"column":80}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":32,"column":83}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":32,"column":84}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":32,"column":86}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":33,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":33,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":14},"generated":{"line":33,"column":10}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":18},"generated":{"line":33,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":33,"column":16}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":32},"generated":{"line":33,"column":28}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":33,"column":30}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":38},"generated":{"line":33,"column":34}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":40},"generated":{"line":33,"column":36}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":33,"column":40}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":46},"generated":{"line":33,"column":42}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":53},"generated":{"line":33,"column":49}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":55},"generated":{"line":33,"column":51}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":61},"generated":{"line":33,"column":57}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":63},"generated":{"line":33,"column":59}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":75},"generated":{"line":33,"column":71}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":77},"generated":{"line":33,"column":73}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":83},"generated":{"line":33,"column":79}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":85},"generated":{"line":33,"column":81}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":93},"generated":{"line":33,"column":89}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":95},"generated":{"line":33,"column":91}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":99},"generated":{"line":33,"column":95}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":101},"generated":{"line":33,"column":97}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":112},"generated":{"line":33,"column":108}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":43,"column":113},"generated":{"line":33,"column":109}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":34,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":36,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":36,"column":7}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":36,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":36,"column":29}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":36,"column":32}},{"source":"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":36,"column":53}}],"sources":{"../../../../lts/core/generated/PostProcesses/highlightsPostProcess.ts":"import type { Nullable } from \"../types\";\r\nimport type { Camera } from \"../Cameras/camera\";\r\nimport type { PostProcessOptions } from \"./postProcess\";\r\nimport { PostProcess } from \"./postProcess\";\r\nimport type { Engine } from \"../Engines/engine\";\r\nimport { Constants } from \"../Engines/constants\";\r\n\r\nimport \"../Shaders/highlights.fragment\";\r\n\r\n/**\r\n * Extracts highlights from the image\r\n * @see https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/usePostProcesses\r\n */\r\nexport class HighlightsPostProcess extends PostProcess {\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"HighlightsPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"HighlightsPostProcess\";\r\n    }\r\n\r\n    /**\r\n     * Extracts highlights from the image\r\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/usePostProcesses\r\n     * @param name The name of the effect.\r\n     * @param options The required width/height ratio to downsize to before computing the render pass.\r\n     * @param camera The camera to apply the render pass to.\r\n     * @param samplingMode The sampling mode to be used when computing the pass. (default: 0)\r\n     * @param engine The engine which the post process will be applied. (default: current engine)\r\n     * @param reusable If the post process can be reused on the same frame. (default: false)\r\n     * @param textureType Type of texture for the post process (default: Engine.TEXTURETYPE_UNSIGNED_INT)\r\n     */\r\n    constructor(\r\n        name: string,\r\n        options: number | PostProcessOptions,\r\n        camera: Nullable<Camera>,\r\n        samplingMode?: number,\r\n        engine?: Engine,\r\n        reusable?: boolean,\r\n        textureType: number = Constants.TEXTURETYPE_UNSIGNED_INT\r\n    ) {\r\n        super(name, \"highlights\", null, null, options, camera, samplingMode, engine, reusable, null, textureType);\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"b4bcca2df29541d370fb7841495c7ddd","cacheData":{"env":{}}}