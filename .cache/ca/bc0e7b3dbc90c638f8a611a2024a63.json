{"id":"node_modules/@babylonjs/core/Shaders/screenSpaceCurvature.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\screenSpaceCurvature.fragment.js.map","includedInParent":true,"mtime":1704105649901},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\screenSpaceCurvature.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.screenSpaceCurvaturePixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"screenSpaceCurvaturePixelShader\";\nconst shader = `precision highp float;\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform sampler2D normalSampler;\nuniform float curvature_ridge;\nuniform float curvature_valley;\n#ifndef CURVATURE_OFFSET\n#define CURVATURE_OFFSET 1\n#endif\nfloat curvature_soft_clamp(float curvature,float control)\n{\nif (curvature<0.5/control)\nreturn curvature*(1.0-curvature*control);\nreturn 0.25/control;\n}\nfloat calculate_curvature(ivec2 texel,float ridge,float valley)\n{\nvec2 normal_up =texelFetch(normalSampler,texel+ivec2(0, CURVATURE_OFFSET),0).rb;\nvec2 normal_down =texelFetch(normalSampler,texel+ivec2(0,-CURVATURE_OFFSET),0).rb;\nvec2 normal_left =texelFetch(normalSampler,texel+ivec2(-CURVATURE_OFFSET,0),0).rb;\nvec2 normal_right=texelFetch(normalSampler,texel+ivec2( CURVATURE_OFFSET,0),0).rb;\nfloat normal_diff=((normal_up.g-normal_down.g)+(normal_right.r-normal_left.r));\nif (normal_diff<0.0)\nreturn -2.0*curvature_soft_clamp(-normal_diff,valley);\nreturn 2.0*curvature_soft_clamp(normal_diff,ridge);\n}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) \n{\nivec2 texel=ivec2(gl_FragCoord.xy);\nvec4 baseColor=texture2D(textureSampler,vUV);\nfloat curvature=calculate_curvature(texel,curvature_ridge,curvature_valley);\nbaseColor.rgb*=curvature+1.0;\ngl_FragColor=baseColor;\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst screenSpaceCurvaturePixelShader = exports.screenSpaceCurvaturePixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":4,"column":46},"generated":{"line":10,"column":46}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":45,"column":2}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":47,"column":24}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":12},"generated":{"line":47,"column":25}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":47,"column":37}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":25},"generated":{"line":47,"column":38}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":47,"column":42}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":47,"column":43}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":33},"generated":{"line":47,"column":46}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":41,"column":39},"generated":{"line":47,"column":52}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":7},"generated":{"line":49,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":49,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":49,"column":37}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":49,"column":40}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":49,"column":47}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":49,"column":48}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":44},"generated":{"line":49,"column":79}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":47},"generated":{"line":49,"column":82}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":49},"generated":{"line":50,"column":2}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":53},"generated":{"line":50,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":55},"generated":{"line":51,"column":2}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":61},"generated":{"line":52,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts","name":null,"original":{"line":43,"column":63},"generated":{"line":52,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/screenSpaceCurvature.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"screenSpaceCurvaturePixelShader\";\nconst shader = `precision highp float;\rvarying vec2 vUV;\runiform sampler2D textureSampler;\runiform sampler2D normalSampler;\runiform float curvature_ridge;\runiform float curvature_valley;\r#ifndef CURVATURE_OFFSET\n#define CURVATURE_OFFSET 1\n#endif\nfloat curvature_soft_clamp(float curvature,float control)\r{\rif (curvature<0.5/control)\rreturn curvature*(1.0-curvature*control);\rreturn 0.25/control;\r}\rfloat calculate_curvature(ivec2 texel,float ridge,float valley)\r{\rvec2 normal_up =texelFetch(normalSampler,texel+ivec2(0, CURVATURE_OFFSET),0).rb;\rvec2 normal_down =texelFetch(normalSampler,texel+ivec2(0,-CURVATURE_OFFSET),0).rb;\rvec2 normal_left =texelFetch(normalSampler,texel+ivec2(-CURVATURE_OFFSET,0),0).rb;\rvec2 normal_right=texelFetch(normalSampler,texel+ivec2( CURVATURE_OFFSET,0),0).rb;\rfloat normal_diff=((normal_up.g-normal_down.g)+(normal_right.r-normal_left.r));\rif (normal_diff<0.0)\rreturn -2.0*curvature_soft_clamp(-normal_diff,valley);\rreturn 2.0*curvature_soft_clamp(normal_diff,ridge);\r}\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) \r{\rivec2 texel=ivec2(gl_FragCoord.xy);\rvec4 baseColor=texture2D(textureSampler,vUV);\rfloat curvature=calculate_curvature(texel,curvature_ridge,curvature_valley);\rbaseColor.rgb*=curvature+1.0;\rgl_FragColor=baseColor;\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const screenSpaceCurvaturePixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"5ed8d17ccb835098dceb66a671cb378c","cacheData":{"env":{}}}