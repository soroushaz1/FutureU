{"id":"node_modules/@babylonjs/core/Shaders/grain.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\grain.fragment.js.map","includedInParent":true,"mtime":1704105649450},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\grain.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"},{"name":"./ShadersInclude/helperFunctions.js","loc":{"line":3,"column":7,"index":80},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\grain.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\helperFunctions.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.grainPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\nrequire(\"./ShadersInclude/helperFunctions.js\");\n// Do not edit.\n\nconst name = \"grainPixelShader\";\nconst shader = `#include<helperFunctions>\nuniform sampler2D textureSampler; \nuniform float intensity;\nuniform float animatedSeed;\nvarying vec2 vUV;\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\ngl_FragColor=texture2D(textureSampler,vUV);\nvec2 seed=vUV*(animatedSeed);\nfloat grain=dither(seed,intensity);\nfloat lum=getLuminance(gl_FragColor.rgb);\nfloat grainAmount=(cos(-PI+(lum*PI*2.))+1.)/2.;\ngl_FragColor.rgb+=grain*grainAmount;\ngl_FragColor.rgb=max(gl_FragColor.rgb,0.0);\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst grainPixelShader = exports.grainPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":5,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":5,"column":31},"generated":{"line":11,"column":31}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":12,"column":6}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":12,"column":12}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":6,"column":15},"generated":{"line":12,"column":15}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":27,"column":2}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":11},"generated":{"line":29,"column":24}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":12},"generated":{"line":29,"column":25}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":24},"generated":{"line":29,"column":37}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":25},"generated":{"line":29,"column":38}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":29},"generated":{"line":29,"column":42}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":30},"generated":{"line":29,"column":43}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":33},"generated":{"line":29,"column":46}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":23,"column":39},"generated":{"line":29,"column":52}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":7},"generated":{"line":31,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":31,"column":6}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":31,"column":22}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":31,"column":25}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":31,"column":32}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":31,"column":33}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":31,"column":49}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":31,"column":52}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":34},"generated":{"line":32,"column":2}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":38},"generated":{"line":32,"column":6}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":40},"generated":{"line":33,"column":2}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":46},"generated":{"line":34,"column":0}},{"source":"../../../../lts/core/generated/Shaders/grain.fragment.ts","name":null,"original":{"line":25,"column":48},"generated":{"line":34,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/grain.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/helperFunctions\";\n\nconst name = \"grainPixelShader\";\nconst shader = `#include<helperFunctions>\nuniform sampler2D textureSampler; \runiform float intensity;\runiform float animatedSeed;\rvarying vec2 vUV;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rgl_FragColor=texture2D(textureSampler,vUV);\rvec2 seed=vUV*(animatedSeed);\rfloat grain=dither(seed,intensity);\rfloat lum=getLuminance(gl_FragColor.rgb);\rfloat grainAmount=(cos(-PI+(lum*PI*2.))+1.)/2.;\rgl_FragColor.rgb+=grain*grainAmount;\rgl_FragColor.rgb=max(gl_FragColor.rgb,0.0);\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const grainPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"df340f12e1c8a43baa333462cdf93d57","cacheData":{"env":{}}}