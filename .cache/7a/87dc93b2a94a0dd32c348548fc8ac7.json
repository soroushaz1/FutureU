{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrDirectLightingFalloffFunctions.js.map","includedInParent":true,"mtime":1704105649770},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrDirectLightingFalloffFunctions.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbrDirectLightingFalloffFunctions = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"pbrDirectLightingFalloffFunctions\";\nconst shader = `float computeDistanceLightFalloff_Standard(vec3 lightOffset,float range)\n{\nreturn max(0.,1.0-length(lightOffset)/range);\n}\nfloat computeDistanceLightFalloff_Physical(float lightDistanceSquared)\n{\nreturn 1.0/maxEps(lightDistanceSquared);\n}\nfloat computeDistanceLightFalloff_GLTF(float lightDistanceSquared,float inverseSquaredRange)\n{\nfloat lightDistanceFalloff=1.0/maxEps(lightDistanceSquared);\nfloat factor=lightDistanceSquared*inverseSquaredRange;\nfloat attenuation=saturate(1.0-factor*factor);\nattenuation*=attenuation;\nlightDistanceFalloff*=attenuation;\nreturn lightDistanceFalloff;\n}\nfloat computeDistanceLightFalloff(vec3 lightOffset,float lightDistanceSquared,float range,float inverseSquaredRange)\n{\n#ifdef USEPHYSICALLIGHTFALLOFF\nreturn computeDistanceLightFalloff_Physical(lightDistanceSquared);\n#elif defined(USEGLTFLIGHTFALLOFF)\nreturn computeDistanceLightFalloff_GLTF(lightDistanceSquared,inverseSquaredRange);\n#else\nreturn computeDistanceLightFalloff_Standard(lightOffset,range);\n#endif\n}\nfloat computeDirectionalLightFalloff_Standard(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent)\n{\nfloat falloff=0.0;\nfloat cosAngle=maxEps(dot(-lightDirection,directionToLightCenterW));\nif (cosAngle>=cosHalfAngle)\n{\nfalloff=max(0.,pow(cosAngle,exponent));\n}\nreturn falloff;\n}\nfloat computeDirectionalLightFalloff_Physical(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle)\n{\nconst float kMinusLog2ConeAngleIntensityRatio=6.64385618977; \nfloat concentrationKappa=kMinusLog2ConeAngleIntensityRatio/(1.0-cosHalfAngle);\nvec4 lightDirectionSpreadSG=vec4(-lightDirection*concentrationKappa,-concentrationKappa);\nfloat falloff=exp2(dot(vec4(directionToLightCenterW,1.0),lightDirectionSpreadSG));\nreturn falloff;\n}\nfloat computeDirectionalLightFalloff_GLTF(vec3 lightDirection,vec3 directionToLightCenterW,float lightAngleScale,float lightAngleOffset)\n{\nfloat cd=dot(-lightDirection,directionToLightCenterW);\nfloat falloff=saturate(cd*lightAngleScale+lightAngleOffset);\nfalloff*=falloff;\nreturn falloff;\n}\nfloat computeDirectionalLightFalloff(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent,float lightAngleScale,float lightAngleOffset)\n{\n#ifdef USEPHYSICALLIGHTFALLOFF\nreturn computeDirectionalLightFalloff_Physical(lightDirection,directionToLightCenterW,cosHalfAngle);\n#elif defined(USEGLTFLIGHTFALLOFF)\nreturn computeDirectionalLightFalloff_GLTF(lightDirection,directionToLightCenterW,lightAngleScale,lightAngleOffset);\n#else\nreturn computeDirectionalLightFalloff_Standard(lightDirection,directionToLightCenterW,cosHalfAngle,exponent);\n#endif\n}`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst pbrDirectLightingFalloffFunctions = exports.pbrDirectLightingFalloffFunctions = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":48},"generated":{"line":10,"column":48}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":72,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":74,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":12},"generated":{"line":74,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":74,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":33},"generated":{"line":74,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":37},"generated":{"line":74,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":38},"generated":{"line":74,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":74,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":68,"column":47},"generated":{"line":74,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":69,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":7},"generated":{"line":76,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":76,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":46},"generated":{"line":76,"column":39}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":46},"generated":{"line":76,"column":42}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":46},"generated":{"line":76,"column":49}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":46},"generated":{"line":76,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":46},"generated":{"line":76,"column":83}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":49},"generated":{"line":76,"column":86}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":51},"generated":{"line":77,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":55},"generated":{"line":77,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":57},"generated":{"line":78,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":63},"generated":{"line":79,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":70,"column":65},"generated":{"line":79,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrDirectLightingFalloffFunctions\";\nconst shader = `float computeDistanceLightFalloff_Standard(vec3 lightOffset,float range)\r{\rreturn max(0.,1.0-length(lightOffset)/range);\r}\rfloat computeDistanceLightFalloff_Physical(float lightDistanceSquared)\r{\rreturn 1.0/maxEps(lightDistanceSquared);\r}\rfloat computeDistanceLightFalloff_GLTF(float lightDistanceSquared,float inverseSquaredRange)\r{\rfloat lightDistanceFalloff=1.0/maxEps(lightDistanceSquared);\rfloat factor=lightDistanceSquared*inverseSquaredRange;\rfloat attenuation=saturate(1.0-factor*factor);\rattenuation*=attenuation;\rlightDistanceFalloff*=attenuation;\rreturn lightDistanceFalloff;\r}\rfloat computeDistanceLightFalloff(vec3 lightOffset,float lightDistanceSquared,float range,float inverseSquaredRange)\r{\r#ifdef USEPHYSICALLIGHTFALLOFF\nreturn computeDistanceLightFalloff_Physical(lightDistanceSquared);\r#elif defined(USEGLTFLIGHTFALLOFF)\nreturn computeDistanceLightFalloff_GLTF(lightDistanceSquared,inverseSquaredRange);\r#else\nreturn computeDistanceLightFalloff_Standard(lightOffset,range);\r#endif\n}\rfloat computeDirectionalLightFalloff_Standard(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent)\r{\rfloat falloff=0.0;\rfloat cosAngle=maxEps(dot(-lightDirection,directionToLightCenterW));\rif (cosAngle>=cosHalfAngle)\r{\rfalloff=max(0.,pow(cosAngle,exponent));\r}\rreturn falloff;\r}\rfloat computeDirectionalLightFalloff_Physical(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle)\r{\rconst float kMinusLog2ConeAngleIntensityRatio=6.64385618977; \rfloat concentrationKappa=kMinusLog2ConeAngleIntensityRatio/(1.0-cosHalfAngle);\rvec4 lightDirectionSpreadSG=vec4(-lightDirection*concentrationKappa,-concentrationKappa);\rfloat falloff=exp2(dot(vec4(directionToLightCenterW,1.0),lightDirectionSpreadSG));\rreturn falloff;\r}\rfloat computeDirectionalLightFalloff_GLTF(vec3 lightDirection,vec3 directionToLightCenterW,float lightAngleScale,float lightAngleOffset)\r{\rfloat cd=dot(-lightDirection,directionToLightCenterW);\rfloat falloff=saturate(cd*lightAngleScale+lightAngleOffset);\rfalloff*=falloff;\rreturn falloff;\r}\rfloat computeDirectionalLightFalloff(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent,float lightAngleScale,float lightAngleOffset)\r{\r#ifdef USEPHYSICALLIGHTFALLOFF\nreturn computeDirectionalLightFalloff_Physical(lightDirection,directionToLightCenterW,cosHalfAngle);\r#elif defined(USEGLTFLIGHTFALLOFF)\nreturn computeDirectionalLightFalloff_GLTF(lightDirection,directionToLightCenterW,lightAngleScale,lightAngleOffset);\r#else\nreturn computeDirectionalLightFalloff_Standard(lightDirection,directionToLightCenterW,cosHalfAngle,exponent);\r#endif\n}`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const pbrDirectLightingFalloffFunctions = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"33f4bc99eff3370424bdd512e9275875","cacheData":{"env":{}}}