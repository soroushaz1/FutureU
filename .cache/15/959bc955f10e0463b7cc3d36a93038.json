{"id":"node_modules/@babylonjs/core/PostProcesses/bloomMergePostProcess.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\bloomMergePostProcess.js.map","includedInParent":true,"mtime":1704105648399},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../tslib.es6.js","loc":{"line":1,"column":27,"index":27},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\bloomMergePostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\tslib.es6.js"},{"name":"./postProcess.js","loc":{"line":2,"column":28,"index":74},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\bloomMergePostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\postProcess.js"},{"name":"../Shaders/bloomMerge.fragment.js","loc":{"line":4,"column":7,"index":102},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\bloomMergePostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\bloomMerge.fragment.js"},{"name":"../Misc/typeStore.js","loc":{"line":5,"column":30,"index":169},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\bloomMergePostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Misc\\typeStore.js"},{"name":"../Misc/decorators.js","loc":{"line":6,"column":26,"index":219},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\PostProcesses\\bloomMergePostProcess.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Misc\\decorators.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BloomMergePostProcess = void 0;\nvar _tslibEs = require(\"../tslib.es6.js\");\nvar _postProcess = require(\"./postProcess.js\");\nrequire(\"../Shaders/bloomMerge.fragment.js\");\nvar _typeStore = require(\"../Misc/typeStore.js\");\nvar _decorators = require(\"../Misc/decorators.js\");\n/**\n * The BloomMergePostProcess merges blurred images with the original based on the values of the circle of confusion.\n */\nclass BloomMergePostProcess extends _postProcess.PostProcess {\n  /**\n   * Gets a string identifying the name of the class\n   * @returns \"BloomMergePostProcess\" string\n   */\n  getClassName() {\n    return \"BloomMergePostProcess\";\n  }\n  /**\n   * Creates a new instance of @see BloomMergePostProcess\n   * @param name The name of the effect.\n   * @param originalFromInput Post process which's input will be used for the merge.\n   * @param blurred Blurred highlights post process which's output will be used.\n   * @param weight Weight of the bloom to be added to the original input.\n   * @param options The required width/height ratio to downsize to before computing the render pass.\n   * @param camera The camera to apply the render pass to.\n   * @param samplingMode The sampling mode to be used when computing the pass. (default: 0)\n   * @param engine The engine which the post process will be applied. (default: current engine)\n   * @param reusable If the post process can be reused on the same frame. (default: false)\n   * @param textureType Type of textures used when performing the post process. (default: 0)\n   * @param blockCompilation If compilation of the shader should not be done in the constructor. The updateEffect method can be used to compile the shader at a later time. (default: false)\n   */\n  constructor(name, originalFromInput, blurred, /** Weight of the bloom to be added to the original input. */\n  weight, options, camera, samplingMode, engine, reusable, textureType = 0, blockCompilation = false) {\n    super(name, \"bloomMerge\", [\"bloomWeight\"], [\"bloomBlur\"], options, camera, samplingMode, engine, reusable, null, textureType, undefined, null, true);\n    /** Weight of the bloom to be added to the original input. */\n    this.weight = 1;\n    this.weight = weight;\n    this.externalTextureSamplerBinding = true;\n    this.onApplyObservable.add(effect => {\n      effect.setTextureFromPostProcess(\"textureSampler\", originalFromInput);\n      effect.setTextureFromPostProcessOutput(\"bloomBlur\", blurred);\n      effect.setFloat(\"bloomWeight\", this.weight);\n    });\n    if (!blockCompilation) {\n      this.updateEffect();\n    }\n  }\n}\nexports.BloomMergePostProcess = BloomMergePostProcess;\n(0, _tslibEs.__decorate)([(0, _decorators.serialize)()], BloomMergePostProcess.prototype, \"weight\", void 0);\n(0, _typeStore.RegisterClass)(\"BABYLON.BloomMergePostProcess\", BloomMergePostProcess);"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":16}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":19}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":26}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":9,"column":7}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":10,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":10,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":10,"column":17}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":10,"column":24}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":18}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":25}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":15,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":16,"column":13},"generated":{"line":15,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":16,"column":35},"generated":{"line":15,"column":27}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":16,"column":43},"generated":{"line":15,"column":36}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":16,"column":54},"generated":{"line":15,"column":60}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":16,"column":54},"generated":{"line":15,"column":61}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":16,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":20,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":20,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":20,"column":15}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":20,"column":17}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":21,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":21,"column":11}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":26,"column":38},"generated":{"line":21,"column":34}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":22,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":23,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":37,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":37,"column":13}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":37,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":37,"column":18}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":37,"column":20}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":45,"column":38},"generated":{"line":37,"column":37}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":37,"column":39}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":46,"column":28},"generated":{"line":37,"column":46}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":37,"column":48}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":38,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":48,"column":22},"generated":{"line":38,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":38,"column":10}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":49,"column":44},"generated":{"line":38,"column":17}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":38,"column":19}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":50,"column":32},"generated":{"line":38,"column":25}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":38,"column":27}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":51,"column":29},"generated":{"line":38,"column":39}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":38,"column":41}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":52,"column":23},"generated":{"line":38,"column":47}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":38,"column":49}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":38,"column":57}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":38,"column":59}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":38,"column":70}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":38,"column":73}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":38,"column":74}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":38,"column":76}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":40},"generated":{"line":38,"column":92}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":40},"generated":{"line":38,"column":95}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":40},"generated":{"line":38,"column":100}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":54,"column":40},"generated":{"line":38,"column":102}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":8},"generated":{"line":39,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":39,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":14},"generated":{"line":39,"column":10}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":18},"generated":{"line":39,"column":14}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":20},"generated":{"line":39,"column":16}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":32},"generated":{"line":39,"column":28}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":34},"generated":{"line":39,"column":30}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":35},"generated":{"line":39,"column":31}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":48},"generated":{"line":39,"column":44}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":49},"generated":{"line":39,"column":45}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":51},"generated":{"line":39,"column":47}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":52},"generated":{"line":39,"column":48}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":63},"generated":{"line":39,"column":59}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":64},"generated":{"line":39,"column":60}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":66},"generated":{"line":39,"column":62}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":73},"generated":{"line":39,"column":69}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":75},"generated":{"line":39,"column":71}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":81},"generated":{"line":39,"column":77}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":83},"generated":{"line":39,"column":79}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":95},"generated":{"line":39,"column":91}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":97},"generated":{"line":39,"column":93}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":103},"generated":{"line":39,"column":99}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":105},"generated":{"line":39,"column":101}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":113},"generated":{"line":39,"column":109}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":115},"generated":{"line":39,"column":111}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":119},"generated":{"line":39,"column":115}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":121},"generated":{"line":39,"column":117}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":132},"generated":{"line":39,"column":128}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":134},"generated":{"line":39,"column":130}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":143},"generated":{"line":39,"column":139}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":145},"generated":{"line":39,"column":141}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":149},"generated":{"line":39,"column":145}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":151},"generated":{"line":39,"column":147}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":155},"generated":{"line":39,"column":151}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":57,"column":156},"generated":{"line":39,"column":152}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":40,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":41,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":41,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":41,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":17},"generated":{"line":41,"column":15}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":20},"generated":{"line":41,"column":18}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":21},"generated":{"line":41,"column":19}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":42,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":58,"column":12},"generated":{"line":42,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":58,"column":13},"generated":{"line":42,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":58,"column":19},"generated":{"line":42,"column":15}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":42,"column":18}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":58,"column":28},"generated":{"line":42,"column":24}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":43,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":59,"column":12},"generated":{"line":43,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":59,"column":13},"generated":{"line":43,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":59,"column":42},"generated":{"line":43,"column":38}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":59,"column":45},"generated":{"line":43,"column":41}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":59,"column":49},"generated":{"line":43,"column":45}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":8},"generated":{"line":44,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":12},"generated":{"line":44,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":13},"generated":{"line":44,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":30},"generated":{"line":44,"column":26}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":31},"generated":{"line":44,"column":27}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":34},"generated":{"line":44,"column":30}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":36},"generated":{"line":44,"column":31}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":50},"generated":{"line":44,"column":37}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":60,"column":54},"generated":{"line":44,"column":41}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":12},"generated":{"line":45,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":18},"generated":{"line":45,"column":12}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":19},"generated":{"line":45,"column":13}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":44},"generated":{"line":45,"column":38}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":45},"generated":{"line":45,"column":39}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":61},"generated":{"line":45,"column":55}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":63},"generated":{"line":45,"column":57}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":80},"generated":{"line":45,"column":74}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":61,"column":81},"generated":{"line":45,"column":75}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":46,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":18},"generated":{"line":46,"column":12}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":19},"generated":{"line":46,"column":13}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":50},"generated":{"line":46,"column":44}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":51},"generated":{"line":46,"column":45}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":62},"generated":{"line":46,"column":56}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":64},"generated":{"line":46,"column":58}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":71},"generated":{"line":46,"column":65}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":62,"column":72},"generated":{"line":46,"column":66}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":12},"generated":{"line":47,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":18},"generated":{"line":47,"column":12}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":47,"column":13}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":27},"generated":{"line":47,"column":21}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":28},"generated":{"line":47,"column":22}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":41},"generated":{"line":47,"column":35}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":43},"generated":{"line":47,"column":37}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":47},"generated":{"line":47,"column":41}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":47,"column":42}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":47,"column":48}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":63,"column":55},"generated":{"line":47,"column":49}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":48,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":48,"column":5}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":48,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":49,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":66,"column":12},"generated":{"line":49,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":49,"column":9}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":66,"column":29},"generated":{"line":49,"column":25}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":66,"column":31},"generated":{"line":49,"column":27}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":50,"column":6}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":67,"column":16},"generated":{"line":50,"column":10}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":50,"column":11}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":50,"column":23}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":50,"column":24}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":67,"column":31},"generated":{"line":50,"column":25}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":52,"column":2}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":54,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":54,"column":7}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":54,"column":8}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":54,"column":29}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":54,"column":32}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":54,"column":53}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":55,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":55,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":55,"column":23}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":55,"column":25}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":18,"column":5},"generated":{"line":55,"column":26}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":18,"column":5},"generated":{"line":55,"column":30}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":18,"column":14},"generated":{"line":55,"column":51}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":18,"column":14},"generated":{"line":55,"column":53}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":55,"column":54}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":55,"column":107}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":0},"generated":{"line":56,"column":4}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":13},"generated":{"line":56,"column":28}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":14},"generated":{"line":56,"column":30}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":45},"generated":{"line":56,"column":61}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":47},"generated":{"line":56,"column":63}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":68},"generated":{"line":56,"column":84}},{"source":"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts","name":null,"original":{"line":72,"column":69},"generated":{"line":56,"column":85}}],"sources":{"../../../../lts/core/generated/PostProcesses/bloomMergePostProcess.ts":"import type { PostProcessOptions } from \"./postProcess\";\r\nimport { PostProcess } from \"./postProcess\";\r\nimport type { Nullable } from \"../types\";\r\nimport type { Engine } from \"../Engines/engine\";\r\nimport type { Effect } from \"../Materials/effect\";\r\nimport type { Camera } from \"../Cameras/camera\";\r\nimport { Constants } from \"../Engines/constants\";\r\n\r\nimport \"../Shaders/bloomMerge.fragment\";\r\nimport { RegisterClass } from \"../Misc/typeStore\";\r\nimport { serialize } from \"../Misc/decorators\";\r\n\r\n/**\r\n * The BloomMergePostProcess merges blurred images with the original based on the values of the circle of confusion.\r\n */\r\nexport class BloomMergePostProcess extends PostProcess {\r\n    /** Weight of the bloom to be added to the original input. */\r\n    @serialize()\r\n    public weight = 1;\r\n\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"BloomMergePostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"BloomMergePostProcess\";\r\n    }\r\n\r\n    /**\r\n     * Creates a new instance of @see BloomMergePostProcess\r\n     * @param name The name of the effect.\r\n     * @param originalFromInput Post process which's input will be used for the merge.\r\n     * @param blurred Blurred highlights post process which's output will be used.\r\n     * @param weight Weight of the bloom to be added to the original input.\r\n     * @param options The required width/height ratio to downsize to before computing the render pass.\r\n     * @param camera The camera to apply the render pass to.\r\n     * @param samplingMode The sampling mode to be used when computing the pass. (default: 0)\r\n     * @param engine The engine which the post process will be applied. (default: current engine)\r\n     * @param reusable If the post process can be reused on the same frame. (default: false)\r\n     * @param textureType Type of textures used when performing the post process. (default: 0)\r\n     * @param blockCompilation If compilation of the shader should not be done in the constructor. The updateEffect method can be used to compile the shader at a later time. (default: false)\r\n     */\r\n    constructor(\r\n        name: string,\r\n        originalFromInput: PostProcess,\r\n        blurred: PostProcess,\r\n        /** Weight of the bloom to be added to the original input. */\r\n        weight: number,\r\n        options: number | PostProcessOptions,\r\n        camera: Nullable<Camera>,\r\n        samplingMode?: number,\r\n        engine?: Engine,\r\n        reusable?: boolean,\r\n        textureType: number = Constants.TEXTURETYPE_UNSIGNED_INT,\r\n        blockCompilation = false\r\n    ) {\r\n        super(name, \"bloomMerge\", [\"bloomWeight\"], [\"bloomBlur\"], options, camera, samplingMode, engine, reusable, null, textureType, undefined, null, true);\r\n        this.weight = weight;\r\n        this.externalTextureSamplerBinding = true;\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            effect.setTextureFromPostProcess(\"textureSampler\", originalFromInput);\r\n            effect.setTextureFromPostProcessOutput(\"bloomBlur\", blurred);\r\n            effect.setFloat(\"bloomWeight\", this.weight);\r\n        });\r\n\r\n        if (!blockCompilation) {\r\n            this.updateEffect();\r\n        }\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.BloomMergePostProcess\", BloomMergePostProcess);\r\n"},"lineCount":null}},"error":null,"hash":"ad53d85355cf47989311e97980f13e38","cacheData":{"env":{}}}