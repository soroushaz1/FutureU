{"id":"node_modules/@babylonjs/core/Meshes/meshLODLevel.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Meshes\\meshLODLevel.js.map","includedInParent":true,"mtime":1704105649659},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MeshLODLevel = void 0;\n/**\n * Class used to represent a specific level of detail of a mesh\n * @see https://doc.babylonjs.com/features/featuresDeepDive/mesh/LOD\n */\nclass MeshLODLevel {\n  /**\n   * Creates a new LOD level\n   * @param distanceOrScreenCoverage defines either the distance or the screen coverage where this level should start being displayed\n   * @param mesh defines the mesh to use to render this level\n   */\n  constructor( /** Either distance from the center of the object to show this level or the screen coverage if `useLODScreenCoverage` is set to `true` on the mesh*/\n  distanceOrScreenCoverage, /** Defines the mesh to use to render this level */\n  mesh) {\n    this.distanceOrScreenCoverage = distanceOrScreenCoverage;\n    this.mesh = mesh;\n  }\n}\nexports.MeshLODLevel = MeshLODLevel;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":11,"column":18}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":11,"column":19}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":12,"column":2}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":2}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":13}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":14}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":17,"column":15}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":18,"column":2}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":47},"generated":{"line":18,"column":26}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":18,"column":28}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":19,"column":2}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":19,"column":6}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":19,"column":8}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":20,"column":4}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":20,"column":8}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":20,"column":9}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":39},"generated":{"line":20,"column":33}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":20,"column":36}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":16,"column":39},"generated":{"line":20,"column":60}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":21,"column":4}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":21,"column":8}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":21,"column":9}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":21,"column":13}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":21,"column":16}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":21,"column":20}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":19,"column":7},"generated":{"line":22,"column":2}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":24,"column":0}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":24,"column":7}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":24,"column":8}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":24,"column":20}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":24,"column":23}},{"source":"../../../../lts/core/generated/Meshes/meshLODLevel.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":24,"column":35}}],"sources":{"../../../../lts/core/generated/Meshes/meshLODLevel.ts":"import type { Mesh } from \"./mesh\";\r\nimport type { Nullable } from \"../types\";\r\n\r\n/**\r\n * Class used to represent a specific level of detail of a mesh\r\n * @see https://doc.babylonjs.com/features/featuresDeepDive/mesh/LOD\r\n */\r\nexport class MeshLODLevel {\r\n    /**\r\n     * Creates a new LOD level\r\n     * @param distanceOrScreenCoverage defines either the distance or the screen coverage where this level should start being displayed\r\n     * @param mesh defines the mesh to use to render this level\r\n     */\r\n    constructor(\r\n        /** Either distance from the center of the object to show this level or the screen coverage if `useLODScreenCoverage` is set to `true` on the mesh*/\r\n        public distanceOrScreenCoverage: number,\r\n        /** Defines the mesh to use to render this level */\r\n        public mesh: Nullable<Mesh>\r\n    ) {}\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"aa358f14bb0c652ed5ff16f3585e2d69","cacheData":{"env":{}}}