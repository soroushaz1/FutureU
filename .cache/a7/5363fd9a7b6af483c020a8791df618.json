{"id":"node_modules/@babylonjs/core/Shaders/screenSpaceReflection2Blur.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\screenSpaceReflection2Blur.fragment.js.map","includedInParent":true,"mtime":1704105649903},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\screenSpaceReflection2Blur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.screenSpaceReflection2BlurPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"screenSpaceReflection2BlurPixelShader\";\nconst shader = `#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)\n#define TEXTUREFUNC(s,c,lod) texture2DLodEXT(s,c,lod)\n#else\n#define TEXTUREFUNC(s,c,bias) texture2D(s,c,bias)\n#endif\nuniform sampler2D textureSampler;\nvarying vec2 vUV;\nuniform vec2 texelOffsetScale;\nconst float weights[8]=float[8] (0.071303,0.131514,0.189879,0.321392,0.452906, 0.584419,0.715932,0.847445);\nvoid processSample(vec2 uv,float i,vec2 stepSize,inout vec4 accumulator,inout float denominator)\n{\nvec2 offsetUV=stepSize*i+uv;\nfloat coefficient=weights[int(2.0-abs(i))];\naccumulator+=TEXTUREFUNC(textureSampler,offsetUV,0.0)*coefficient;\ndenominator+=coefficient;\n}\nvoid main()\n{\nvec4 colorFull=TEXTUREFUNC(textureSampler,vUV,0.0);\nif (dot(colorFull,vec4(1.0))==0.0) {\ngl_FragColor=colorFull;\nreturn;\n}\nfloat blurRadius=colorFull.a*255.0; \nvec2 stepSize=texelOffsetScale.xy*blurRadius;\nvec4 accumulator=TEXTUREFUNC(textureSampler,vUV,0.0)*0.214607;\nfloat denominator=0.214607;\nprocessSample(vUV,1.0,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*0.2,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*0.4,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*0.6,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*0.8,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*1.2,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*1.4,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*1.6,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*1.8,stepSize,accumulator,denominator);\nprocessSample(vUV,1.0*2.0,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*0.2,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*0.4,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*0.6,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*0.8,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*1.2,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*1.4,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*1.6,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*1.8,stepSize,accumulator,denominator);\nprocessSample(vUV,-1.0*2.0,stepSize,accumulator,denominator);\ngl_FragColor=vec4(accumulator.rgb/denominator,colorFull.a);\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst screenSpaceReflection2BlurPixelShader = exports.screenSpaceReflection2BlurPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":4,"column":52},"generated":{"line":10,"column":52}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":54,"column":1},"generated":{"line":60,"column":1}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":62,"column":24}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":62,"column":25}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":24},"generated":{"line":62,"column":37}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":25},"generated":{"line":62,"column":38}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":29},"generated":{"line":62,"column":42}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":30},"generated":{"line":62,"column":43}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":62,"column":46}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":56,"column":39},"generated":{"line":62,"column":52}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":7},"generated":{"line":64,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":13},"generated":{"line":64,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":50},"generated":{"line":64,"column":43}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":50},"generated":{"line":64,"column":46}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":50},"generated":{"line":64,"column":53}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":50},"generated":{"line":64,"column":54}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":50},"generated":{"line":64,"column":91}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":53},"generated":{"line":64,"column":94}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":55},"generated":{"line":65,"column":2}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":59},"generated":{"line":65,"column":6}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":61},"generated":{"line":66,"column":2}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":67},"generated":{"line":67,"column":0}},{"source":"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts","name":null,"original":{"line":58,"column":69},"generated":{"line":67,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/screenSpaceReflection2Blur.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"screenSpaceReflection2BlurPixelShader\";\nconst shader = `#if defined(WEBGL2) || defined(WEBGPU) || defined(NATIVE)\n#define TEXTUREFUNC(s,c,lod) texture2DLodEXT(s,c,lod)\n#else\n#define TEXTUREFUNC(s,c,bias) texture2D(s,c,bias)\n#endif\nuniform sampler2D textureSampler;\rvarying vec2 vUV;\runiform vec2 texelOffsetScale;\rconst float weights[8]=float[8] (0.071303,0.131514,0.189879,0.321392,0.452906, 0.584419,0.715932,0.847445);\rvoid processSample(vec2 uv,float i,vec2 stepSize,inout vec4 accumulator,inout float denominator)\r{\rvec2 offsetUV=stepSize*i+uv;\rfloat coefficient=weights[int(2.0-abs(i))];\raccumulator+=TEXTUREFUNC(textureSampler,offsetUV,0.0)*coefficient;\rdenominator+=coefficient;\r}\rvoid main()\r{\rvec4 colorFull=TEXTUREFUNC(textureSampler,vUV,0.0);\rif (dot(colorFull,vec4(1.0))==0.0) {\rgl_FragColor=colorFull;\rreturn;\r}\rfloat blurRadius=colorFull.a*255.0; \rvec2 stepSize=texelOffsetScale.xy*blurRadius;\rvec4 accumulator=TEXTUREFUNC(textureSampler,vUV,0.0)*0.214607;\rfloat denominator=0.214607;\rprocessSample(vUV,1.0,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*0.2,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*0.4,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*0.6,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*0.8,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*1.2,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*1.4,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*1.6,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*1.8,stepSize,accumulator,denominator);\rprocessSample(vUV,1.0*2.0,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*0.2,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*0.4,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*0.6,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*0.8,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*1.2,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*1.4,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*1.6,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*1.8,stepSize,accumulator,denominator);\rprocessSample(vUV,-1.0*2.0,stepSize,accumulator,denominator);\rgl_FragColor=vec4(accumulator.rgb/denominator,colorFull.a);\r}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const screenSpaceReflection2BlurPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"b4a8599736afd8df105461fb75f0cd9e","cacheData":{"env":{}}}