{"id":"node_modules/@babylonjs/core/Shaders/background.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js.map","includedInParent":true,"mtime":1704105648380},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"},{"name":"./ShadersInclude/backgroundFragmentDeclaration.js","loc":{"line":3,"column":7,"index":80},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\backgroundFragmentDeclaration.js"},{"name":"./ShadersInclude/backgroundUboDeclaration.js","loc":{"line":4,"column":7,"index":140},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\backgroundUboDeclaration.js"},{"name":"./ShadersInclude/helperFunctions.js","loc":{"line":5,"column":7,"index":195},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\helperFunctions.js"},{"name":"./ShadersInclude/reflectionFunction.js","loc":{"line":6,"column":7,"index":241},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\reflectionFunction.js"},{"name":"./ShadersInclude/imageProcessingDeclaration.js","loc":{"line":7,"column":7,"index":290},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\imageProcessingDeclaration.js"},{"name":"./ShadersInclude/lightFragmentDeclaration.js","loc":{"line":8,"column":7,"index":347},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\lightFragmentDeclaration.js"},{"name":"./ShadersInclude/lightUboDeclaration.js","loc":{"line":9,"column":7,"index":402},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\lightUboDeclaration.js"},{"name":"./ShadersInclude/lightsFragmentFunctions.js","loc":{"line":10,"column":7,"index":452},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\lightsFragmentFunctions.js"},{"name":"./ShadersInclude/shadowsFragmentFunctions.js","loc":{"line":11,"column":7,"index":506},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\shadowsFragmentFunctions.js"},{"name":"./ShadersInclude/imageProcessingFunctions.js","loc":{"line":12,"column":7,"index":561},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\imageProcessingFunctions.js"},{"name":"./ShadersInclude/clipPlaneFragmentDeclaration.js","loc":{"line":13,"column":7,"index":616},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\clipPlaneFragmentDeclaration.js"},{"name":"./ShadersInclude/fogFragmentDeclaration.js","loc":{"line":14,"column":7,"index":675},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\fogFragmentDeclaration.js"},{"name":"./ShadersInclude/clipPlaneFragment.js","loc":{"line":15,"column":7,"index":728},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\clipPlaneFragment.js"},{"name":"./ShadersInclude/lightFragment.js","loc":{"line":16,"column":7,"index":776},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\lightFragment.js"},{"name":"./ShadersInclude/fogFragment.js","loc":{"line":17,"column":7,"index":820},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\background.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\fogFragment.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.backgroundPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\nrequire(\"./ShadersInclude/backgroundFragmentDeclaration.js\");\nrequire(\"./ShadersInclude/backgroundUboDeclaration.js\");\nrequire(\"./ShadersInclude/helperFunctions.js\");\nrequire(\"./ShadersInclude/reflectionFunction.js\");\nrequire(\"./ShadersInclude/imageProcessingDeclaration.js\");\nrequire(\"./ShadersInclude/lightFragmentDeclaration.js\");\nrequire(\"./ShadersInclude/lightUboDeclaration.js\");\nrequire(\"./ShadersInclude/lightsFragmentFunctions.js\");\nrequire(\"./ShadersInclude/shadowsFragmentFunctions.js\");\nrequire(\"./ShadersInclude/imageProcessingFunctions.js\");\nrequire(\"./ShadersInclude/clipPlaneFragmentDeclaration.js\");\nrequire(\"./ShadersInclude/fogFragmentDeclaration.js\");\nrequire(\"./ShadersInclude/clipPlaneFragment.js\");\nrequire(\"./ShadersInclude/lightFragment.js\");\nrequire(\"./ShadersInclude/fogFragment.js\");\n// Do not edit.\n\nconst name = \"backgroundPixelShader\";\nconst shader = `#ifdef TEXTURELODSUPPORT\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;\n#include<__decl__backgroundFragment>\n#include<helperFunctions>\n#define RECIPROCAL_PI2 0.15915494\nvarying vec3 vPositionW;\n#ifdef MAINUV1\nvarying vec2 vMainUV1;\n#endif \n#ifdef MAINUV2 \nvarying vec2 vMainUV2; \n#endif \n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef DIFFUSE\n#if DIFFUSEDIRECTUV==1\n#define vDiffuseUV vMainUV1\n#elif DIFFUSEDIRECTUV==2\n#define vDiffuseUV vMainUV2\n#else\nvarying vec2 vDiffuseUV;\n#endif\nuniform sampler2D diffuseSampler;\n#endif\n#ifdef REFLECTION\n#ifdef REFLECTIONMAP_3D\n#define sampleReflection(s,c) textureCube(s,c)\nuniform samplerCube reflectionSampler;\n#ifdef TEXTURELODSUPPORT\n#define sampleReflectionLod(s,c,l) textureCubeLodEXT(s,c,l)\n#else\nuniform samplerCube reflectionSamplerLow;\nuniform samplerCube reflectionSamplerHigh;\n#endif\n#else\n#define sampleReflection(s,c) texture2D(s,c)\nuniform sampler2D reflectionSampler;\n#ifdef TEXTURELODSUPPORT\n#define sampleReflectionLod(s,c,l) texture2DLodEXT(s,c,l)\n#else\nuniform samplerCube reflectionSamplerLow;\nuniform samplerCube reflectionSamplerHigh;\n#endif\n#endif\n#ifdef REFLECTIONMAP_SKYBOX\nvarying vec3 vPositionUVW;\n#else\n#if defined(REFLECTIONMAP_EQUIRECTANGULAR_FIXED) || defined(REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED)\nvarying vec3 vDirectionW;\n#endif\n#endif\n#include<reflectionFunction>\n#endif\n#ifndef FROMLINEARSPACE\n#define FROMLINEARSPACE;\n#endif\n#ifndef SHADOWONLY\n#define SHADOWONLY;\n#endif\n#include<imageProcessingDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<imageProcessingFunctions>\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#ifdef REFLECTIONFRESNEL\n#define FRESNEL_MAXIMUM_ON_ROUGH 0.25\nvec3 fresnelSchlickEnvironmentGGX(float VdotN,vec3 reflectance0,vec3 reflectance90,float smoothness)\n{\nfloat weight=mix(FRESNEL_MAXIMUM_ON_ROUGH,1.0,smoothness);\nreturn reflectance0+weight*(reflectance90-reflectance0)*pow5(saturate(1.0-VdotN));\n}\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(0.0,1.0,0.0);\n#endif\nfloat shadow=1.;\nfloat globalShadow=0.;\nfloat shadowLightCount=0.;\n#include<lightFragment>[0..maxSimultaneousLights]\n#ifdef SHADOWINUSE\nglobalShadow/=shadowLightCount;\n#else\nglobalShadow=1.0;\n#endif\n#ifndef BACKMAT_SHADOWONLY\nvec4 reflectionColor=vec4(1.,1.,1.,1.);\n#ifdef REFLECTION\nvec3 reflectionVector=computeReflectionCoords(vec4(vPositionW,1.0),normalW);\n#ifdef REFLECTIONMAP_OPPOSITEZ\nreflectionVector.z*=-1.0;\n#endif\n#ifdef REFLECTIONMAP_3D\nvec3 reflectionCoords=reflectionVector;\n#else\nvec2 reflectionCoords=reflectionVector.xy;\n#ifdef REFLECTIONMAP_PROJECTION\nreflectionCoords/=reflectionVector.z;\n#endif\nreflectionCoords.y=1.0-reflectionCoords.y;\n#endif\n#ifdef REFLECTIONBLUR\nfloat reflectionLOD=vReflectionInfos.y;\n#ifdef TEXTURELODSUPPORT\nreflectionLOD=reflectionLOD*log2(vReflectionMicrosurfaceInfos.x)*vReflectionMicrosurfaceInfos.y+vReflectionMicrosurfaceInfos.z;\nreflectionColor=sampleReflectionLod(reflectionSampler,reflectionCoords,reflectionLOD);\n#else\nfloat lodReflectionNormalized=saturate(reflectionLOD);\nfloat lodReflectionNormalizedDoubled=lodReflectionNormalized*2.0;\nvec4 reflectionSpecularMid=sampleReflection(reflectionSampler,reflectionCoords);\nif(lodReflectionNormalizedDoubled<1.0){\nreflectionColor=mix(\nsampleReflection(reflectionSamplerHigh,reflectionCoords),\nreflectionSpecularMid,\nlodReflectionNormalizedDoubled\n);\n} else {\nreflectionColor=mix(\nreflectionSpecularMid,\nsampleReflection(reflectionSamplerLow,reflectionCoords),\nlodReflectionNormalizedDoubled-1.0\n);\n}\n#endif\n#else\nvec4 reflectionSample=sampleReflection(reflectionSampler,reflectionCoords);\nreflectionColor=reflectionSample;\n#endif\n#ifdef RGBDREFLECTION\nreflectionColor.rgb=fromRGBD(reflectionColor);\n#endif\n#ifdef GAMMAREFLECTION\nreflectionColor.rgb=toLinearSpace(reflectionColor.rgb);\n#endif\n#ifdef REFLECTIONBGR\nreflectionColor.rgb=reflectionColor.bgr;\n#endif\nreflectionColor.rgb*=vReflectionInfos.x;\n#endif\nvec3 diffuseColor=vec3(1.,1.,1.);\nfloat finalAlpha=alpha;\n#ifdef DIFFUSE\nvec4 diffuseMap=texture2D(diffuseSampler,vDiffuseUV);\n#ifdef GAMMADIFFUSE\ndiffuseMap.rgb=toLinearSpace(diffuseMap.rgb);\n#endif\ndiffuseMap.rgb*=vDiffuseInfos.y;\n#ifdef DIFFUSEHASALPHA\nfinalAlpha*=diffuseMap.a;\n#endif\ndiffuseColor=diffuseMap.rgb;\n#endif\n#ifdef REFLECTIONFRESNEL\nvec3 colorBase=diffuseColor;\n#else\nvec3 colorBase=reflectionColor.rgb*diffuseColor;\n#endif\ncolorBase=max(colorBase,0.0);\n#ifdef USERGBCOLOR\nvec3 finalColor=colorBase;\n#else\n#ifdef USEHIGHLIGHTANDSHADOWCOLORS\nvec3 mainColor=mix(vPrimaryColorShadow.rgb,vPrimaryColor.rgb,colorBase);\n#else\nvec3 mainColor=vPrimaryColor.rgb;\n#endif\nvec3 finalColor=colorBase*mainColor;\n#endif\n#ifdef REFLECTIONFRESNEL\nvec3 reflectionAmount=vReflectionControl.xxx;\nvec3 reflectionReflectance0=vReflectionControl.yyy;\nvec3 reflectionReflectance90=vReflectionControl.zzz;\nfloat VdotN=dot(normalize(vEyePosition.xyz),normalW);\nvec3 planarReflectionFresnel=fresnelSchlickEnvironmentGGX(saturate(VdotN),reflectionReflectance0,reflectionReflectance90,1.0);\nreflectionAmount*=planarReflectionFresnel;\n#ifdef REFLECTIONFALLOFF\nfloat reflectionDistanceFalloff=1.0-saturate(length(vPositionW.xyz-vBackgroundCenter)*vReflectionControl.w);\nreflectionDistanceFalloff*=reflectionDistanceFalloff;\nreflectionAmount*=reflectionDistanceFalloff;\n#endif\nfinalColor=mix(finalColor,reflectionColor.rgb,saturate(reflectionAmount));\n#endif\n#ifdef OPACITYFRESNEL\nfloat viewAngleToFloor=dot(normalW,normalize(vEyePosition.xyz-vBackgroundCenter));\nconst float startAngle=0.1;\nfloat fadeFactor=saturate(viewAngleToFloor/startAngle);\nfinalAlpha*=fadeFactor*fadeFactor;\n#endif\n#ifdef SHADOWINUSE\nfinalColor=mix(finalColor*shadowLevel,finalColor,globalShadow);\n#endif\nvec4 color=vec4(finalColor,finalAlpha);\n#else\nvec4 color=vec4(vPrimaryColor.rgb,(1.0-clamp(globalShadow,0.,1.))*alpha);\n#endif\n#include<fogFragment>\n#ifdef IMAGEPROCESSINGPOSTPROCESS\n#if !defined(SKIPFINALCOLORCLAMP)\ncolor.rgb=clamp(color.rgb,0.,30.0);\n#endif\n#else\ncolor=applyImageProcessing(color);\n#endif\n#ifdef PREMULTIPLYALPHA\ncolor.rgb*=color.a;\n#endif\n#ifdef NOISE\ncolor.rgb+=dither(vPositionW.xy,0.5);\ncolor=max(color,0.0);\n#endif\ngl_FragColor=color;\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst backgroundPixelShader = exports.backgroundPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":16,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":17,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":18,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":20,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":21,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":22,"column":7}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":6}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":19,"column":10},"generated":{"line":25,"column":10}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":19,"column":13},"generated":{"line":25,"column":13}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":19,"column":36},"generated":{"line":25,"column":36}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":26,"column":6}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":26,"column":12}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":26,"column":15}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":244,"column":1},"generated":{"line":250,"column":1}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":245,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":11},"generated":{"line":252,"column":24}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":12},"generated":{"line":252,"column":25}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":24},"generated":{"line":252,"column":37}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":25},"generated":{"line":252,"column":38}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":29},"generated":{"line":252,"column":42}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":30},"generated":{"line":252,"column":43}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":33},"generated":{"line":252,"column":46}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":246,"column":39},"generated":{"line":252,"column":52}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":247,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":7},"generated":{"line":254,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":13},"generated":{"line":254,"column":6}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":34},"generated":{"line":254,"column":27}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":34},"generated":{"line":254,"column":30}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":34},"generated":{"line":254,"column":37}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":34},"generated":{"line":254,"column":38}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":34},"generated":{"line":254,"column":59}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":37},"generated":{"line":254,"column":62}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":39},"generated":{"line":255,"column":2}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":43},"generated":{"line":255,"column":6}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":45},"generated":{"line":256,"column":2}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":51},"generated":{"line":257,"column":0}},{"source":"../../../../lts/core/generated/Shaders/background.fragment.ts","name":null,"original":{"line":248,"column":53},"generated":{"line":257,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/background.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/backgroundFragmentDeclaration\";\nimport \"./ShadersInclude/backgroundUboDeclaration\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/reflectionFunction\";\nimport \"./ShadersInclude/imageProcessingDeclaration\";\nimport \"./ShadersInclude/lightFragmentDeclaration\";\nimport \"./ShadersInclude/lightUboDeclaration\";\nimport \"./ShadersInclude/lightsFragmentFunctions\";\nimport \"./ShadersInclude/shadowsFragmentFunctions\";\nimport \"./ShadersInclude/imageProcessingFunctions\";\nimport \"./ShadersInclude/clipPlaneFragmentDeclaration\";\nimport \"./ShadersInclude/fogFragmentDeclaration\";\nimport \"./ShadersInclude/clipPlaneFragment\";\nimport \"./ShadersInclude/lightFragment\";\nimport \"./ShadersInclude/fogFragment\";\n\nconst name = \"backgroundPixelShader\";\nconst shader = `#ifdef TEXTURELODSUPPORT\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;\r#include<__decl__backgroundFragment>\n#include<helperFunctions>\n#define RECIPROCAL_PI2 0.15915494\nvarying vec3 vPositionW;\r#ifdef MAINUV1\nvarying vec2 vMainUV1;\r#endif \n#ifdef MAINUV2 \nvarying vec2 vMainUV2; \r#endif \n#ifdef NORMAL\nvarying vec3 vNormalW;\r#endif\n#ifdef DIFFUSE\n#if DIFFUSEDIRECTUV==1\n#define vDiffuseUV vMainUV1\n#elif DIFFUSEDIRECTUV==2\n#define vDiffuseUV vMainUV2\n#else\nvarying vec2 vDiffuseUV;\r#endif\nuniform sampler2D diffuseSampler;\r#endif\n#ifdef REFLECTION\n#ifdef REFLECTIONMAP_3D\n#define sampleReflection(s,c) textureCube(s,c)\nuniform samplerCube reflectionSampler;\r#ifdef TEXTURELODSUPPORT\n#define sampleReflectionLod(s,c,l) textureCubeLodEXT(s,c,l)\n#else\nuniform samplerCube reflectionSamplerLow;\runiform samplerCube reflectionSamplerHigh;\r#endif\n#else\n#define sampleReflection(s,c) texture2D(s,c)\nuniform sampler2D reflectionSampler;\r#ifdef TEXTURELODSUPPORT\n#define sampleReflectionLod(s,c,l) texture2DLodEXT(s,c,l)\n#else\nuniform samplerCube reflectionSamplerLow;\runiform samplerCube reflectionSamplerHigh;\r#endif\n#endif\n#ifdef REFLECTIONMAP_SKYBOX\nvarying vec3 vPositionUVW;\r#else\n#if defined(REFLECTIONMAP_EQUIRECTANGULAR_FIXED) || defined(REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED)\nvarying vec3 vDirectionW;\r#endif\n#endif\n#include<reflectionFunction>\n#endif\n#ifndef FROMLINEARSPACE\n#define FROMLINEARSPACE;\n#endif\n#ifndef SHADOWONLY\n#define SHADOWONLY;\n#endif\n#include<imageProcessingDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<imageProcessingFunctions>\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#ifdef REFLECTIONFRESNEL\n#define FRESNEL_MAXIMUM_ON_ROUGH 0.25\nvec3 fresnelSchlickEnvironmentGGX(float VdotN,vec3 reflectance0,vec3 reflectance90,float smoothness)\r{\rfloat weight=mix(FRESNEL_MAXIMUM_ON_ROUGH,1.0,smoothness);\rreturn reflectance0+weight*(reflectance90-reflectance0)*pow5(saturate(1.0-VdotN));\r}\r#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\r#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\r#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\r#else\nvec3 normalW=vec3(0.0,1.0,0.0);\r#endif\nfloat shadow=1.;\rfloat globalShadow=0.;\rfloat shadowLightCount=0.;\r#include<lightFragment>[0..maxSimultaneousLights]\n#ifdef SHADOWINUSE\nglobalShadow/=shadowLightCount;\r#else\nglobalShadow=1.0;\r#endif\n#ifndef BACKMAT_SHADOWONLY\nvec4 reflectionColor=vec4(1.,1.,1.,1.);\r#ifdef REFLECTION\nvec3 reflectionVector=computeReflectionCoords(vec4(vPositionW,1.0),normalW);\r#ifdef REFLECTIONMAP_OPPOSITEZ\nreflectionVector.z*=-1.0;\r#endif\n#ifdef REFLECTIONMAP_3D\nvec3 reflectionCoords=reflectionVector;\r#else\nvec2 reflectionCoords=reflectionVector.xy;\r#ifdef REFLECTIONMAP_PROJECTION\nreflectionCoords/=reflectionVector.z;\r#endif\nreflectionCoords.y=1.0-reflectionCoords.y;\r#endif\n#ifdef REFLECTIONBLUR\nfloat reflectionLOD=vReflectionInfos.y;\r#ifdef TEXTURELODSUPPORT\nreflectionLOD=reflectionLOD*log2(vReflectionMicrosurfaceInfos.x)*vReflectionMicrosurfaceInfos.y+vReflectionMicrosurfaceInfos.z;\rreflectionColor=sampleReflectionLod(reflectionSampler,reflectionCoords,reflectionLOD);\r#else\nfloat lodReflectionNormalized=saturate(reflectionLOD);\rfloat lodReflectionNormalizedDoubled=lodReflectionNormalized*2.0;\rvec4 reflectionSpecularMid=sampleReflection(reflectionSampler,reflectionCoords);\rif(lodReflectionNormalizedDoubled<1.0){\rreflectionColor=mix(\rsampleReflection(reflectionSamplerHigh,reflectionCoords),\rreflectionSpecularMid,\rlodReflectionNormalizedDoubled\r);\r} else {\rreflectionColor=mix(\rreflectionSpecularMid,\rsampleReflection(reflectionSamplerLow,reflectionCoords),\rlodReflectionNormalizedDoubled-1.0\r);\r}\r#endif\n#else\nvec4 reflectionSample=sampleReflection(reflectionSampler,reflectionCoords);\rreflectionColor=reflectionSample;\r#endif\n#ifdef RGBDREFLECTION\nreflectionColor.rgb=fromRGBD(reflectionColor);\r#endif\n#ifdef GAMMAREFLECTION\nreflectionColor.rgb=toLinearSpace(reflectionColor.rgb);\r#endif\n#ifdef REFLECTIONBGR\nreflectionColor.rgb=reflectionColor.bgr;\r#endif\nreflectionColor.rgb*=vReflectionInfos.x;\r#endif\nvec3 diffuseColor=vec3(1.,1.,1.);\rfloat finalAlpha=alpha;\r#ifdef DIFFUSE\nvec4 diffuseMap=texture2D(diffuseSampler,vDiffuseUV);\r#ifdef GAMMADIFFUSE\ndiffuseMap.rgb=toLinearSpace(diffuseMap.rgb);\r#endif\ndiffuseMap.rgb*=vDiffuseInfos.y;\r#ifdef DIFFUSEHASALPHA\nfinalAlpha*=diffuseMap.a;\r#endif\ndiffuseColor=diffuseMap.rgb;\r#endif\n#ifdef REFLECTIONFRESNEL\nvec3 colorBase=diffuseColor;\r#else\nvec3 colorBase=reflectionColor.rgb*diffuseColor;\r#endif\ncolorBase=max(colorBase,0.0);\r#ifdef USERGBCOLOR\nvec3 finalColor=colorBase;\r#else\n#ifdef USEHIGHLIGHTANDSHADOWCOLORS\nvec3 mainColor=mix(vPrimaryColorShadow.rgb,vPrimaryColor.rgb,colorBase);\r#else\nvec3 mainColor=vPrimaryColor.rgb;\r#endif\nvec3 finalColor=colorBase*mainColor;\r#endif\n#ifdef REFLECTIONFRESNEL\nvec3 reflectionAmount=vReflectionControl.xxx;\rvec3 reflectionReflectance0=vReflectionControl.yyy;\rvec3 reflectionReflectance90=vReflectionControl.zzz;\rfloat VdotN=dot(normalize(vEyePosition.xyz),normalW);\rvec3 planarReflectionFresnel=fresnelSchlickEnvironmentGGX(saturate(VdotN),reflectionReflectance0,reflectionReflectance90,1.0);\rreflectionAmount*=planarReflectionFresnel;\r#ifdef REFLECTIONFALLOFF\nfloat reflectionDistanceFalloff=1.0-saturate(length(vPositionW.xyz-vBackgroundCenter)*vReflectionControl.w);\rreflectionDistanceFalloff*=reflectionDistanceFalloff;\rreflectionAmount*=reflectionDistanceFalloff;\r#endif\nfinalColor=mix(finalColor,reflectionColor.rgb,saturate(reflectionAmount));\r#endif\n#ifdef OPACITYFRESNEL\nfloat viewAngleToFloor=dot(normalW,normalize(vEyePosition.xyz-vBackgroundCenter));\rconst float startAngle=0.1;\rfloat fadeFactor=saturate(viewAngleToFloor/startAngle);\rfinalAlpha*=fadeFactor*fadeFactor;\r#endif\n#ifdef SHADOWINUSE\nfinalColor=mix(finalColor*shadowLevel,finalColor,globalShadow);\r#endif\nvec4 color=vec4(finalColor,finalAlpha);\r#else\nvec4 color=vec4(vPrimaryColor.rgb,(1.0-clamp(globalShadow,0.,1.))*alpha);\r#endif\n#include<fogFragment>\n#ifdef IMAGEPROCESSINGPOSTPROCESS\n#if !defined(SKIPFINALCOLORCLAMP)\ncolor.rgb=clamp(color.rgb,0.,30.0);\r#endif\n#else\ncolor=applyImageProcessing(color);\r#endif\n#ifdef PREMULTIPLYALPHA\ncolor.rgb*=color.a;\r#endif\n#ifdef NOISE\ncolor.rgb+=dither(vPositionW.xy,0.5);\rcolor=max(color,0.0);\r#endif\ngl_FragColor=color;\r#define CUSTOM_FRAGMENT_MAIN_END\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const backgroundPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"b0c340f4cd7d442b7ea4f601e99006e1","cacheData":{"env":{}}}