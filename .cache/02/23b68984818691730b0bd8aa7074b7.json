{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrBlockReflectivity.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockReflectivity.js.map","includedInParent":true,"mtime":1704105649764},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockReflectivity.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbrBlockReflectivity = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"pbrBlockReflectivity\";\nconst shader = `struct reflectivityOutParams\n{\nfloat microSurface;\nfloat roughness;\nvec3 surfaceReflectivityColor;\n#ifdef METALLICWORKFLOW\nvec3 surfaceAlbedo;\n#endif\n#if defined(METALLICWORKFLOW) && defined(REFLECTIVITY) && defined(AOSTOREINMETALMAPRED)\nvec3 ambientOcclusionColor;\n#endif\n#if DEBUGMODE>0\nvec4 surfaceMetallicColorMap;\nvec4 surfaceReflectivityColorMap;\nvec2 metallicRoughness;\nvec3 metallicF0;\n#endif\n};\n#define pbr_inline\nvoid reflectivityBlock(\nin vec4 vReflectivityColor,\n#ifdef METALLICWORKFLOW\nin vec3 surfaceAlbedo,\nin vec4 metallicReflectanceFactors,\n#endif\n#ifdef REFLECTIVITY\nin vec3 reflectivityInfos,\nin vec4 surfaceMetallicOrReflectivityColorMap,\n#endif\n#if defined(METALLICWORKFLOW) && defined(REFLECTIVITY) && defined(AOSTOREINMETALMAPRED)\nin vec3 ambientOcclusionColorIn,\n#endif\n#ifdef MICROSURFACEMAP\nin vec4 microSurfaceTexel,\n#endif\n#ifdef DETAIL\nin vec4 detailColor,\nin vec4 vDetailInfos,\n#endif\nout reflectivityOutParams outParams\n)\n{\nfloat microSurface=vReflectivityColor.a;\nvec3 surfaceReflectivityColor=vReflectivityColor.rgb;\n#ifdef METALLICWORKFLOW\nvec2 metallicRoughness=surfaceReflectivityColor.rg;\n#ifdef REFLECTIVITY\n#if DEBUGMODE>0\noutParams.surfaceMetallicColorMap=surfaceMetallicOrReflectivityColorMap;\n#endif\n#ifdef AOSTOREINMETALMAPRED\nvec3 aoStoreInMetalMap=vec3(surfaceMetallicOrReflectivityColorMap.r,surfaceMetallicOrReflectivityColorMap.r,surfaceMetallicOrReflectivityColorMap.r);\noutParams.ambientOcclusionColor=mix(ambientOcclusionColorIn,aoStoreInMetalMap,reflectivityInfos.z);\n#endif\n#ifdef METALLNESSSTOREINMETALMAPBLUE\nmetallicRoughness.r*=surfaceMetallicOrReflectivityColorMap.b;\n#else\nmetallicRoughness.r*=surfaceMetallicOrReflectivityColorMap.r;\n#endif\n#ifdef ROUGHNESSSTOREINMETALMAPALPHA\nmetallicRoughness.g*=surfaceMetallicOrReflectivityColorMap.a;\n#else\n#ifdef ROUGHNESSSTOREINMETALMAPGREEN\nmetallicRoughness.g*=surfaceMetallicOrReflectivityColorMap.g;\n#endif\n#endif\n#endif\n#ifdef DETAIL\nfloat detailRoughness=mix(0.5,detailColor.b,vDetailInfos.w);\nfloat loLerp=mix(0.,metallicRoughness.g,detailRoughness*2.);\nfloat hiLerp=mix(metallicRoughness.g,1.,(detailRoughness-0.5)*2.);\nmetallicRoughness.g=mix(loLerp,hiLerp,step(detailRoughness,0.5));\n#endif\n#ifdef MICROSURFACEMAP\nmetallicRoughness.g*=microSurfaceTexel.r;\n#endif\n#if DEBUGMODE>0\noutParams.metallicRoughness=metallicRoughness;\n#endif\n#define CUSTOM_FRAGMENT_UPDATE_METALLICROUGHNESS\nmicroSurface=1.0-metallicRoughness.g;\nvec3 baseColor=surfaceAlbedo;\n#ifdef FROSTBITE_REFLECTANCE\noutParams.surfaceAlbedo=baseColor.rgb*(1.0-metallicRoughness.r);\nsurfaceReflectivityColor=mix(0.16*reflectance*reflectance,baseColor,metallicRoughness.r);\n#else\nvec3 metallicF0=metallicReflectanceFactors.rgb;\n#if DEBUGMODE>0\noutParams.metallicF0=metallicF0;\n#endif\noutParams.surfaceAlbedo=mix(baseColor.rgb*(1.0-metallicF0),vec3(0.,0.,0.),metallicRoughness.r);\nsurfaceReflectivityColor=mix(metallicF0,baseColor,metallicRoughness.r);\n#endif\n#else\n#ifdef REFLECTIVITY\nsurfaceReflectivityColor*=surfaceMetallicOrReflectivityColorMap.rgb;\n#if DEBUGMODE>0\noutParams.surfaceReflectivityColorMap=surfaceMetallicOrReflectivityColorMap;\n#endif\n#ifdef MICROSURFACEFROMREFLECTIVITYMAP\nmicroSurface*=surfaceMetallicOrReflectivityColorMap.a;\nmicroSurface*=reflectivityInfos.z;\n#else\n#ifdef MICROSURFACEAUTOMATIC\nmicroSurface*=computeDefaultMicroSurface(microSurface,surfaceReflectivityColor);\n#endif\n#ifdef MICROSURFACEMAP\nmicroSurface*=microSurfaceTexel.r;\n#endif\n#define CUSTOM_FRAGMENT_UPDATE_MICROSURFACE\n#endif\n#endif\n#endif\nmicroSurface=saturate(microSurface);\nfloat roughness=1.-microSurface;\noutParams.microSurface=microSurface;\noutParams.roughness=roughness;\noutParams.surfaceReflectivityColor=surfaceReflectivityColor;\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst pbrBlockReflectivity = exports.pbrBlockReflectivity = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":10,"column":35}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":124,"column":1},"generated":{"line":130,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":125,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":11},"generated":{"line":132,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":12},"generated":{"line":132,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":32},"generated":{"line":132,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":33},"generated":{"line":132,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":37},"generated":{"line":132,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":38},"generated":{"line":132,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":41},"generated":{"line":132,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":126,"column":47},"generated":{"line":132,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":127,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":7},"generated":{"line":134,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":13},"generated":{"line":134,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":33},"generated":{"line":134,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":33},"generated":{"line":134,"column":29}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":33},"generated":{"line":134,"column":36}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":33},"generated":{"line":134,"column":37}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":33},"generated":{"line":134,"column":57}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":36},"generated":{"line":134,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":38},"generated":{"line":135,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":42},"generated":{"line":135,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":44},"generated":{"line":136,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":50},"generated":{"line":137,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts","name":null,"original":{"line":128,"column":52},"generated":{"line":137,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockReflectivity.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrBlockReflectivity\";\nconst shader = `struct reflectivityOutParams\r{\rfloat microSurface;\rfloat roughness;\rvec3 surfaceReflectivityColor;\r#ifdef METALLICWORKFLOW\nvec3 surfaceAlbedo;\r#endif\n#if defined(METALLICWORKFLOW) && defined(REFLECTIVITY) && defined(AOSTOREINMETALMAPRED)\nvec3 ambientOcclusionColor;\r#endif\n#if DEBUGMODE>0\nvec4 surfaceMetallicColorMap;\rvec4 surfaceReflectivityColorMap;\rvec2 metallicRoughness;\rvec3 metallicF0;\r#endif\n};\r#define pbr_inline\nvoid reflectivityBlock(\rin vec4 vReflectivityColor,\r#ifdef METALLICWORKFLOW\nin vec3 surfaceAlbedo,\rin vec4 metallicReflectanceFactors,\r#endif\n#ifdef REFLECTIVITY\nin vec3 reflectivityInfos,\rin vec4 surfaceMetallicOrReflectivityColorMap,\r#endif\n#if defined(METALLICWORKFLOW) && defined(REFLECTIVITY) && defined(AOSTOREINMETALMAPRED)\nin vec3 ambientOcclusionColorIn,\r#endif\n#ifdef MICROSURFACEMAP\nin vec4 microSurfaceTexel,\r#endif\n#ifdef DETAIL\nin vec4 detailColor,\rin vec4 vDetailInfos,\r#endif\nout reflectivityOutParams outParams\r)\r{\rfloat microSurface=vReflectivityColor.a;\rvec3 surfaceReflectivityColor=vReflectivityColor.rgb;\r#ifdef METALLICWORKFLOW\nvec2 metallicRoughness=surfaceReflectivityColor.rg;\r#ifdef REFLECTIVITY\n#if DEBUGMODE>0\noutParams.surfaceMetallicColorMap=surfaceMetallicOrReflectivityColorMap;\r#endif\n#ifdef AOSTOREINMETALMAPRED\nvec3 aoStoreInMetalMap=vec3(surfaceMetallicOrReflectivityColorMap.r,surfaceMetallicOrReflectivityColorMap.r,surfaceMetallicOrReflectivityColorMap.r);\routParams.ambientOcclusionColor=mix(ambientOcclusionColorIn,aoStoreInMetalMap,reflectivityInfos.z);\r#endif\n#ifdef METALLNESSSTOREINMETALMAPBLUE\nmetallicRoughness.r*=surfaceMetallicOrReflectivityColorMap.b;\r#else\nmetallicRoughness.r*=surfaceMetallicOrReflectivityColorMap.r;\r#endif\n#ifdef ROUGHNESSSTOREINMETALMAPALPHA\nmetallicRoughness.g*=surfaceMetallicOrReflectivityColorMap.a;\r#else\n#ifdef ROUGHNESSSTOREINMETALMAPGREEN\nmetallicRoughness.g*=surfaceMetallicOrReflectivityColorMap.g;\r#endif\n#endif\n#endif\n#ifdef DETAIL\nfloat detailRoughness=mix(0.5,detailColor.b,vDetailInfos.w);\rfloat loLerp=mix(0.,metallicRoughness.g,detailRoughness*2.);\rfloat hiLerp=mix(metallicRoughness.g,1.,(detailRoughness-0.5)*2.);\rmetallicRoughness.g=mix(loLerp,hiLerp,step(detailRoughness,0.5));\r#endif\n#ifdef MICROSURFACEMAP\nmetallicRoughness.g*=microSurfaceTexel.r;\r#endif\n#if DEBUGMODE>0\noutParams.metallicRoughness=metallicRoughness;\r#endif\n#define CUSTOM_FRAGMENT_UPDATE_METALLICROUGHNESS\nmicroSurface=1.0-metallicRoughness.g;\rvec3 baseColor=surfaceAlbedo;\r#ifdef FROSTBITE_REFLECTANCE\noutParams.surfaceAlbedo=baseColor.rgb*(1.0-metallicRoughness.r);\rsurfaceReflectivityColor=mix(0.16*reflectance*reflectance,baseColor,metallicRoughness.r);\r#else\nvec3 metallicF0=metallicReflectanceFactors.rgb;\r#if DEBUGMODE>0\noutParams.metallicF0=metallicF0;\r#endif\noutParams.surfaceAlbedo=mix(baseColor.rgb*(1.0-metallicF0),vec3(0.,0.,0.),metallicRoughness.r);\rsurfaceReflectivityColor=mix(metallicF0,baseColor,metallicRoughness.r);\r#endif\n#else\n#ifdef REFLECTIVITY\nsurfaceReflectivityColor*=surfaceMetallicOrReflectivityColorMap.rgb;\r#if DEBUGMODE>0\noutParams.surfaceReflectivityColorMap=surfaceMetallicOrReflectivityColorMap;\r#endif\n#ifdef MICROSURFACEFROMREFLECTIVITYMAP\nmicroSurface*=surfaceMetallicOrReflectivityColorMap.a;\rmicroSurface*=reflectivityInfos.z;\r#else\n#ifdef MICROSURFACEAUTOMATIC\nmicroSurface*=computeDefaultMicroSurface(microSurface,surfaceReflectivityColor);\r#endif\n#ifdef MICROSURFACEMAP\nmicroSurface*=microSurfaceTexel.r;\r#endif\n#define CUSTOM_FRAGMENT_UPDATE_MICROSURFACE\n#endif\n#endif\n#endif\nmicroSurface=saturate(microSurface);\rfloat roughness=1.-microSurface;\routParams.microSurface=microSurface;\routParams.roughness=roughness;\routParams.surfaceReflectivityColor=surfaceReflectivityColor;\r}\r`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const pbrBlockReflectivity = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"1d8ddd03a92b58cc049760fbe0279b3c","cacheData":{"env":{}}}