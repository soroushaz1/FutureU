{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockAlbedoOpacity.js.map","includedInParent":true,"mtime":1704105649752},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockAlbedoOpacity.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"},{"name":"./decalFragment.js","loc":{"line":3,"column":7,"index":83},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrBlockAlbedoOpacity.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\decalFragment.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbrBlockAlbedoOpacity = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\nrequire(\"./decalFragment.js\");\n// Do not edit.\n\nconst name = \"pbrBlockAlbedoOpacity\";\nconst shader = `struct albedoOpacityOutParams\n{\nvec3 surfaceAlbedo;\nfloat alpha;\n};\n#define pbr_inline\nvoid albedoOpacityBlock(\nin vec4 vAlbedoColor,\n#ifdef ALBEDO\nin vec4 albedoTexture,\nin vec2 albedoInfos,\n#endif\n#ifdef OPACITY\nin vec4 opacityMap,\nin vec2 vOpacityInfos,\n#endif\n#ifdef DETAIL\nin vec4 detailColor,\nin vec4 vDetailInfos,\n#endif\n#ifdef DECAL\nin vec4 decalColor,\nin vec4 vDecalInfos,\n#endif\nout albedoOpacityOutParams outParams\n)\n{\nvec3 surfaceAlbedo=vAlbedoColor.rgb;\nfloat alpha=vAlbedoColor.a;\n#ifdef ALBEDO\n#if defined(ALPHAFROMALBEDO) || defined(ALPHATEST)\nalpha*=albedoTexture.a;\n#endif\n#ifdef GAMMAALBEDO\nsurfaceAlbedo*=toLinearSpace(albedoTexture.rgb);\n#else\nsurfaceAlbedo*=albedoTexture.rgb;\n#endif\nsurfaceAlbedo*=albedoInfos.y;\n#endif\n#include<decalFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nsurfaceAlbedo*=vColor.rgb;\n#endif\n#ifdef DETAIL\nfloat detailAlbedo=2.0*mix(0.5,detailColor.r,vDetailInfos.y);\nsurfaceAlbedo.rgb=surfaceAlbedo.rgb*detailAlbedo*detailAlbedo; \n#endif\n#define CUSTOM_FRAGMENT_UPDATE_ALBEDO\n#ifdef OPACITY\n#ifdef OPACITYRGB\nalpha=getLuminance(opacityMap.rgb);\n#else\nalpha*=opacityMap.a;\n#endif\nalpha*=vOpacityInfos.y;\n#endif\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#if !defined(SS_LINKREFRACTIONTOTRANSPARENCY) && !defined(ALPHAFRESNEL)\n#ifdef ALPHATEST\nif (alpha<ALPHATESTVALUE)\ndiscard;\n#ifndef ALPHABLEND\nalpha=1.0;\n#endif\n#endif\n#endif\noutParams.surfaceAlbedo=surfaceAlbedo;\noutParams.alpha=alpha;\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst pbrBlockAlbedoOpacity = exports.pbrBlockAlbedoOpacity = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":5,"column":10},"generated":{"line":11,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":11,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":5,"column":36},"generated":{"line":11,"column":36}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":12,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":12,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":6,"column":15},"generated":{"line":12,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":78,"column":1},"generated":{"line":84,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":11},"generated":{"line":86,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":12},"generated":{"line":86,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":32},"generated":{"line":86,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":33},"generated":{"line":86,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":37},"generated":{"line":86,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":38},"generated":{"line":86,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":41},"generated":{"line":86,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":80,"column":47},"generated":{"line":86,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":81,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":7},"generated":{"line":88,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":13},"generated":{"line":88,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":34},"generated":{"line":88,"column":27}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":34},"generated":{"line":88,"column":30}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":34},"generated":{"line":88,"column":37}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":34},"generated":{"line":88,"column":38}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":34},"generated":{"line":88,"column":59}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":37},"generated":{"line":88,"column":62}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":39},"generated":{"line":89,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":43},"generated":{"line":89,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":45},"generated":{"line":90,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":51},"generated":{"line":91,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts","name":null,"original":{"line":82,"column":53},"generated":{"line":91,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrBlockAlbedoOpacity.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\nimport \"./decalFragment\";\n\nconst name = \"pbrBlockAlbedoOpacity\";\nconst shader = `struct albedoOpacityOutParams\r{\rvec3 surfaceAlbedo;\rfloat alpha;\r};\r#define pbr_inline\nvoid albedoOpacityBlock(\rin vec4 vAlbedoColor,\r#ifdef ALBEDO\nin vec4 albedoTexture,\rin vec2 albedoInfos,\r#endif\n#ifdef OPACITY\nin vec4 opacityMap,\rin vec2 vOpacityInfos,\r#endif\n#ifdef DETAIL\nin vec4 detailColor,\rin vec4 vDetailInfos,\r#endif\n#ifdef DECAL\nin vec4 decalColor,\rin vec4 vDecalInfos,\r#endif\nout albedoOpacityOutParams outParams\r)\r{\rvec3 surfaceAlbedo=vAlbedoColor.rgb;\rfloat alpha=vAlbedoColor.a;\r#ifdef ALBEDO\n#if defined(ALPHAFROMALBEDO) || defined(ALPHATEST)\nalpha*=albedoTexture.a;\r#endif\n#ifdef GAMMAALBEDO\nsurfaceAlbedo*=toLinearSpace(albedoTexture.rgb);\r#else\nsurfaceAlbedo*=albedoTexture.rgb;\r#endif\nsurfaceAlbedo*=albedoInfos.y;\r#endif\n#include<decalFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nsurfaceAlbedo*=vColor.rgb;\r#endif\n#ifdef DETAIL\nfloat detailAlbedo=2.0*mix(0.5,detailColor.r,vDetailInfos.y);\rsurfaceAlbedo.rgb=surfaceAlbedo.rgb*detailAlbedo*detailAlbedo; \r#endif\n#define CUSTOM_FRAGMENT_UPDATE_ALBEDO\n#ifdef OPACITY\n#ifdef OPACITYRGB\nalpha=getLuminance(opacityMap.rgb);\r#else\nalpha*=opacityMap.a;\r#endif\nalpha*=vOpacityInfos.y;\r#endif\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\r#endif\n#if !defined(SS_LINKREFRACTIONTOTRANSPARENCY) && !defined(ALPHAFRESNEL)\n#ifdef ALPHATEST\nif (alpha<ALPHATESTVALUE)\rdiscard;\r#ifndef ALPHABLEND\nalpha=1.0;\r#endif\n#endif\n#endif\noutParams.surfaceAlbedo=surfaceAlbedo;\routParams.alpha=alpha;\r}\r`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const pbrBlockAlbedoOpacity = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"2510858a397efeafbecc527c302a764c","cacheData":{"env":{}}}