{"id":"node_modules/@babylonjs/core/Shaders/motionBlur.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\motionBlur.fragment.js.map","includedInParent":true,"mtime":1704105649681},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\motionBlur.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.motionBlurPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"motionBlurPixelShader\";\nconst shader = `varying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform float motionStrength;\nuniform float motionScale;\nuniform vec2 screenSize;\n#ifdef OBJECT_BASED\nuniform sampler2D velocitySampler;\n#else\nuniform sampler2D depthSampler;\nuniform mat4 inverseViewProjection;\nuniform mat4 prevViewProjection;\nuniform mat4 projection;\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\n#ifdef GEOMETRY_SUPPORTED\n#ifdef OBJECT_BASED\nvec2 texelSize=1.0/screenSize;\nvec4 velocityColor=texture2D(velocitySampler,vUV);\nvelocityColor.rg=velocityColor.rg*2.0-vec2(1.0);\nvec2 velocity=vec2(pow(velocityColor.r,3.0),pow(velocityColor.g,3.0))*velocityColor.a;\nvelocity*=motionScale*motionStrength;\nfloat speed=length(velocity/texelSize);\nint samplesCount=int(clamp(speed,1.0,SAMPLES));\nvelocity=normalize(velocity)*texelSize;\nfloat hlim=float(-samplesCount)*0.5+0.5;\nvec4 result=texture2D(textureSampler,vUV);\nfor (int i=1; i<int(SAMPLES); ++i)\n{\nif (i>=samplesCount)\nbreak;\nvec2 offset=vUV+velocity*(hlim+float(i));\n#if defined(WEBGPU)\nresult+=texture2DLodEXT(textureSampler,offset,0.0);\n#else\nresult+=texture2D(textureSampler,offset);\n#endif\n}\ngl_FragColor=result/float(samplesCount);\ngl_FragColor.a=1.0;\n#else\nvec2 texelSize=1.0/screenSize;\nfloat depth=texture2D(depthSampler,vUV).r;\ndepth=projection[2].z+projection[3].z/depth; \nvec4 cpos=vec4(vUV*2.0-1.0,depth,1.0);\ncpos=inverseViewProjection*cpos;\ncpos/=cpos.w;\nvec4 ppos=prevViewProjection*cpos;\nppos/=ppos.w;\nppos.xy=ppos.xy*0.5+0.5;\nvec2 velocity=(ppos.xy-vUV)*motionScale*motionStrength;\nfloat speed=length(velocity/texelSize);\nint nSamples=int(clamp(speed,1.0,SAMPLES));\nvec4 result=texture2D(textureSampler,vUV);\nfor (int i=1; i<int(SAMPLES); ++i) {\nif (i>=nSamples)\nbreak;\nvec2 offset1=vUV+velocity*(float(i)/float(nSamples-1)-0.5);\n#if defined(WEBGPU)\nresult+=texture2DLodEXT(textureSampler,offset1,0.0);\n#else\nresult+=texture2D(textureSampler,offset1);\n#endif\n}\ngl_FragColor=result/float(nSamples);\n#endif\n#else\ngl_FragColor=texture2D(textureSampler,vUV);\n#endif\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst motionBlurPixelShader = exports.motionBlurPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":4,"column":36},"generated":{"line":10,"column":36}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":76,"column":1},"generated":{"line":82,"column":1}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":84,"column":24}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":12},"generated":{"line":84,"column":25}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":24},"generated":{"line":84,"column":37}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":25},"generated":{"line":84,"column":38}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":29},"generated":{"line":84,"column":42}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":30},"generated":{"line":84,"column":43}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":33},"generated":{"line":84,"column":46}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":78,"column":39},"generated":{"line":84,"column":52}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":7},"generated":{"line":86,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":13},"generated":{"line":86,"column":6}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":34},"generated":{"line":86,"column":27}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":34},"generated":{"line":86,"column":30}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":34},"generated":{"line":86,"column":37}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":34},"generated":{"line":86,"column":38}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":34},"generated":{"line":86,"column":59}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":37},"generated":{"line":86,"column":62}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":39},"generated":{"line":87,"column":2}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":43},"generated":{"line":87,"column":6}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":45},"generated":{"line":88,"column":2}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":51},"generated":{"line":89,"column":0}},{"source":"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts","name":null,"original":{"line":80,"column":53},"generated":{"line":89,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/motionBlur.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"motionBlurPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform float motionStrength;\runiform float motionScale;\runiform vec2 screenSize;\r#ifdef OBJECT_BASED\nuniform sampler2D velocitySampler;\r#else\nuniform sampler2D depthSampler;\runiform mat4 inverseViewProjection;\runiform mat4 prevViewProjection;\runiform mat4 projection;\r#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\r#ifdef GEOMETRY_SUPPORTED\n#ifdef OBJECT_BASED\nvec2 texelSize=1.0/screenSize;\rvec4 velocityColor=texture2D(velocitySampler,vUV);\rvelocityColor.rg=velocityColor.rg*2.0-vec2(1.0);\rvec2 velocity=vec2(pow(velocityColor.r,3.0),pow(velocityColor.g,3.0))*velocityColor.a;\rvelocity*=motionScale*motionStrength;\rfloat speed=length(velocity/texelSize);\rint samplesCount=int(clamp(speed,1.0,SAMPLES));\rvelocity=normalize(velocity)*texelSize;\rfloat hlim=float(-samplesCount)*0.5+0.5;\rvec4 result=texture2D(textureSampler,vUV);\rfor (int i=1; i<int(SAMPLES); ++i)\r{\rif (i>=samplesCount)\rbreak;\rvec2 offset=vUV+velocity*(hlim+float(i));\r#if defined(WEBGPU)\nresult+=texture2DLodEXT(textureSampler,offset,0.0);\r#else\nresult+=texture2D(textureSampler,offset);\r#endif\n}\rgl_FragColor=result/float(samplesCount);\rgl_FragColor.a=1.0;\r#else\nvec2 texelSize=1.0/screenSize;\rfloat depth=texture2D(depthSampler,vUV).r;\rdepth=projection[2].z+projection[3].z/depth; \rvec4 cpos=vec4(vUV*2.0-1.0,depth,1.0);\rcpos=inverseViewProjection*cpos;\rcpos/=cpos.w;\rvec4 ppos=prevViewProjection*cpos;\rppos/=ppos.w;\rppos.xy=ppos.xy*0.5+0.5;\rvec2 velocity=(ppos.xy-vUV)*motionScale*motionStrength;\rfloat speed=length(velocity/texelSize);\rint nSamples=int(clamp(speed,1.0,SAMPLES));\rvec4 result=texture2D(textureSampler,vUV);\rfor (int i=1; i<int(SAMPLES); ++i) {\rif (i>=nSamples)\rbreak;\rvec2 offset1=vUV+velocity*(float(i)/float(nSamples-1)-0.5);\r#if defined(WEBGPU)\nresult+=texture2DLodEXT(textureSampler,offset1,0.0);\r#else\nresult+=texture2D(textureSampler,offset1);\r#endif\n}\rgl_FragColor=result/float(nSamples);\r#endif\n#else\ngl_FragColor=texture2D(textureSampler,vUV);\r#endif\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const motionBlurPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"4365227d85c434a900f2d7e8c92d059a","cacheData":{"env":{}}}