{"id":"node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrDirectLightingFunctions.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrDirectLightingFunctions.js.map","includedInParent":true,"mtime":1704105649771},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\pbrDirectLightingFunctions.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbrDirectLightingFunctions = void 0;\nvar _shaderStore = require(\"../../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"pbrDirectLightingFunctions\";\nconst shader = `#define CLEARCOATREFLECTANCE90 1.0\nstruct lightingInfo\n{\nvec3 diffuse;\n#ifdef SPECULARTERM\nvec3 specular;\n#endif\n#ifdef CLEARCOAT\nvec4 clearCoat;\n#endif\n#ifdef SHEEN\nvec3 sheen;\n#endif\n};\nfloat adjustRoughnessFromLightProperties(float roughness,float lightRadius,float lightDistance) {\n#if defined(USEPHYSICALLIGHTFALLOFF) || defined(USEGLTFLIGHTFALLOFF)\nfloat lightRoughness=lightRadius/lightDistance;\nfloat totalRoughness=saturate(lightRoughness+roughness);\nreturn totalRoughness;\n#else\nreturn roughness;\n#endif\n}\nvec3 computeHemisphericDiffuseLighting(preLightingInfo info,vec3 lightColor,vec3 groundColor) {\nreturn mix(groundColor,lightColor,info.NdotL);\n}\nvec3 computeDiffuseLighting(preLightingInfo info,vec3 lightColor) {\nfloat diffuseTerm=diffuseBRDF_Burley(info.NdotL,info.NdotV,info.VdotH,info.roughness);\nreturn diffuseTerm*info.attenuation*info.NdotL*lightColor;\n}\n#define inline\nvec3 computeProjectionTextureDiffuseLighting(sampler2D projectionLightSampler,mat4 textureProjectionMatrix){\nvec4 strq=textureProjectionMatrix*vec4(vPositionW,1.0);\nstrq/=strq.w;\nvec3 textureColor=texture2D(projectionLightSampler,strq.xy).rgb;\nreturn toLinearSpace(textureColor);\n}\n#ifdef SS_TRANSLUCENCY\nvec3 computeDiffuseAndTransmittedLighting(preLightingInfo info,vec3 lightColor,vec3 transmittance) {\nfloat NdotL=absEps(info.NdotLUnclamped);\nfloat wrapNdotL=computeWrappedDiffuseNdotL(NdotL,0.02);\nfloat trAdapt=step(0.,info.NdotLUnclamped);\nvec3 transmittanceNdotL=mix(transmittance*wrapNdotL,vec3(wrapNdotL),trAdapt);\nfloat diffuseTerm=diffuseBRDF_Burley(NdotL,info.NdotV,info.VdotH,info.roughness);\nreturn diffuseTerm*transmittanceNdotL*info.attenuation*lightColor;\n}\n#endif\n#ifdef SPECULARTERM\nvec3 computeSpecularLighting(preLightingInfo info,vec3 N,vec3 reflectance0,vec3 reflectance90,float geometricRoughnessFactor,vec3 lightColor) {\nfloat NdotH=saturateEps(dot(N,info.H));\nfloat roughness=max(info.roughness,geometricRoughnessFactor);\nfloat alphaG=convertRoughnessToAverageSlope(roughness);\nvec3 fresnel=fresnelSchlickGGX(info.VdotH,reflectance0,reflectance90);\n#ifdef IRIDESCENCE\nfresnel=mix(fresnel,reflectance0,info.iridescenceIntensity);\n#endif\nfloat distribution=normalDistributionFunction_TrowbridgeReitzGGX(NdotH,alphaG);\n#ifdef BRDF_V_HEIGHT_CORRELATED\nfloat smithVisibility=smithVisibility_GGXCorrelated(info.NdotL,info.NdotV,alphaG);\n#else\nfloat smithVisibility=smithVisibility_TrowbridgeReitzGGXFast(info.NdotL,info.NdotV,alphaG);\n#endif\nvec3 specTerm=fresnel*distribution*smithVisibility;\nreturn specTerm*info.attenuation*info.NdotL*lightColor;\n}\n#endif\n#ifdef ANISOTROPIC\nvec3 computeAnisotropicSpecularLighting(preLightingInfo info,vec3 V,vec3 N,vec3 T,vec3 B,float anisotropy,vec3 reflectance0,vec3 reflectance90,float geometricRoughnessFactor,vec3 lightColor) {\nfloat NdotH=saturateEps(dot(N,info.H));\nfloat TdotH=dot(T,info.H);\nfloat BdotH=dot(B,info.H);\nfloat TdotV=dot(T,V);\nfloat BdotV=dot(B,V);\nfloat TdotL=dot(T,info.L);\nfloat BdotL=dot(B,info.L);\nfloat alphaG=convertRoughnessToAverageSlope(info.roughness);\nvec2 alphaTB=getAnisotropicRoughness(alphaG,anisotropy);\nalphaTB=max(alphaTB,square(geometricRoughnessFactor));\nvec3 fresnel=fresnelSchlickGGX(info.VdotH,reflectance0,reflectance90);\n#ifdef IRIDESCENCE\nfresnel=mix(fresnel,reflectance0,info.iridescenceIntensity);\n#endif\nfloat distribution=normalDistributionFunction_BurleyGGX_Anisotropic(NdotH,TdotH,BdotH,alphaTB);\nfloat smithVisibility=smithVisibility_GGXCorrelated_Anisotropic(info.NdotL,info.NdotV,TdotV,BdotV,TdotL,BdotL,alphaTB);\nvec3 specTerm=fresnel*distribution*smithVisibility;\nreturn specTerm*info.attenuation*info.NdotL*lightColor;\n}\n#endif\n#ifdef CLEARCOAT\nvec4 computeClearCoatLighting(preLightingInfo info,vec3 Ncc,float geometricRoughnessFactor,float clearCoatIntensity,vec3 lightColor) {\nfloat NccdotL=saturateEps(dot(Ncc,info.L));\nfloat NccdotH=saturateEps(dot(Ncc,info.H));\nfloat clearCoatRoughness=max(info.roughness,geometricRoughnessFactor);\nfloat alphaG=convertRoughnessToAverageSlope(clearCoatRoughness);\nfloat fresnel=fresnelSchlickGGX(info.VdotH,vClearCoatRefractionParams.x,CLEARCOATREFLECTANCE90);\nfresnel*=clearCoatIntensity;\nfloat distribution=normalDistributionFunction_TrowbridgeReitzGGX(NccdotH,alphaG);\nfloat kelemenVisibility=visibility_Kelemen(info.VdotH);\nfloat clearCoatTerm=fresnel*distribution*kelemenVisibility;\nreturn vec4(\nclearCoatTerm*info.attenuation*NccdotL*lightColor,\n1.0-fresnel\n);\n}\nvec3 computeClearCoatLightingAbsorption(float NdotVRefract,vec3 L,vec3 Ncc,vec3 clearCoatColor,float clearCoatThickness,float clearCoatIntensity) {\nvec3 LRefract=-refract(L,Ncc,vClearCoatRefractionParams.y);\nfloat NdotLRefract=saturateEps(dot(Ncc,LRefract));\nvec3 absorption=computeClearCoatAbsorption(NdotVRefract,NdotLRefract,clearCoatColor,clearCoatThickness,clearCoatIntensity);\nreturn absorption;\n}\n#endif\n#ifdef SHEEN\nvec3 computeSheenLighting(preLightingInfo info,vec3 N,vec3 reflectance0,vec3 reflectance90,float geometricRoughnessFactor,vec3 lightColor) {\nfloat NdotH=saturateEps(dot(N,info.H));\nfloat roughness=max(info.roughness,geometricRoughnessFactor);\nfloat alphaG=convertRoughnessToAverageSlope(roughness);\nfloat fresnel=1.;\nfloat distribution=normalDistributionFunction_CharlieSheen(NdotH,alphaG);\n/*#ifdef SHEEN_SOFTER\nfloat visibility=visibility_CharlieSheen(info.NdotL,info.NdotV,alphaG);\n#else */\nfloat visibility=visibility_Ashikhmin(info.NdotL,info.NdotV);\n/* #endif */\nfloat sheenTerm=fresnel*distribution*visibility;\nreturn sheenTerm*info.attenuation*info.NdotL*lightColor;\n}\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nconst pbrDirectLightingFunctions = exports.pbrDirectLightingFunctions = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":4,"column":41},"generated":{"line":10,"column":41}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":132,"column":1},"generated":{"line":138,"column":1}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":133,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":11},"generated":{"line":140,"column":24}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":12},"generated":{"line":140,"column":25}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":32},"generated":{"line":140,"column":45}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":33},"generated":{"line":140,"column":46}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":37},"generated":{"line":140,"column":50}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":38},"generated":{"line":140,"column":51}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":41},"generated":{"line":140,"column":54}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":134,"column":47},"generated":{"line":140,"column":60}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":135,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":7},"generated":{"line":142,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":13},"generated":{"line":142,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":39},"generated":{"line":142,"column":32}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":39},"generated":{"line":142,"column":35}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":39},"generated":{"line":142,"column":42}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":39},"generated":{"line":142,"column":43}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":39},"generated":{"line":142,"column":69}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":42},"generated":{"line":142,"column":72}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":44},"generated":{"line":143,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":48},"generated":{"line":143,"column":6}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":50},"generated":{"line":144,"column":2}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":56},"generated":{"line":145,"column":0}},{"source":"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts","name":null,"original":{"line":136,"column":58},"generated":{"line":145,"column":1}}],"sources":{"../../../../../lts/core/generated/Shaders/ShadersInclude/pbrDirectLightingFunctions.ts":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"pbrDirectLightingFunctions\";\nconst shader = `#define CLEARCOATREFLECTANCE90 1.0\nstruct lightingInfo\r{\rvec3 diffuse;\r#ifdef SPECULARTERM\nvec3 specular;\r#endif\n#ifdef CLEARCOAT\nvec4 clearCoat;\r#endif\n#ifdef SHEEN\nvec3 sheen;\r#endif\n};\rfloat adjustRoughnessFromLightProperties(float roughness,float lightRadius,float lightDistance) {\r#if defined(USEPHYSICALLIGHTFALLOFF) || defined(USEGLTFLIGHTFALLOFF)\nfloat lightRoughness=lightRadius/lightDistance;\rfloat totalRoughness=saturate(lightRoughness+roughness);\rreturn totalRoughness;\r#else\nreturn roughness;\r#endif\n}\rvec3 computeHemisphericDiffuseLighting(preLightingInfo info,vec3 lightColor,vec3 groundColor) {\rreturn mix(groundColor,lightColor,info.NdotL);\r}\rvec3 computeDiffuseLighting(preLightingInfo info,vec3 lightColor) {\rfloat diffuseTerm=diffuseBRDF_Burley(info.NdotL,info.NdotV,info.VdotH,info.roughness);\rreturn diffuseTerm*info.attenuation*info.NdotL*lightColor;\r}\r#define inline\nvec3 computeProjectionTextureDiffuseLighting(sampler2D projectionLightSampler,mat4 textureProjectionMatrix){\rvec4 strq=textureProjectionMatrix*vec4(vPositionW,1.0);\rstrq/=strq.w;\rvec3 textureColor=texture2D(projectionLightSampler,strq.xy).rgb;\rreturn toLinearSpace(textureColor);\r}\r#ifdef SS_TRANSLUCENCY\nvec3 computeDiffuseAndTransmittedLighting(preLightingInfo info,vec3 lightColor,vec3 transmittance) {\rfloat NdotL=absEps(info.NdotLUnclamped);\rfloat wrapNdotL=computeWrappedDiffuseNdotL(NdotL,0.02);\rfloat trAdapt=step(0.,info.NdotLUnclamped);\rvec3 transmittanceNdotL=mix(transmittance*wrapNdotL,vec3(wrapNdotL),trAdapt);\rfloat diffuseTerm=diffuseBRDF_Burley(NdotL,info.NdotV,info.VdotH,info.roughness);\rreturn diffuseTerm*transmittanceNdotL*info.attenuation*lightColor;\r}\r#endif\n#ifdef SPECULARTERM\nvec3 computeSpecularLighting(preLightingInfo info,vec3 N,vec3 reflectance0,vec3 reflectance90,float geometricRoughnessFactor,vec3 lightColor) {\rfloat NdotH=saturateEps(dot(N,info.H));\rfloat roughness=max(info.roughness,geometricRoughnessFactor);\rfloat alphaG=convertRoughnessToAverageSlope(roughness);\rvec3 fresnel=fresnelSchlickGGX(info.VdotH,reflectance0,reflectance90);\r#ifdef IRIDESCENCE\nfresnel=mix(fresnel,reflectance0,info.iridescenceIntensity);\r#endif\nfloat distribution=normalDistributionFunction_TrowbridgeReitzGGX(NdotH,alphaG);\r#ifdef BRDF_V_HEIGHT_CORRELATED\nfloat smithVisibility=smithVisibility_GGXCorrelated(info.NdotL,info.NdotV,alphaG);\r#else\nfloat smithVisibility=smithVisibility_TrowbridgeReitzGGXFast(info.NdotL,info.NdotV,alphaG);\r#endif\nvec3 specTerm=fresnel*distribution*smithVisibility;\rreturn specTerm*info.attenuation*info.NdotL*lightColor;\r}\r#endif\n#ifdef ANISOTROPIC\nvec3 computeAnisotropicSpecularLighting(preLightingInfo info,vec3 V,vec3 N,vec3 T,vec3 B,float anisotropy,vec3 reflectance0,vec3 reflectance90,float geometricRoughnessFactor,vec3 lightColor) {\rfloat NdotH=saturateEps(dot(N,info.H));\rfloat TdotH=dot(T,info.H);\rfloat BdotH=dot(B,info.H);\rfloat TdotV=dot(T,V);\rfloat BdotV=dot(B,V);\rfloat TdotL=dot(T,info.L);\rfloat BdotL=dot(B,info.L);\rfloat alphaG=convertRoughnessToAverageSlope(info.roughness);\rvec2 alphaTB=getAnisotropicRoughness(alphaG,anisotropy);\ralphaTB=max(alphaTB,square(geometricRoughnessFactor));\rvec3 fresnel=fresnelSchlickGGX(info.VdotH,reflectance0,reflectance90);\r#ifdef IRIDESCENCE\nfresnel=mix(fresnel,reflectance0,info.iridescenceIntensity);\r#endif\nfloat distribution=normalDistributionFunction_BurleyGGX_Anisotropic(NdotH,TdotH,BdotH,alphaTB);\rfloat smithVisibility=smithVisibility_GGXCorrelated_Anisotropic(info.NdotL,info.NdotV,TdotV,BdotV,TdotL,BdotL,alphaTB);\rvec3 specTerm=fresnel*distribution*smithVisibility;\rreturn specTerm*info.attenuation*info.NdotL*lightColor;\r}\r#endif\n#ifdef CLEARCOAT\nvec4 computeClearCoatLighting(preLightingInfo info,vec3 Ncc,float geometricRoughnessFactor,float clearCoatIntensity,vec3 lightColor) {\rfloat NccdotL=saturateEps(dot(Ncc,info.L));\rfloat NccdotH=saturateEps(dot(Ncc,info.H));\rfloat clearCoatRoughness=max(info.roughness,geometricRoughnessFactor);\rfloat alphaG=convertRoughnessToAverageSlope(clearCoatRoughness);\rfloat fresnel=fresnelSchlickGGX(info.VdotH,vClearCoatRefractionParams.x,CLEARCOATREFLECTANCE90);\rfresnel*=clearCoatIntensity;\rfloat distribution=normalDistributionFunction_TrowbridgeReitzGGX(NccdotH,alphaG);\rfloat kelemenVisibility=visibility_Kelemen(info.VdotH);\rfloat clearCoatTerm=fresnel*distribution*kelemenVisibility;\rreturn vec4(\rclearCoatTerm*info.attenuation*NccdotL*lightColor,\r1.0-fresnel\r);\r}\rvec3 computeClearCoatLightingAbsorption(float NdotVRefract,vec3 L,vec3 Ncc,vec3 clearCoatColor,float clearCoatThickness,float clearCoatIntensity) {\rvec3 LRefract=-refract(L,Ncc,vClearCoatRefractionParams.y);\rfloat NdotLRefract=saturateEps(dot(Ncc,LRefract));\rvec3 absorption=computeClearCoatAbsorption(NdotVRefract,NdotLRefract,clearCoatColor,clearCoatThickness,clearCoatIntensity);\rreturn absorption;\r}\r#endif\n#ifdef SHEEN\nvec3 computeSheenLighting(preLightingInfo info,vec3 N,vec3 reflectance0,vec3 reflectance90,float geometricRoughnessFactor,vec3 lightColor) {\rfloat NdotH=saturateEps(dot(N,info.H));\rfloat roughness=max(info.roughness,geometricRoughnessFactor);\rfloat alphaG=convertRoughnessToAverageSlope(roughness);\rfloat fresnel=1.;\rfloat distribution=normalDistributionFunction_CharlieSheen(NdotH,alphaG);\r/*#ifdef SHEEN_SOFTER\rfloat visibility=visibility_CharlieSheen(info.NdotL,info.NdotV,alphaG);\r#else */\nfloat visibility=visibility_Ashikhmin(info.NdotL,info.NdotV);\r/* #endif */\rfloat sheenTerm=fresnel*distribution*visibility;\rreturn sheenTerm*info.attenuation*info.NdotL*lightColor;\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStore[name] = shader;\n/** @internal */\nexport const pbrDirectLightingFunctions = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"bb8be99330b668002cb912d735b89e60","cacheData":{"env":{}}}