{"id":"node_modules/@babylonjs/core/Shaders/geometry.vertex.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js.map","includedInParent":true,"mtime":1704105649401},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"},{"name":"./ShadersInclude/bonesDeclaration.js","loc":{"line":3,"column":7,"index":80},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bonesDeclaration.js"},{"name":"./ShadersInclude/bakedVertexAnimationDeclaration.js","loc":{"line":4,"column":7,"index":127},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bakedVertexAnimationDeclaration.js"},{"name":"./ShadersInclude/morphTargetsVertexGlobalDeclaration.js","loc":{"line":5,"column":7,"index":189},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\morphTargetsVertexGlobalDeclaration.js"},{"name":"./ShadersInclude/morphTargetsVertexDeclaration.js","loc":{"line":6,"column":7,"index":255},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\morphTargetsVertexDeclaration.js"},{"name":"./ShadersInclude/instancesDeclaration.js","loc":{"line":7,"column":7,"index":315},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\instancesDeclaration.js"},{"name":"./ShadersInclude/geometryVertexDeclaration.js","loc":{"line":8,"column":7,"index":366},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\geometryVertexDeclaration.js"},{"name":"./ShadersInclude/geometryUboDeclaration.js","loc":{"line":9,"column":7,"index":422},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\geometryUboDeclaration.js"},{"name":"./ShadersInclude/clipPlaneVertexDeclaration.js","loc":{"line":10,"column":7,"index":475},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\clipPlaneVertexDeclaration.js"},{"name":"./ShadersInclude/morphTargetsVertexGlobal.js","loc":{"line":11,"column":7,"index":532},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\morphTargetsVertexGlobal.js"},{"name":"./ShadersInclude/morphTargetsVertex.js","loc":{"line":12,"column":7,"index":587},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\morphTargetsVertex.js"},{"name":"./ShadersInclude/instancesVertex.js","loc":{"line":13,"column":7,"index":636},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\instancesVertex.js"},{"name":"./ShadersInclude/bonesVertex.js","loc":{"line":14,"column":7,"index":682},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bonesVertex.js"},{"name":"./ShadersInclude/bakedVertexAnimation.js","loc":{"line":15,"column":7,"index":724},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bakedVertexAnimation.js"},{"name":"./ShadersInclude/clipPlaneVertex.js","loc":{"line":16,"column":7,"index":775},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\clipPlaneVertex.js"},{"name":"./ShadersInclude/bumpVertex.js","loc":{"line":17,"column":7,"index":821},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\geometry.vertex.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\ShadersInclude\\bumpVertex.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.geometryVertexShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\nrequire(\"./ShadersInclude/bonesDeclaration.js\");\nrequire(\"./ShadersInclude/bakedVertexAnimationDeclaration.js\");\nrequire(\"./ShadersInclude/morphTargetsVertexGlobalDeclaration.js\");\nrequire(\"./ShadersInclude/morphTargetsVertexDeclaration.js\");\nrequire(\"./ShadersInclude/instancesDeclaration.js\");\nrequire(\"./ShadersInclude/geometryVertexDeclaration.js\");\nrequire(\"./ShadersInclude/geometryUboDeclaration.js\");\nrequire(\"./ShadersInclude/clipPlaneVertexDeclaration.js\");\nrequire(\"./ShadersInclude/morphTargetsVertexGlobal.js\");\nrequire(\"./ShadersInclude/morphTargetsVertex.js\");\nrequire(\"./ShadersInclude/instancesVertex.js\");\nrequire(\"./ShadersInclude/bonesVertex.js\");\nrequire(\"./ShadersInclude/bakedVertexAnimation.js\");\nrequire(\"./ShadersInclude/clipPlaneVertex.js\");\nrequire(\"./ShadersInclude/bumpVertex.js\");\n// Do not edit.\n\nconst name = \"geometryVertexShader\";\nconst shader = `precision highp float;\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<morphTargetsVertexGlobalDeclaration>\n#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]\n#include<instancesDeclaration>\n#include<__decl__geometryVertex>\n#include<clipPlaneVertexDeclaration>\nattribute vec3 position;\nattribute vec3 normal;\n#ifdef NEED_UV\nvarying vec2 vUV;\n#ifdef ALPHATEST\nuniform mat4 diffuseMatrix;\n#endif\n#ifdef BUMP\nuniform mat4 bumpMatrix;\nvarying vec2 vBumpUV;\n#endif\n#ifdef REFLECTIVITY\nuniform mat4 reflectivityMatrix;\nuniform mat4 albedoMatrix;\nvarying vec2 vReflectivityUV;\nvarying vec2 vAlbedoUV;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#endif\n#ifdef BUMP\nvarying mat4 vWorldView;\n#endif\n#ifdef BUMP\nvarying vec3 vNormalW;\n#else\nvarying vec3 vNormalV;\n#endif\nvarying vec4 vViewPos;\n#if defined(POSITION) || defined(BUMP)\nvarying vec3 vPositionW;\n#endif\n#ifdef VELOCITY\nuniform mat4 previousViewProjection;\nvarying vec4 vCurrentPosition;\nvarying vec4 vPreviousPosition;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void)\n{\nvec3 positionUpdated=position;\nvec3 normalUpdated=normal;\n#ifdef UV1\nvec2 uvUpdated=uv;\n#endif\n#include<morphTargetsVertexGlobal>\n#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]\n#include<instancesVertex>\n#if defined(VELOCITY) && !defined(BONES_VELOCITY_ENABLED)\nvCurrentPosition=viewProjection*finalWorld*vec4(positionUpdated,1.0);\nvPreviousPosition=previousViewProjection*finalPreviousWorld*vec4(positionUpdated,1.0);\n#endif\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=vec4(finalWorld*vec4(positionUpdated,1.0));\n#ifdef BUMP\nvWorldView=view*finalWorld;\nvNormalW=normalUpdated;\n#else\nvNormalV=normalize(vec3((view*finalWorld)*vec4(normalUpdated,0.0)));\n#endif\nvViewPos=view*worldPos;\n#if defined(VELOCITY) && defined(BONES_VELOCITY_ENABLED)\nvCurrentPosition=viewProjection*finalWorld*vec4(positionUpdated,1.0);\n#if NUM_BONE_INFLUENCERS>0\nmat4 previousInfluence;\npreviousInfluence=mPreviousBones[int(matricesIndices[0])]*matricesWeights[0];\n#if NUM_BONE_INFLUENCERS>1\npreviousInfluence+=mPreviousBones[int(matricesIndices[1])]*matricesWeights[1];\n#endif\n#if NUM_BONE_INFLUENCERS>2\npreviousInfluence+=mPreviousBones[int(matricesIndices[2])]*matricesWeights[2];\n#endif\n#if NUM_BONE_INFLUENCERS>3\npreviousInfluence+=mPreviousBones[int(matricesIndices[3])]*matricesWeights[3];\n#endif\n#if NUM_BONE_INFLUENCERS>4\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[0])]*matricesWeightsExtra[0];\n#endif\n#if NUM_BONE_INFLUENCERS>5\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[1])]*matricesWeightsExtra[1];\n#endif\n#if NUM_BONE_INFLUENCERS>6\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[2])]*matricesWeightsExtra[2];\n#endif\n#if NUM_BONE_INFLUENCERS>7\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[3])]*matricesWeightsExtra[3];\n#endif\nvPreviousPosition=previousViewProjection*finalPreviousWorld*previousInfluence*vec4(positionUpdated,1.0);\n#else\nvPreviousPosition=previousViewProjection*finalPreviousWorld*vec4(positionUpdated,1.0);\n#endif\n#endif\n#if defined(POSITION) || defined(BUMP)\nvPositionW=worldPos.xyz/worldPos.w;\n#endif\ngl_Position=viewProjection*finalWorld*vec4(positionUpdated,1.0);\n#include<clipPlaneVertex>\n#ifdef NEED_UV\n#ifdef UV1\n#if defined(ALPHATEST) && defined(ALPHATEST_UV1)\nvUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));\n#else\nvUV=uv;\n#endif\n#ifdef BUMP_UV1\nvBumpUV=vec2(bumpMatrix*vec4(uvUpdated,1.0,0.0));\n#endif\n#ifdef REFLECTIVITY_UV1\nvReflectivityUV=vec2(reflectivityMatrix*vec4(uvUpdated,1.0,0.0));\n#endif\n#ifdef ALBEDO_UV1\nvAlbedoUV=vec2(albedoMatrix*vec4(uvUpdated,1.0,0.0));\n#endif\n#endif\n#ifdef UV2\n#if defined(ALPHATEST) && defined(ALPHATEST_UV2)\nvUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\n#else\nvUV=uv2;\n#endif\n#ifdef BUMP_UV2\nvBumpUV=vec2(bumpMatrix*vec4(uv2,1.0,0.0));\n#endif\n#ifdef REFLECTIVITY_UV2\nvReflectivityUV=vec2(reflectivityMatrix*vec4(uv2,1.0,0.0));\n#endif\n#ifdef ALBEDO_UV2\nvAlbedoUV=vec2(albedoMatrix*vec4(uv2,1.0,0.0));\n#endif\n#endif\n#endif\n#include<bumpVertex>\n}\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst geometryVertexShader = exports.geometryVertexShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":16,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":17,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":18,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":20,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":21,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":22,"column":7}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":6}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":19,"column":10},"generated":{"line":25,"column":10}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":19,"column":13},"generated":{"line":25,"column":13}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":19,"column":35},"generated":{"line":25,"column":35}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":26,"column":6}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":26,"column":12}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":26,"column":15}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":166,"column":1},"generated":{"line":172,"column":1}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":167,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":11},"generated":{"line":174,"column":24}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":12},"generated":{"line":174,"column":25}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":24},"generated":{"line":174,"column":37}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":25},"generated":{"line":174,"column":38}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":29},"generated":{"line":174,"column":42}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":30},"generated":{"line":174,"column":43}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":33},"generated":{"line":174,"column":46}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":168,"column":39},"generated":{"line":174,"column":52}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":169,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":7},"generated":{"line":176,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":13},"generated":{"line":176,"column":6}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":33},"generated":{"line":176,"column":26}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":33},"generated":{"line":176,"column":29}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":33},"generated":{"line":176,"column":36}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":33},"generated":{"line":176,"column":37}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":33},"generated":{"line":176,"column":57}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":36},"generated":{"line":176,"column":60}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":38},"generated":{"line":177,"column":2}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":42},"generated":{"line":177,"column":6}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":44},"generated":{"line":178,"column":2}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":50},"generated":{"line":179,"column":0}},{"source":"../../../../lts/core/generated/Shaders/geometry.vertex.ts","name":null,"original":{"line":170,"column":52},"generated":{"line":179,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/geometry.vertex.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/bonesDeclaration\";\nimport \"./ShadersInclude/bakedVertexAnimationDeclaration\";\nimport \"./ShadersInclude/morphTargetsVertexGlobalDeclaration\";\nimport \"./ShadersInclude/morphTargetsVertexDeclaration\";\nimport \"./ShadersInclude/instancesDeclaration\";\nimport \"./ShadersInclude/geometryVertexDeclaration\";\nimport \"./ShadersInclude/geometryUboDeclaration\";\nimport \"./ShadersInclude/clipPlaneVertexDeclaration\";\nimport \"./ShadersInclude/morphTargetsVertexGlobal\";\nimport \"./ShadersInclude/morphTargetsVertex\";\nimport \"./ShadersInclude/instancesVertex\";\nimport \"./ShadersInclude/bonesVertex\";\nimport \"./ShadersInclude/bakedVertexAnimation\";\nimport \"./ShadersInclude/clipPlaneVertex\";\nimport \"./ShadersInclude/bumpVertex\";\n\nconst name = \"geometryVertexShader\";\nconst shader = `precision highp float;\r#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<morphTargetsVertexGlobalDeclaration>\n#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]\n#include<instancesDeclaration>\n#include<__decl__geometryVertex>\n#include<clipPlaneVertexDeclaration>\nattribute vec3 position;\rattribute vec3 normal;\r#ifdef NEED_UV\nvarying vec2 vUV;\r#ifdef ALPHATEST\nuniform mat4 diffuseMatrix;\r#endif\n#ifdef BUMP\nuniform mat4 bumpMatrix;\rvarying vec2 vBumpUV;\r#endif\n#ifdef REFLECTIVITY\nuniform mat4 reflectivityMatrix;\runiform mat4 albedoMatrix;\rvarying vec2 vReflectivityUV;\rvarying vec2 vAlbedoUV;\r#endif\n#ifdef UV1\nattribute vec2 uv;\r#endif\n#ifdef UV2\nattribute vec2 uv2;\r#endif\n#endif\n#ifdef BUMP\nvarying mat4 vWorldView;\r#endif\n#ifdef BUMP\nvarying vec3 vNormalW;\r#else\nvarying vec3 vNormalV;\r#endif\nvarying vec4 vViewPos;\r#if defined(POSITION) || defined(BUMP)\nvarying vec3 vPositionW;\r#endif\n#ifdef VELOCITY\nuniform mat4 previousViewProjection;\rvarying vec4 vCurrentPosition;\rvarying vec4 vPreviousPosition;\r#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void)\r{\rvec3 positionUpdated=position;\rvec3 normalUpdated=normal;\r#ifdef UV1\nvec2 uvUpdated=uv;\r#endif\n#include<morphTargetsVertexGlobal>\n#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]\n#include<instancesVertex>\n#if defined(VELOCITY) && !defined(BONES_VELOCITY_ENABLED)\nvCurrentPosition=viewProjection*finalWorld*vec4(positionUpdated,1.0);\rvPreviousPosition=previousViewProjection*finalPreviousWorld*vec4(positionUpdated,1.0);\r#endif\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=vec4(finalWorld*vec4(positionUpdated,1.0));\r#ifdef BUMP\nvWorldView=view*finalWorld;\rvNormalW=normalUpdated;\r#else\nvNormalV=normalize(vec3((view*finalWorld)*vec4(normalUpdated,0.0)));\r#endif\nvViewPos=view*worldPos;\r#if defined(VELOCITY) && defined(BONES_VELOCITY_ENABLED)\nvCurrentPosition=viewProjection*finalWorld*vec4(positionUpdated,1.0);\r#if NUM_BONE_INFLUENCERS>0\nmat4 previousInfluence;\rpreviousInfluence=mPreviousBones[int(matricesIndices[0])]*matricesWeights[0];\r#if NUM_BONE_INFLUENCERS>1\npreviousInfluence+=mPreviousBones[int(matricesIndices[1])]*matricesWeights[1];\r#endif\n#if NUM_BONE_INFLUENCERS>2\npreviousInfluence+=mPreviousBones[int(matricesIndices[2])]*matricesWeights[2];\r#endif\n#if NUM_BONE_INFLUENCERS>3\npreviousInfluence+=mPreviousBones[int(matricesIndices[3])]*matricesWeights[3];\r#endif\n#if NUM_BONE_INFLUENCERS>4\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[0])]*matricesWeightsExtra[0];\r#endif\n#if NUM_BONE_INFLUENCERS>5\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[1])]*matricesWeightsExtra[1];\r#endif\n#if NUM_BONE_INFLUENCERS>6\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[2])]*matricesWeightsExtra[2];\r#endif\n#if NUM_BONE_INFLUENCERS>7\npreviousInfluence+=mPreviousBones[int(matricesIndicesExtra[3])]*matricesWeightsExtra[3];\r#endif\nvPreviousPosition=previousViewProjection*finalPreviousWorld*previousInfluence*vec4(positionUpdated,1.0);\r#else\nvPreviousPosition=previousViewProjection*finalPreviousWorld*vec4(positionUpdated,1.0);\r#endif\n#endif\n#if defined(POSITION) || defined(BUMP)\nvPositionW=worldPos.xyz/worldPos.w;\r#endif\ngl_Position=viewProjection*finalWorld*vec4(positionUpdated,1.0);\r#include<clipPlaneVertex>\n#ifdef NEED_UV\n#ifdef UV1\n#if defined(ALPHATEST) && defined(ALPHATEST_UV1)\nvUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));\r#else\nvUV=uv;\r#endif\n#ifdef BUMP_UV1\nvBumpUV=vec2(bumpMatrix*vec4(uvUpdated,1.0,0.0));\r#endif\n#ifdef REFLECTIVITY_UV1\nvReflectivityUV=vec2(reflectivityMatrix*vec4(uvUpdated,1.0,0.0));\r#endif\n#ifdef ALBEDO_UV1\nvAlbedoUV=vec2(albedoMatrix*vec4(uvUpdated,1.0,0.0));\r#endif\n#endif\n#ifdef UV2\n#if defined(ALPHATEST) && defined(ALPHATEST_UV2)\nvUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\r#else\nvUV=uv2;\r#endif\n#ifdef BUMP_UV2\nvBumpUV=vec2(bumpMatrix*vec4(uv2,1.0,0.0));\r#endif\n#ifdef REFLECTIVITY_UV2\nvReflectivityUV=vec2(reflectivityMatrix*vec4(uv2,1.0,0.0));\r#endif\n#ifdef ALBEDO_UV2\nvAlbedoUV=vec2(albedoMatrix*vec4(uv2,1.0,0.0));\r#endif\n#endif\n#endif\n#include<bumpVertex>\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const geometryVertexShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"eb59bf279b0e4abf3918f2b4d1d08981","cacheData":{"env":{}}}