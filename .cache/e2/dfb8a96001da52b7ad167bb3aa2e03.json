{"id":"node_modules/@babylonjs/core/Shaders/minmaxRedux.fragment.js","dependencies":[{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\minmaxRedux.fragment.js.map","includedInParent":true,"mtime":1704105649668},{"name":"F:\\FutureU\\babylonjs\\package.json","includedInParent":true,"mtime":1704105536080},{"name":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\package.json","includedInParent":true,"mtime":1704105648327},{"name":"../Engines/shaderStore.js","loc":{"line":2,"column":28,"index":44},"parent":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Shaders\\minmaxRedux.fragment.js","resolved":"F:\\FutureU\\babylonjs\\node_modules\\@babylonjs\\core\\Engines\\shaderStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.minmaxReduxPixelShader = void 0;\nvar _shaderStore = require(\"../Engines/shaderStore.js\");\n// Do not edit.\n\nconst name = \"minmaxReduxPixelShader\";\nconst shader = `varying vec2 vUV;\nuniform sampler2D textureSampler;\n#if defined(INITIAL)\nuniform sampler2D sourceTexture;\nuniform vec2 texSize;\nvoid main(void)\n{\nivec2 coord=ivec2(vUV*(texSize-1.0));\nfloat f1=texelFetch(sourceTexture,coord,0).r;\nfloat f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;\nfloat f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;\nfloat f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;\nfloat minz=min(min(min(f1,f2),f3),f4);\n#ifdef DEPTH_REDUX\nfloat maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);\n#else\nfloat maxz=max(max(max(f1,f2),f3),f4);\n#endif\nglFragColor=vec4(minz,maxz,0.,0.);\n}\n#elif defined(MAIN)\nuniform vec2 texSize;\nvoid main(void)\n{\nivec2 coord=ivec2(vUV*(texSize-1.0));\nvec2 f1=texelFetch(textureSampler,coord,0).rg;\nvec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;\nvec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;\nvec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;\nfloat minz=min(min(min(f1.x,f2.x),f3.x),f4.x);\nfloat maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);\nglFragColor=vec4(minz,maxz,0.,0.);\n}\n#elif defined(ONEBEFORELAST)\nuniform ivec2 texSize;\nvoid main(void)\n{\nivec2 coord=ivec2(vUV*vec2(texSize-1));\nvec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;\nvec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;\nvec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;\nvec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;\nfloat minz=min(f1.x,f2.x);\nfloat maxz=max(f1.y,f2.y);\nglFragColor=vec4(minz,maxz,0.,0.);\n}\n#elif defined(LAST)\nvoid main(void)\n{\nglFragColor=vec4(0.);\nif (true) { \ndiscard;\n}\n}\n#endif\n`;\n// Sideeffect\n_shaderStore.ShaderStore.ShadersStore[name] = shader;\n/** @internal */\nconst minmaxReduxPixelShader = exports.minmaxReduxPixelShader = {\n  name,\n  shader\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":26}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":10,"column":10}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":4,"column":37},"generated":{"line":10,"column":37}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":66,"column":1}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":61,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":68,"column":24}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":68,"column":25}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":24},"generated":{"line":68,"column":37}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":68,"column":38}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":29},"generated":{"line":68,"column":42}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":30},"generated":{"line":68,"column":43}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":33},"generated":{"line":68,"column":46}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":62,"column":39},"generated":{"line":68,"column":52}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":7},"generated":{"line":70,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":70,"column":6}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":70,"column":28}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":70,"column":31}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":70,"column":38}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":70,"column":39}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":70,"column":61}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":38},"generated":{"line":70,"column":64}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":40},"generated":{"line":71,"column":2}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":44},"generated":{"line":71,"column":6}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":46},"generated":{"line":72,"column":2}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":52},"generated":{"line":73,"column":0}},{"source":"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts","name":null,"original":{"line":64,"column":54},"generated":{"line":73,"column":1}}],"sources":{"../../../../lts/core/generated/Shaders/minmaxRedux.fragment.ts":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"minmaxReduxPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\r#if defined(INITIAL)\nuniform sampler2D sourceTexture;\runiform vec2 texSize;\rvoid main(void)\r{\rivec2 coord=ivec2(vUV*(texSize-1.0));\rfloat f1=texelFetch(sourceTexture,coord,0).r;\rfloat f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;\rfloat f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;\rfloat f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;\rfloat minz=min(min(min(f1,f2),f3),f4);\r#ifdef DEPTH_REDUX\nfloat maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);\r#else\nfloat maxz=max(max(max(f1,f2),f3),f4);\r#endif\nglFragColor=vec4(minz,maxz,0.,0.);\r}\r#elif defined(MAIN)\nuniform vec2 texSize;\rvoid main(void)\r{\rivec2 coord=ivec2(vUV*(texSize-1.0));\rvec2 f1=texelFetch(textureSampler,coord,0).rg;\rvec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;\rvec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;\rvec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;\rfloat minz=min(min(min(f1.x,f2.x),f3.x),f4.x);\rfloat maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);\rglFragColor=vec4(minz,maxz,0.,0.);\r}\r#elif defined(ONEBEFORELAST)\nuniform ivec2 texSize;\rvoid main(void)\r{\rivec2 coord=ivec2(vUV*vec2(texSize-1));\rvec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;\rvec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;\rvec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;\rvec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;\rfloat minz=min(f1.x,f2.x);\rfloat maxz=max(f1.y,f2.y);\rglFragColor=vec4(minz,maxz,0.,0.);\r}\r#elif defined(LAST)\nvoid main(void)\r{\rglFragColor=vec4(0.);\rif (true) { \rdiscard;\r}\r}\r#endif\n`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const minmaxReduxPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"a3498f2aeb5307a836e1543de0b77df6","cacheData":{"env":{}}}